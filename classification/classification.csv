Key,Editor,Authors,Venue,Year,Title,Analysis Method,Analysis Strategy,Implementation Strategy,Specification Strategy,SE Layer,Further Keywords,,
PAM+:ICPE20,,"Juliana Alves Pereira, Mathieu Acher, Hugo Martib, Jean-Marc Jezequel",ICPE,2020,"Sampling Effect on Performance Prediction of Configurable Systems: A Case Study","","","","","","evaluation, effectiveness, open-source tool, non-functional properties, compares Coverage-based/Solver-based/Randomized solver-based/Distance-based/Diversified distance-based/Random, JS20",,
BLLV:TSE20,," Maurice H. ter Beek,  Axel Legay,  Alberto Lluch Lafuente,  Andrea Vandin",TSE,2020,"A Framework for Quantitative Modeling and Analysis of Highly (Re)Configurable Systems","statistical model checking","unoptimized product-based analysis","family-based implementation","specification independent","design","SPL Model Checking, reqex, DSPL, tool, evaluation, no proof, QFLan, MultiVeSta",,
B20,," Paul Maximilian Bittner",(mastersthesis),2020,"Semi-Automated Inference of Feature Traceability During Software Development","","","","","","Advised Mastersthesis",,
KTS+:VaMoS20,," Sebastian Krieter,  Thomas Th&uuml;m,  Sandro Schulze,  Gunter Saake,  Thomas Leich",VaMoS,2020,"YASA: Yet Another Sampling Algorithm","testing","sample-based analysis","implementation independent","specification independent","program","Product Sampling, name=YASA, feature model, expert knowledge, greedy, t-wise coverage, evaluation, sampling efficiency, testing efficiency, open-source tool, testing, compared to Chvatal/ICPL/IncLing, usage of FeatureIDE/Sat4J, SAT, JS20",,
BRK+:VaMoS20,," Tabea Bordis,  Tobias Runge,  Alexander Kn&uuml;ppel,  Thomas Th&uuml;m,  Ina Schaefer",VaMoS,2020,"Variational Correctness-by-Construction","theorem proving","optimized product-based analysis","feature modules, composition-based implementation","feature-based specification","source code","design by contract, feature orientation",,
SSK+:VaMoS20,," Joshua Sprey,  Chico Sundermann,  Sebastian Krieter,  Michael Nieke,  Jacopo Mauro,  Thomas Th&uuml;m,  Ina Schaefer",VaMoS,2020,"SMT-Based Variability Analyses in FeatureIDE","feature-model analysis","family-based analysis","implementation independent","specification independent","","SMT, feature-model analysis, family-based analysis",,
STS:VaMoS20,," Chico Sundermann,  Thomas Th&uuml;m,  Ina Schaefer",VaMoS,2020,"Evaluating #SAT Solvers on Industrial Feature Models","feature-model analysis","family-based analysis","implementation independent","specification independent","","BDD, Feature-Model Analysis, Model Counting, Knowledge Compilation",,
RLK:JOT19,," Dennis Reuling,  Malte Lochau,  Udo Kelter",JOT,2019,"From Imprecise N-Way Model Matching to Precise N-Way Model Merging","","","","","","merge refactoring",,
PAP+:ICST19,," Quentin Plazar,  Mathieu Acher,  Gilles Perrouin,  Xavier Devroey,  Maxime Cordy",ICST,2019,"Uniform Sampling of SAT Solutions for Configurable Systems: Are We There Yet?","testing","","","","","evaluation, open-source tool, sampling efficiency, effectiveness, non-functional properties, compares QuickSampler/UniGen, JS20",,
HNA+:EMSE19,," Axel Halin,  Alexandre Nuttinck,  Mathieu Acher,  Xavier Devroey,  Gilles Perrouin,  Benoit Baudry",EMSE,2019,"Test Them All, Is It Worth It? Assessing Configuration Sampling on the JHipster Web Development Stack","testing, type checking","sample-based analysis","implementation independent","specification independent","program","SPL Testing, evaluation, testing efficiency, effectiveness, testing, evaluation of ICPL/one-disabled/all-one-disabled/one-enabled/all-one-enabled/most-enabled-disabled/similarity heuristic/random sampling, JS20",,
KGS+:ICSE19,," Christian Kaltenecker,  Alexander Grebhahn,  Norbert Siegmund,  Jianmei Guo,  Sven Apel",ICSE,2019,"Distance-Based Sampling of Software Configuration Spaces","","","","","","name=Distance-Based Search, feature model, population-based search, semi-automatic search, evaluation, effectiveness, open-source tool, non-functional properties, compares Distance-Based Search/random sampling/higher-order heuristic/hot-spot heuristic, SPLConqueror, Z3, JS20",,
OGB:SPLC19,," Jeho Oh,  Paul Gazzillo,  Don Batory",SPLC,2019,"t-wise Coverage by Uniform Sampling","testing","","","","","Product Sampling, evaluation, sampling efficiency, testing efficiency, effectiveness, open-source tool, submission to PTR+:SPLC19, JS20",,
OGB+:TR19,," Jeho Oh,  Paul Gazzillo,  Don Batory,  Marijn Heule,  Maggie Myers",(techreport),2019,"Uniform Sampling from Kconfig Feature Models","","","","","","KConfig, Product Sampling, name=Smarch, feature model, local search, no coverage guarantee, evaluation, sampling efficiency, effectiveness, open-source tool, non-functional properties, JS20",,
MOP+:SPLC19,," Daniel-Jesus Munoz,  Jeho Oh,  Monica Pinto,  Lidia Fuentes,  Don Batory",SPLC,2019,"Uniform Random Sampling Product Configurations of Feature Models That Have Numerical Features","","","","","","KConfig, Product Sampling, name=Smarch+BBPF, feature model, local search, no coverage guarantee, evaluation, sampling efficiency, open-source tool, non-functional properties, JS20",,
FAH+:SPLC19,," David Fernandez-Amoros,  Ruben Heradio,  Christoph Mayr-Dorn,  Alexander Egyed",SPLC,2019,"A KConfig Translation to Logic with One-Way Validation System","feature-model analysis","family-based analysis","implementation independent","specification independent","","Feature-Model Analysis, BDD, Knowledge Compilation",,
GTA+:VaMoS19,," Karine Gomes,  Leopoldo Teixeira,  Thayonara Alves,  Marcio Ribeiro,  Rohit Gheyi",VaMoS,2019,"Characterizing Safe and Partially Safe Evolution Scenarios in Product Lines: An Empirical Study","","","","","","SPL Evolution",,
LGL:STTT19,," Lars Luthmann,  Timo Gerecht,  Malte Lochau",STTT,2019,"Sampling Strategies for Product Lines with Unbounded Parametric Real-Time Constraints","testing","sample-based analysis","implementation independent","family-based specification","program","SPL Specification, SPL Testing, SPL Coverage, tool, evaluation, name=minimum/maximum-delay testing, feature model, test artifacts, greedy, specification coverage, sampling efficiency, testing efficiency, available tool, evaluation, non-functional properties, IMITATOR, usage of CoPTA/Uppaal/Z3, ILP, SMT, featured timed automata, infinite configuration space",,
PTR+:SPLC19,," Tobias Pett,  Thomas Th&uuml;m,  Tobias Runge,  Sebastian Krieter,  Malte Lochau,  Ina Schaefer",SPLC,2019,"Product Sampling for Product Lines: The Scalability Challenge","testing","","","","","Product Sampling, Challenge, feature model, t-wise coverage, sampling efficiency, testing efficiency, effectiveness, challenge",,
LRGB:COLA19,,"Michael Lettner, Jorge Rodas, José A. Galindo, David Benavides",COLA,2019,"Automated Analysis of Two-Layered Feature Models with Feature Attributes","feature-model analysis","family-based analysis","implementation independent","specification independent","","Feature-Model Analysis, Extended Feature Models, Download",,
GBT+19,," José A. Galindo,  David Benavides,  Pablo Trinidad,  Antonio-Manuel Gutiérrez-Fernandez,  Antonio Ruiz-Cortés",Computing,2019,"Automated Analysis of Feature Models: Quo Vadis?","feature-model analysis","family-based analysis","implementation independent","specification independent","","Feature-Model Analysis, Survey, Download",,
RRC+:SOSP19,," Xiang (Jenny) Ren,  Kirk Rodrigues,  Luyuan Chen,  Camilo Vega,  Michael Stumm,  Ding Yuan",SOSP,2019,"An Analysis of Performance Evolution of Linux's Core Operations","","","","","","Non-Functional Properties, Performance Evolution, Security, Configuration, TODO",,
RKBL:TOSEM19,," Dennis Reuling,  Udo Kelter,  Johannes B&uuml;rdek,  Malte Lochau",TOSEM,2019,"Automated N-Way Program Merging for Facilitating Family-Based Analyses of Variant-Rich Software","model checking, test-case generation, variant-preserving migration","product-family-based analysis","product-based implementation","domain-independent specification","source code","SPL Migration, SPL Analysis, SPL Testing, Clone-and-Own, control-flow automaton, tool, evaluation, SiMPOSE, C programs, merge refactoring",,
SBT:JSS19,," Gabriela Sampaio,  Paulo Borba,  Leopoldo Teixeira",JSS,2019,"Partially Safe Evolution of Software Product Lines","static analysis","family-based analysis","implementation independent","","theory","SPL Evolution, SPL Konfiguration, evaluation",,
THA+19,," Thomas Th&uuml;m,  Andre van Hoorn,  Sven Apel,  Johannes B&uuml;rdek,  Sinem Getir,  Robert Heinrich,  Reiner Jung,  Matthias Kowal,  Malte Lochau,  Ina Schaefer,  J&uuml;rgen Walter",Managed Software Evolution,2019,"Performance Analysis Strategies for Software Variants and Versions","","","","","","Sampling, Performance Analysis",,
TKK+:JSS19,," Thomas Th&uuml;m,  Alexander Kn&uuml;ppel,  Stefan Kr&uuml;ger,  Stefanie Bolle,  Ina Schaefer",JSS,2019,"Feature-Oriented Contract Composition","analysis method independent","analysis strategy undefined","feature modules, feature-based implementation","feature-based specification","source code","Design by Contract, Feature Orientation, Framing, Behavioral Subtyping, tool, evaluation, no proof, FeatureIDE, FeatureHouse",,
RDD:SoSyM19,," Vitor Rodrigues,  Simone Donetti,  Ferruccio Damiani",SoSyM,2019,"Certifying Delta-Oriented Programs","theorem proving","feature-product-based analysis","delta modules, family-based implementation","family-based specification","source code","tool, evaluation, no proof, COQ",,
ATL+:SoSyM19,," Mustafa Al-Hajjaji,  Thomas Th&uuml;m,  Malte Lochau,  Jens Meinicke,  Gunter Saake",SoSyM,2019,"Effective Product-Line Testing Using Similarity-Based Product Prioritization","testing","sample-based analysis","implementation independent","specification independent","program","SPL Testing, sampling efficiency, testing efficiency, open-source tool, evaluation, usage of random sampling/CASA/Chvatal/ICPL, testing, SPLC18",,
BDG+:SCP19,," Maurice H. ter Beek, Ferruccio Damiani, Stefania Gnesi, Franco Mazzanti, Luca Paolini",SCP,2019,"On the Expressiveness of Modal Transition Systems with Variability Constraints","analysis method undefined","analysis strategy undefined","family-based implementation","specification undefined","design","SPL Model Checking, SPL Specification, no tool, no evaluation, proof, FTS, MTS",,
SYS:IST19,,"Sascha El-Sharkawy, Nozomi Yamagishi-Eichler, Klaus Schmid",IST,2019,"Metrics for Analyzing Variability and its Implementation in Software Product Lines: A Systematic Literature Review","","","","","","SPL Metrics",,
LNTS:JSS19,," Sascha Lity,  Manuel Nieke,  Thomas Th&uuml;m,  Ina Schaefer",JSS,2019,"Retest Test Selection for Product-Line Regression Testing of Variants and Versions of Variants","","","","","","SPL Testing, SPL Evolution",,
WBC:SCP18,," David Wille,  &Ouml;nder Babur,  Loek Cleophas,  Christoph Seidl,  Mark van den Brand,  Ina Schaefer",SCP,2018,"Improving Custom-Tailored Variability Mining Using Outlier and Cluster Detection","","","","","","model clustering",,
KGS:SPLC18,," Christian Kr&ouml;her,  Lea Gerling,  Klaus Schmid",SPLC,2018,"Identifying the Intensity of Variability Changes in Software Product Line Evolution","","","","","","SPL Evolution",,
P18,,"Tobias Pett",(mastersthesis),2018,"Stability of Product Sampling under Product-Line Evolution","","","","","","SPL Analysis, Download",,
CCRC:ASE18,," Mikaela Cashman,  Myra B. Cohen,  Priya Ranjan,  Robert W. Cottingham",ASE,2018,"Navigating the Maze: The Impact of Configurability in Bioinformatics Software","","","","","","Configurable Software",,
HKE+:ASE18,," Dominik Helm,  Florian K&uuml;bler,  Michael Eichberg,  Michael Reif,  Mira Mezini",ASE,2018,"A Unified Lattice Model and Framework for Purity Analyses","","","","","","Static Analysis, Purity",,
BFG:SPLC18,," Maurice H. ter Beek,  Alessandro Fantechi,  Stefania Gnesi",SPLC,2018,"Product Line Models of Large Cyber-physical Systems: The Case of ERTMS/ETCS","","","","","","Feature Modeling",,
BBG:SPLC18,," Davide Basile,  Maurice H. ter Beek,  Stefania Gnesi",SPLC,2018,"Modelling and Analysis with Featured Modal Contract Automata","synthesis","unoptimized product-based analysis","services, family-based implementation","domain-independent specification","design","SPL Model Checking, tool, evaluation, no proof, FMCAT, FeatureIDE",,
VBLL:FM18,,"Andrea Vandin,  Maurice H. ter Beek, Axel Legay,  Alberto Lluch Lafuente",FM,2018,"QFLan: A Tool for the Quantitative Analysis of Highly Reconfigurable Systems","statistical model checking","unoptimized product-based analysis","family-based implementation","family-based specification","design","SPL Model Checking, tool, evaluation, no proof, QFLan, MultiVeSta",,
RLB+:GPCE18,," Sebastian Ruland,  Lars Luthmann,  Johannes B&uuml;rdek,  Sascha Lity,  Thomas Th&uuml;m,  Malte Lochau,  Marcio Ribeiro",GPCE,2018,"Measuring Effectiveness of Sample-Based Product-Line Testing","test-case generation, testing","family-product-based analysis, sample-based analysis","preprocessor, runtime variability, family-based implementation","specification independent","source code","Product Sampling, tool, evaluation, MiLu, CPAchecker, CPATiger, FeatureIDE, SiMPOSE, testing efficiency, effectiveness, open-source tool, evaluation, testing, usage of MiLu/CPAchecker/CPATiger/FeatureIDE/ICPL/SiMPOSE",,
NMS+:GPCE18,," Michael Nieke,  Jacopo Mauro,  Christoph Seidl,  Thomas Th&uuml;m,  Ingrid Chieh Yu,  Felix Franzke",GPCE,2018,"Anomaly Analyses for Feature-Model Evolution","feature-model analysis","family-based analysis","implementation independent","specification independent","","SPL Evolution, Feature-Model Analysis, Incremental Solving",,
TKS:ConfWS18,," Thomas Th&uuml;m,  Sebastian Krieter,  Ina Schaefer",ConfWS,2018,"Product Configuration in the Wild: Strategies for Conflicting Decisions in Web Configurators","","","","","","Product Configuration",,
NST:VariVolution18,," Michael Nieke,  Christoph Seidl,  Thomas Th&uuml;m",VariVolution,2018,"Back to the Future: Avoiding Paradoxes in Feature-Model Evolution","feature-model analysis","family-based analysis","implementation independent","specification independent","","SPL Evolution, Feature-Model Analysis",,
TKL:SPLC18,," Thomas Th&uuml;m,  Sebastian Krieter,  Thomas Leich",SPLC,2018,"Clean Your Variable Code with FeatureIDE","","","","","","FeatureIDE",,
KFT+:SPLC18,," Jacob Kr&uuml;ger,  Wolfram Fenske,  Thomas Th&uuml;m,  Dirk Aporius,  Gunter Saake,  Thomas Leich",SPLC,2018,"Apo-Games: A Case Study for Reverse Engineering Variability from Cloned Java Variants","","","","","","SPL Migration",,
VAT+:SPLC18,," Mahsa Varshosaz,  Mustafa Al-Hajjaji,  Thomas Th&uuml;m,  Tobias Runge,  Mohammad Reza Mousavi,  Ina Schaefer",SPLC,2018,"A Classification of Product Sampling for Software Product Lines","","","","","","SPL Testing, Survey",,
DDP:EMSE18,," Nicolas Dintzner,  Arie van Deursen,  Martin Pinzger",EMSE,2018,"FEVER: An Approach to Analyze Feature-Oriented Changes and Artefact Co-Evolution in Highly Configurable Systems","","","","","","SPL Co-Evolution, Feature Location, SPL Migration",,
GYS+:EMSE18,," Jianmei Guo,  Dingyu Yang,  Norbert Siegmund,  Sven Apel,  Atrisha Sarkar,  Pavel Valov,  Krzysztof Czarnecki,  Andrzej Wasowski,  Huiqun Yu",EMSE,2018,"Data-Efficient Performance Learning for Configurable Systems","performance analysis","sample-based analysis","implementation independent","specification independent","program","SPL Non-Functional Properties, name=random sampling, greedy, feature model, no coverage guarantee, testing efficiency, open-source tool, DECART, evaluation, non-functional properties, SPLC18",,
TKL:Modellierung18,,"Thomas Th&uuml;m, Sebastian Krieter, Thomas Leich",Modellierung,2018,"Feature Modeling and Development with FeatureIDE","","","","","","FeatureIDE",,
AMS+:TOSEM18,," Iago Abal,  Jean Melo,  Stefan Stanciulescu,  Claus Brabrand,  Marcio Ribeiro,  Andrzej Wasowski",TOSEM,2018,"Variability Bugs in Highly Configurable Systems: A Qualitative Analysis","testing, analysis method undefined","sample-based analysis","implementation independent","","","Feature Interaction, no tool, evaluation, name=one-disabled, greedy, feature model, no coverage guarantee, evaluation, testing efficiency, effectiveness, evaluated with real faults, SPLC18",,
DBW:SCP18,,"Aleksandar S. Dimovski, Claus Brabrand, Andrzej Wasowski",SCP,2018,"Variability Abstractions for Lifted Analyses","data-flow analysis","family-based analysis","preprocessor, family-based implementation","domain-independent specification","source code","tool, evaluation",,
BC:SOFSEM17,," &Ouml;nder Babur,  Loek Cleophas",SOFSEM,2017,"Using N-Grams for the Automated Clustering of Structural Models","","","","","","model clustering",,
OBM+:FSE17,," Jeho Oh,  Don Batory,  Margaret Myers,  Norbert Siegmund",FSE,2017,"Finding Near-Optimal Configurations in Product Lines by Random Sampling","","","","","","name=NRS, feature model, local search, evaluation, effectiveness, non-functional properties, unavailable tool, JS20, name=SRS, feature model, local search, evaluation, effectiveness, non-functional properties, unavailable tool, JS20",,
K:TR17,,"Christian K&auml;stner",(techreport),2017,"Differential Testing for Variational Analyses: Experience from Developing KConfigReader","","","","","","Kconfig",,
useBBG:SPLC18,," Davide Basile,  Maurice H. ter Beek,  Felicita Di Giandomenico,  Stefania Gnesi",DSPL,2017,"Orchestration of Dynamic Service Product Lines with Featured Modal Contract Automata","synthesis","unoptimized product-based analysis","services, family-based implementation","domain-independent specification","design","tool, no evaluation, no proof, FMCAT, FeatureIDE",,
JVK+:SEAMS17,," Pooyan Jamshidi,  Miguel Velez,  Christian K&auml;stner,  Norbert Siegmund,  Prasad Kawthekar",SEAMS,2017,"Transfer Learning for Improving Model Predictions in Highly Configurable Software","","","","","","SPL Non-Functional Properties",,
TF17,," Juha Tiihonen,  Alexander Felfernig",J. Intell. Inf. Syst.,2017,"An Introduction to Personalization and Mass Customization","","","","","","Configuration",,
FLS+:CIM17,," Thiago N. Ferreira,  Jackson A. Prado Lima,  Andrei Strickler,  Josiel N. Kuk,  Silvia R. Vergilio,  Aurora Pozo",CIM,2017,"Hyper-Heuristic Based Product Selection for Software Product Line Testing","testing","sample-based analysis","implementation independent","specification independent","program","SPL Testing, name=SPEA2-HH/IBEA-HH, compared to MOEA/D-DRA/NSGA-II, usage of CombTestWeb/FMTS/FaMa, feature model, population-based search, no coverage guarantee, sampling efficiency, effectiveness, unavailable tool, evaluation, testing, feature-model mutation, SPLC18",,
useHNA+:EMSE19,," Axel Halin,  Alexandre Nuttinck,  Mathieu Acher,  Xavier Devroey,  Gilles Perrouin,  Benoit Baudry",(techreport),2017,"Test Them All, Is It worth It? A Ground Truth Comparison of Configuration Sampling Strategies","testing, type checking","sample-based analysis","implementation independent","specification independent","program","SPL Testing, evaluation of ICPL/one-disabled/all-one-disabled/one-enabled/all-one-enabled/most-enabled-disabled/similarity heuristic/random sampling, testing efficiency, effectiveness, evaluation, testing, SPLC18",,
useHNA+:EMSE19too,," Axel Halin,  Alexandre Nuttinck,  Mathieu Acher,  Xavier Devroey,  Gilles Perrouin,  Patrick Heymans",VaMoS,2017,"Yo Variability! JHipster: A Playground for Web-Apps Analyses","testing, type checking","sample-based analysis","implementation independent","specification independent","program","SPL Testing, evaluation of ICPL/one-disabled/all-one-disabled/one-enabled/all-one-enabled/most-enabled-disabled/similarity heuristic/random sampling, testing efficiency, effectiveness, evaluation, testing, SPLC18",,
FLV:SBES17,," Helson L. Jakubovski Filho,  Jackson A. Prado Lima,  Silvia R. Vergilio",SBES,2017,"Automatic Generation of Search-Based Algorithms Applied to the Feature Testing of Software Product Lines","testing","sample-based analysis","implementation independent","specification independent","program","SPL Testing, name=Filho's generated MOEAs, compared to NSGAII/NSGAII-HH, usage of CombTestWeb/FMTS, feature model, population-based search, automatic selection, no coverage guarantee, testing efficiency, effectiveness, unavailable tool, evaluation, testing, feature-model mutation, SPLC18",,
AZAB17,,"Bestoun S. Ahmed, Kamal Z. Zamli, Wasif Afzal, Miroslav Bures",IEEE Access,2017,"Constrained Interaction Testing: A Systematic Literature Study","","","","","","Survey, Sampling",,
SSA:ESECFSE17,," Norbert Siegmund,  Stefan Sobernig,  Sven Apel",ESECFSE,2017,"Attributed Variability Models: Outside the Comfort Zone","","","","","","",,
GRS+:CCPE17,,"Alexander Grebhahn, Carmen Rodrigo, Norbert Siegmund, Francisco Jose Gaspar, Sven Apel",CCPE,2017,"Performance-Influence Models of Multigrid Methods: A Case Study on Triangular Grids","performance analysis","sample-based analysis","implementation independent","specification independent","program","SPL Analysis, evaluation of feature-wise heuristic/pair-wise heuristic/negative feature-wise heuristic, testing efficiency, effectiveness, open-source tool, SPLConqueror, evaluation, non-functional properties, SPLC18",,
FMP:SEFM17,,"Marie Farrell, Rosemary Monahan, James F. Power",SEFM,2017,"Specification Clones: An Empirical Study of the Structure of Event-B Specifications","","","","","","Specification Clones",,
ALHR:TOCE17,," Mathieu Acher,  Roberto E. Lopez-Herrejon,  Rick Rabiser",TOCE,2017,"Teaching Software Product Lines: A Snapshot of Current Practices and Challenges","","","","","","FeatureIDE",,
BTSG:ICFEM17,,"Fabian Benduhn, Thomas Th&uuml;m, Ina Schaefer, Gunter Saake",ICFEM,2017,"Modularization of Refinement Steps for Agile Formal Methods","model checking, theorem proving","unoptimized product-based analysis","feature-based implementation","feature-based specification","requirements, design, source code","SPL Specification, feature moduldes, tool, evaluation, ASM",,
KPK+:SPLC17,," Sebastian Krieter,  Marcus Pinnecke,  Jacob Kr&uuml;ger,  Joshua Sprey,  Christopher Sontag,  Thomas Th&uuml;m,  Thomas Leich,  Gunter Saake",SPLC,2017,"FeatureIDE: Empowering Third-Party Developers","feature-model analysis","family-based analysis","implementation independent","specification independent","source code","Feature Modeling Tool, tool, no evaluation, no proof",,
LSBL:SPLC17,," Lars Luthmann,  Andreas Stephan,  Johannes B&uuml;rdek,  Malte Lochau",SPLC,2017,"Modeling and Testing Product Lines with Unbounded Parametric Real-Time Constraints","test-case generation","family-based analysis","implementation independent","family-based specification","program","SPL Specification, SPL Testing, SPL Coverage, tool, evaluation, SAT, Sat4J, Uppaal, CoPTA, IMITATOR",,
KTS+:ESECFSE17,," Alexander Kn&uuml;ppel,  Thomas Th&uuml;m,  Stephan Mennicke,  Jens Meinicke,  Ina Schaefer",ESECFSE,2017,"Is There a Mismatch Between Real-World Feature Models and Product-Line Research?","","","","","","Feature Modeling, Abstract Features",,
DABW:STTT17,," Aleksandar S. Dimovski,  Ahmad Salim Al-Sibahi,  Claus Brabrand,  Andrzej Wasowski",STTT,2017,"Efficient Family-Based Model Checking via Variability Abstractions","model checking","family-based analysis","preprocessor, family-based implementation","family-based specification","design","Variability Encoding, tool, evaluation, LTL, fLTL, fPromela, FTS",,
LLE:SoSyM17,," Lukas Linsbauer,  Roberto Erick Lopez-Herrejon,  Alexander Egyed",SoSyM,2017,"Variability Extraction and Modeling for Product Variants","variant-preserving migration","product-family-based analysis","clone-and-own, product-family-based implementation","specification independent","source code","VariantSync, tool, evaluation, ECCO",,
MTS+17,,"Jens Meinicke, Thomas Th&uuml;m, Reimar Schr&ouml;ter, Fabian Benduhn, Thomas Leich, Gunter Saake",(book),2017,"Mastering Software Variability with FeatureIDE","family-specific analysis, feature-model analysis, static analysis, syntax checking, testing, type checking","family-based analysis, sample-based analysis, unoptimized product-based analysis","preprocessor, runtime variability, plug-ins, feature modules, aspects, implementation independent","domain-independent specification, feature-based specification, family-based specification","source code","FeatureIDE, tool, no evaluation",,
CBA:OOPSLA17,," Guilherme Cavalcanti,  Paulo Borba,  Paola Accioly",OOPSLA,2017,"Evaluating and Improving Semistructured Merge","","","","","","Merge Conflicts",,
LBG:GPCE17,," Lukas Linsbauer,  Thorsten Berger,  Paul Gr&uuml;nbacher",GPCE,2017,"A Classification of Variation Control Systems","","","","","","VariantSync, Clone-and-Own",,
MAZ:SPLC17,," Jabier Martinez,  Wesley K. G. Assuncao,  Tewfik Ziadi",SPLC,2017,"ESPLA: A Catalog of Extractive SPL Adoption Case Studies","","","","","","VariantSync, SPL Migration",,
DHL:TAP17,," Ferruccio Damiani,  Reiner H&auml;hnle,  Michael Lienhardt",TAP,2017,"Abstraction Refinement for the Analysis of Software Product Lines","static analysis, theorem proving","family-based analysis","delta modules, family-based implementation","family-based specification","source code","Variability Encoding, no tool, no evaluation, no proof",,
G:ESECFSE17,," Paul Gazzillo",ESECFSE,2017,"Kmax: Finding All Configurations of Kbuild Makefiles Statically","family-specific analysis, syntax checking","family-based analysis","build system, preprocessor, family-based implementation","","source code","SPL Analysis, domain-independet specification, tool, evaluation, BDD",,
LCA+:IST17,,"Andre Lanna, Thiago Castro, Vander Alves, Genaina Rodrigues, Pierre-Yves Schobbens, Sven Apel",IST,2017,"Feature-Family-Based Reliability Analysis of Software Product Lines","model checking","feature-family-based analysis","family-based implementation, feature-based implementation","","design","tool, evaluation, ADD",,
MNS+:SPLC17,,"Jacopo Mauro, Michael Nieke, Christoph Seidl, Ingrid Chieh Yu",SPLC,2017,"Anomaly Detection and Explanation in Context-Aware Software Product Lines","feature-model analysis","family-based analysis","implementation independent","specification independent","","Explanation, tool",,
ESKS:SPLC17,," Sascha El-Sharkawy,  Adam Krafczyk,  Klaus Schmid",SPLC,2017,"An Empirical Study of Configuration Mismatches in Linux","family-specific analysis","family-based analysis","preprocessor, family-based implementation","domain-independent specification","source code","tool, evaluation, no proof, SAT",,
WRSS:VaMoS17,," David Wille,  Tobias Runge,  Christoph Seidl,  Sandro Schulze",VaMoS,2017,"Extractive Software Product Line Engineering Using Model-based Delta Module Generation","variant-preserving migration","product-family-based analysis","clone-and-own, product-based implementation","specification independent","model","VariantSync, SPL Migration",,
SWS+:SPLC17,," Alexander Schlie,  David Wille,  Sandro Schulze,  Loek Cleophas,  Ina Schaefer",SPLC,2017,"Detecting Variability in MATLAB/Simulink Models: An Industry-Inspired Technique and Its Evaluation","variant-preserving migration","product-family-based analysis","clone-and-own, product-based implementation","specification independent","model","VariantSync, SPL Migration",,
ALL+:VACE17,," Mustafa Al-Hajjaji,  Sascha Lity,  Remo Lachmann,  Thomas Th&uuml;m,  Ina Schaefer,  Gunter Saake",VACE,2017,"Delta-Oriented Product Prioritization for Similarity-Based Product-Line Testing","testing","sample-based analysis","delta modules, family-based implementation","specification independent","source code, program","SPL Testing, usage of MoSo-PoLiTe, effectiveness, evaluation, testing, SPLC18",,
DW:FASE17,," Aleksandar S. Dimovski,  Andrzej Wasowski",FASE,2017,"Variability-Specific Abstraction Refinement for Family-Based Model Checking","model checking","family-based analysis","preprocessor, family-based implementation","family-based specification","design","SPL Model Checking, Variability Encoding, tool, evaluation, fLTL, fPromela, FTS, LTL, SPIN",,
BVW:FASE17,," Maurice H. ter Beek,  Erik P. de Vink,  Tim A. C. Willemse",FASE,2017,"Family-Based Model Checking with mCRL2","model checking","family-based analysis","family-based implementation","family-based specification","design","SPL Model Checking, Variability Encoding, tool, evaluation, mCRL2, FTS",,
QPV+:SoSyM17,," Rodrigo Queiroz,  Leonardo Passos,  Marco Tulio Valente,  Claus Hunsen,  Sven Apel,  Krzysztof Czarnecki",SoSyM,2017,"The Shape of Feature Code: An Analysis of Twenty C-Preprocessor-Based Systems","","","","","","Preprocessors, SPL Metrics",,
LATS:VaMoS17,," Sascha Lity,  Mustafa Al-Hajjaji,  Thomas Th&uuml;m,  Ina Schaefer",VaMoS,2017,"Optimizing Product Orders Using Graph Algorithms for Improving Incremental Product-line Analysis","","","","","","SPL Testing",,
FMS+:SANER17,," Wolfram Fenske,  Jens Meinicke,  Sandro Schulze,  Steffen Schulze,  Gunter Saake",SANER,2017,"Variant-Preserving Refactorings for Migrating Cloned Products to a Product Line","","","","","","SPL Migration, SPL Refactoring, VariantSync, merge refactoring",,
B:ASE16,," &Ouml;nder Babur",ASE,2016,"Statistical Analysis of Large Sets of Models","","","","","","model clustering",,
WSS:FOSD16,," David Wille,  Sandro Schulze,  Ina Schaefer",FOSD,2016,"Variability Mining of State Charts","","","","","","iterative two-way matching",,
SRA:FASE16,,"Daniel Str&uuml;ber, Julia Rubin, Thorsten Arendt, Marsha Chechik, Gabriele Taentzer, Jennifer Pl&ouml;ger",FASE,2016,"RuleMerger: Automatic Construction of Variability-Based Model Transformation Rules","","","","","","merge refactoring",,
RDZL:VaMoS16,," Valentin Rothberg,  Nicolas Dintzner,  Andreas Ziegler,  Daniel Lohmann",VaMoS,2016,"Feature Models in Linux: From Symbols to Semantics","","","","","","Kconfig",,
BFGM:JLAMP16,,"Maurice H. ter Beek, Alessandro Fantechi, Stefania Gnesi, Franco Mazzanti",JLAMP,2016,"Modelling and Analysing Variability in Product Families: Model Checking of Modal Transition Systems with Variability Constraints","model checking","family-based analysis","family-based implementation","family-based specification","design","SPL Model Checking, MTS, tool, proof, no evaluation, VMC",,
useBVW:FASE17,," Maurice H. ter Beek,  Erik P. de Vink,  Tim A. C. Willemse",FMSPLE,2016,"Towards a Feature mu-Calculus Targeting SPL Verification","model checking","family-based analysis","family-based implementation","family-based specification","design","SPL Model Checking, tool, proof, no evaluation, mCRL2",,
BRV:ISoLA16,," Maurice H. ter Beek,  Michel A. Reniers,  Erik P. de Vink",ISoLA,2016,"Supervisory Controller Synthesis for Product Lines Using CIF 3","synthesis","unoptimized product-based analysis","feature-based implementation","family-based specification","design","SPL Model Checking, tool, no evaluation, no proof, CIF3",,
BLLV:ISoLA16,," Maurice H. ter Beek,  Axel Legay,  Alberto Lluch Lafuente,  Andrea Vandin",ISoLA,2016,"Statistical Model Checking for Product Lines","statistical model checking","unoptimized product-based analysis","family-based implementation","family-based specification","design","SPL Model Checking, tool, evaluation, no proof, QFLan, MultiVeSta, SMT, Maude",,
HW:FOSD16,," Spencer Hubbard,  Eric Walkingshaw",FOSD,2016,"Formula Choice Calculus","","","","","","Variational Solving, Incremental Solving, SPL Analysis",,
MFV:JSERD16,," Rui Angelo Matnei Filho,  Silvia Regina Vergilio",JSERD,2016,"A Multi-Objective Test Data Generation Approach for Mutation Testing of Feature Models","testing","sample-based analysis","implementation independent","specification independent","program","SPL Testing, name=Matnei-Filho's algorithm, usage of FMTS/FaMa/AETG, feature model, population-based search, automatic selection, no coverage guarantee, testing efficiency, effectiveness, unavailable tool, evaluation, testing, feature-model mutation, SPLC18",,
FKPV:CEC16,," Thiago N. Ferreira,  Josiel Neumann Kuk,  Aurora Pozo,  Silvia Regina Vergilio",CEC,2016,"Product Selection Based on Upper Confidence Bound MOEA/D-DRA for Testing Software Product Lines","testing","sample-based analysis","implementation independent","specification independent","program","SPL Testing, name=MOEA/D-DRA, usage of CombTestWeb/FMTS, feature model, population-based search, no coverage guarantee, effectiveness, unavailable tool, evaluation, testing, feature-model mutation, SPLC18",,
HHB:iFM16,," Martin Hentschel,  Reiner H&auml;hnle,  Richard Bubel",iFM,2016,"Can Formal Methods Improve the Efficiency of Code Reviews?","","","","","","Code Review",,
ABB+16,,"Wolfgang Ahrendt, Bernhard Beckert, Richard Bubel, Reiner H&auml;hnle, Peter H. Schmitt, Mattias Ulbrich",(book),2016,"Deductive Software Verification &#8211; The KeY Book","","","","","","Specification, Verification, Design by Contract",,
WSSS:SANER16,,"David Wille, Sandro Schulze, Christoph Seidl, Ina Schaefer",SANER,2016,"Custom-Tailored Variability Mining for Block-Based Languages","variant-preserving migration","product-family-based analysis","clone-and-own, product-based implementation","specification independent","model","VariantSync, SPL Migration, iterative two-way matching",,
WTS+:ISoLA16,,"David Wille, Michael Tiede, Sandro Schulze, Christoph Seidl, Ina Schaefer",ISoLA,2016,"Identifying Variability in Object-Oriented Code Using Model-Based Code Mining","variant-preserving migration","product-based analysis","clone-and-own, product-based implementation","specification independent","source code","VariantSync, SPL Migration",,
FLRE:SBST16,," Stefan Fischer,  Roberto E. Lopez-Herrejon,  Rudolf Ramler,  Alexander Egyed",SBST,2016,"A Preliminary Empirical Assessment of Similarity for Combinatorial Interaction Testing of Software Product Lines","testing","sample-based analysis","implementation independent","specification independent","program","SPL Testing, no tool, evaluation, evaluation of CASA/similarity heuristic, sampling efficiency, testing efficiency, effectiveness, evaluation, testing, SPLC18",,
DL:iFM16,," Ferruccio Damiani,  Michael Lienhardt",iFM,2016,"On Type Checking Delta-Oriented Product Lines","type checking","family-based analysis","delta modules, family-based implementation","domain-independent specification","","SPL Type Checking, SAT, proof",,
SSRS:VaMoS16,," Sandro Schulze,  Michael Schulze,  Uwe Ryssel,  Christoph Seidl",VaMoS,2016,"Aligning Coevolving Artifacts Between Software Product Lines and Products","","","","","","VariantSync",,
SBWW:ICSME16,," Stefan Stanciulescu,  Thorsten Berger,  Eric Walkingshaw,  Andrzej Wasowski",ICSME,2016,"Concepts, Operations, and Feasibility of a Projection-Based Variation Control System","","","","","","VariantSync, Clone-and-Own",,
RGPA:SPLC16,," Daniela Rabiser,  Paul Gr&uuml;nbacher,  Herbert Pr&auml;hofer,  Florian Angerer",SPLC,2016,"A Prototype-Based Approach for Managing Clones in Clone-and-Own Product Lines","","","","","","Clone-and-Own, VariantSync",,
OFAL:SPLC16,," Rafael Olaechea,  Uli Fahrenberg,  Joanne M. Atlee,  Axel Legay",SPLC,2016,"Long-Term Average Cost in Featured Transition Systems","performance analysis","family-based analysis","preprocessor, family-based implementation","specification independent","design","tool, evaluation, FTS, fPromela",,
LBC:SPLC16,," Raul Lapena,  Manuel Ballarin,  Carlos Cetina",SPLC,2016,"Towards Clone-and-Own Support: Locating Relevant Methods in Legacy Products","","","","","","Clone-and-Own, VariantSync",,
ZGB+:SPLC16,," Yi Zhang,  Jianmei Guo,  Eric Blais,  Krzysztof Czarnecki,  Huiqun Yu",SPLC,2016,"A Mathematical Model of Performance-Relevant Feature Interactions","","","","","","Non-Functional Properties, Performance, Feature Interaction",,
PKM+:ICSR16,," Juliana Alves Pereira,  Sebastian Krieter,  Jens Meinicke,  Reimar Schr&ouml;ter,  Gunter Saake,  Thomas Leich",ICSR,2016,"FeatureIDE: Scalable Product Configuration of Variable Systems","","","","","","FeatureIDE, Product Configuration",,
MBW:ICSE16,," Jean Melo,  Claus Brabrand,  Andrzej Wasowski",ICSE,2016,"How Does the Degree of Variability Affect Bug Finding?","","","","","","Feature Interaction",,
BSK+:SOFTENG16,," Fabian Benduhn,  Reimar Schr&ouml;ter,  Andy Kenner,  Christopher Kruczek,  Thomas and Leich,  Gunter Saake",SOFTENG,2016,"Migration from Annotation-Based to Composition-Based Product Lines: Towards a Tool-Driven Process","","","","","","SPL Implementation",,
HZS+:EMSE16,," Claus Hunsen,  Bo Zhang,  Janet Siegmund,  Christian K&auml;stner,  Olaf Le&szlig;enich,  Martin Becker,  Sven Apel",EMSE,2016,"Preprocessor-Based Variability in Open-Source and Industrial Software Systems: An Empirical Study","","","","","","SPL Metrics",,
T16,," Thomas Th&uuml;m",Ausgezeichnete Informatikdissertationen 2015,2016,"Spezifikation und Verifikation von Produktlinien mit Feature-orientierten Vertr&auml;gen","","","","","","SPL Specification, SPL Verification",,
KAT:GPCE16,," Matthias Kowal,  Sofia Ananieva,  Thomas Th&uuml;m",GPCE,2016,"Explaining Anomalies in Feature Models","","","","","","Feature Modeling, FeatureIDE",,
AKT+:GPCE16,," Mustafa Al-Hajjaji,  Sebastian Krieter,  Thomas Th&uuml;m,  Malte Lochau,  Gunter Saake",GPCE,2016,"IncLing: Efficient Product-line Testing Using Incremental Pairwise Sampling","testing","","","","","SPL Testing, FeatureIDE, name=IncLing, compared to CASA/Chvatal/ICPL/IPOG/random sampling, feature model, expert knowledge, greedy, semi-automatic selection, automatic selection, pair-wise coverage, sampling efficiency, testing efficiency, effectiveness, open-source tool, evaluation, SPLC18",,
AMK+:GPCE16,," Mustafa Al-Hajjaji,  Jens Meinicke,  Sebastian Krieter,  Reimar Schr&ouml;ter,  Thomas Th&uuml;m,  Thomas Leich,  Gunter Saake",GPCE,2016,"Tool Demo: Testing Configurable Systems with FeatureIDE","testing, type checking","","","","","SPL Testing, FeatureIDE, name=user-defined configurations, tool support includes also random sampling/CASA/Chvatal/ICPL/IncLing, feature model, expert knowledge, manual selection, feature-wise coverage, open-source tool, FeatureIDE, SPLC18",,
AKTS:FOSD16,," Sofia Ananieva,  Matthias Kowal,  Thomas Th&uuml;m,  Ina Schaefer",FOSD,2016,"Implicit Constraints in Partial Feature Models","","","","","","Feature Modeling, SPL Analysis, Compositionality",,
RRM+:IST16,," Iran Rodrigues,  Marcio Ribeiro,  Flavio Medeiros,  Paulo Borba,  Baldoino Fonseca,  Rohit Gheyi",IST,2016,"Assessing Fine-Grained Feature Dependencies","","","","","","SPL Metrics, Preprocessors",,
SAKS:EMSE16,," Stefan Sobernig,  Sven Apel,  Sergiy Kolesnikov,  Norbert Siegmund",EMSE,2016,"Quantifying Structural Attributes of System Decompositions in 28 Feature-Oriented Software Product Lines","","","","","","SPL Metrics",,
BABN:EMSE16,,"Guillaume Becan, Mathieu Acher, Benoit Baudry, Sana Ben Nasr",EMSE,2016,"Breathing Ontological Knowledge Into Feature Model Synthesis: An Empirical Study","","","","","","Feature-Model Synthesis, Complex Constraints",,
MKR+:ICSE16,," Flavio Medeiros,  Christian K&auml;stner,  Marcio Ribeiro,  Rohit Gheyi,  Sven Apel",ICSE,2016,"A Comparison of 10 Sampling Algorithms for Configurable Systems","testing, analysis method undefined","sample-based analysis","implementation independent","","","Sampling, Survey, tool, evaluation, name=one-enabled, greedy, feature model, no coverage guarantee, open-source tool, evaluation, testing efficiency, effectiveness, compared to ICPL/configuration coverage/one-disabled/random sampling, combinations evaluated, evaluated with real faults, SPLC18, name=most-enabled-disabled, greedy, feature model, no coverage guarantee, open-source tool, evaluation, testing efficiency, effectiveness, compared to ICPL/configuration coverage/one-disabled/random sampling, combinations evaluated, evaluated with real faults, testing, SPLC18",,
TRS+:SPLC16,," Thomas Th&uuml;m,  Marcio Ribeiro,  Reimar Schr&ouml;ter,  Janet Siegmund,  Francisco Dalton",SPLC,2016,"Product-Line Maintenance with Emergent Contract Interfaces","data-flow analysis","family-based analysis","preprocessor, family-based implementation","family-based specification","source code","SPL Analysis, Design by Contract, no tool, evaluation",,
KST+:SPLC16,," Sebastian Krieter,  Reimar Schr&ouml;ter,  Thomas Th&uuml;m,  Wolfram Fenske,  Gunter Saake",SPLC,2016,"Comparing Algorithms for Efficient Feature-Model Slicing","feature-model analysis","family-based analysis","implementation independent","","","Compositional Feature Modeling, tool",,
PTF+:SPLC16,," Tristan Pfofe,  Thomas Th&uuml;m,  Sandro Schulze,  Wolfram Fenske,  Ina Schaefer",SPLC,2016,"Synchronizing Software Variants with VariantSync","variant-preserving migration","unoptimized product-based analysis","clone-and-own","","source code","Clone and Own, SPL Implementation, VariantSync, tool, no evaluation",,
TLK:SPLC16,," Thomas Th&uuml;m,  Thomas Leich,  Sebastian Krieter",SPLC,2016,"Clean Your Variable Code with FeatureIDE","","","","","","FeatureIDE",,
useSBT:JSS19,," Gabriela Sampaio,  Paulo Borba,  Leopoldo Teixeira",SPLC,2016,"Partially Safe Evolution of Software Product Lines","static analysis","family-based analysis","implementation independent","","theory","SPL Evolution, SPL Konfiguration, evaluation",,
MWK+:ASE16,," Jens Meinicke,  Chu-Pan Wong,  Christian K&auml;stner,  Thomas Th&uuml;m,  Gunter Saake",ASE,2016,"On Essential Configuration Complexity: Measuring Interactions In Highly-Configurable Systems","testing","family-based analysis","runtime variability","specification independent","program","SPL Testing, tool, evaluation",,
KAT:TR16,," Matthias Kowal,  Sofia Ananieva,  Thomas Th&uuml;m",(techreport),2016,"Explaining Anomalies in Feature Models","","","","","","Feature Modeling, FeatureIDE",,
ITT:SEAMS16,," Emilio Incerto,  Mirco Tribastone,  Catia Trubiani",SEAMS,2016,"Symbolic Performance Adaptation","symbolic analysis","family-based analysis","implementation independent","family-based specification","program","non-functional properties, runtime adaptation, no tool, SMT",,
BVM:SCP16,," Harsh Beohar,  Mahsa Varshosaz,  Mohammad Reza Mousavi",SCP,2016,"Basic Behavioral Models for Software Product Lines: Expressiveness and Testing Pre-Orders","","","annotation-based implementation","","design","SPL Specification, Survey, SPL Testing, survey",,
useDDP:EMSE18,," Nicolas Dintzner,  Arie van Deursen,  Martin Pinzger",MSR,2016,"FEVER: Extracting Feature-Oriented Changes from Commits","","","","","","Feature Location, SPL Migration",,
SL:SAC16,," Thomas Schmorleiz,  Ralf L&auml;mmel",SAC,2016,"Similarity Management of 'Cloned and Owned' Variants","","","","","","Clone and Own, VariantSync",,
FAHC:ICSR16,," Jaime Font,  Lorena Arcega,  Oystein Haugen,  Carlos Cetina",ICSR,2016,"Feature Location in Model-Based Software Product Lines Through a Genetic Algorithm","","","","","","Feature Location",,
MZP+:ICSR16,," Jabier Martinez,  Tewfik Ziadi,  Mike Papadakis,  Tegawende F. Bissyande,  Jacques Klein,  Yves Le Traon",ICSR,2016,"Feature Location Benchmark for Software Families Using Eclipse Community Releases","","","","","","SPL Migration, Feature Location, VariantSync",,
SSCW:ICSR16,," Ina Schaefer,  Christoph Seidl,  Loek Cleophas,  Bruce W. Watson",ICSR,2016,"Tax-PLEASE - Towards Taxonomy-Based Software Product Line Engineering","","","","","","SPL Refinement",,
LMTS:ICSR16,," Sascha Lity,  Thomas Morbach,  Thomas Th&uuml;m,  Ina Schaefer",ICSR,2016,"Applying Incremental Model Slicing to Product-Line Regression Testing","","","","","","SPL Testing, SPL Analysis",,
SKT+:ICSE16,," Reimar Schr&ouml;ter,  Sebastian Krieter,  Thomas Th&uuml;m,  Fabian Benduhn,  Gunter Saake",ICSE,2016,"Feature-Model Interfaces: The Highway to Compositional Analyses of Highly-Configurable Systems","","","","","","Compositional Feature Modeling, SPL Analysis, Feature Model Analysis",,
MTS+:ICSE16,," Jens Meinicke,  Thomas Th&uuml;m,  Reimar Schr&ouml;ter,  Sebastian Krieter,  Fabian Benduhn,  Gunter Saake,  Thomas Leich",ICSE,2016,"FeatureIDE: Taming the Preprocessor Wilderness","","","","","","FeatureIDE, Preprocessors, Feature Traceability, SPL Analysis",,
CHG+:MODULARITY16,," Bruno B. P. Cafeo,  Claus Hunsen,  Alessandro Garcia,  Sven Apel,  Jaejoon Lee",MODULARITY,2016,"Segregating Feature Interfaces to Support Software Product Line Maintenance","","","","","","Feature Interface",,
KSTS:TR16,," Sebastian Krieter,  Reimar Schr&ouml;ter,  Thomas Th&uuml;m,  Gunter Saake",(techreport),2016,"An Efficient Algorithm for Feature-Model Slicing","","","","","","Compositional Feature Modeling",,
M16,,"Vasco Menzel",(mastersthesis),2016,"Metaanalyse zu Strategien f&uuml;r die formale Verifikation von Software-Produktlinien","","","","","","SPL Analysis",,
ABT+:VaMoS16,," Mustafa Al-Hajjaji,  Fabian Benduhn,  Thomas Th&uuml;m,  Thomas Leich,  Gunter Saake",VaMoS,2016,"Mutation Operators for Preprocessor-Based Variability","","","","","","SPL Testing, SPL Mutation",,
TWS+:VaMoS16,," Thomas Th&uuml;m,  Tim Winkelmann,  Reimar Schr&ouml;ter,  Martin Hentschel,  Stefan Kr&uuml;ger",VaMoS,2016,"Variability Hiding in Contracts for Dependent Software Product Lines","","","","","","SPL Theorem Proving, Compositional Feature Modeling",,
P16,,"Tristan Pfofe",(mastersthesis),2016,"Automating the Synchronization of Software Variants","","","","","","Clone-and-Own, SPL Migration, VariantSync",,
RTS+:JLAMP16,," Alexander von Rhein,  Thomas Th&uuml;m,  Ina Schaefer,  J&ouml;rg Liebig,  Sven Apel",JLAMP,2016,"Variability Encoding: From Compile-Time to Load-Time Variability","analysis method independent","family-based analysis","preprocessor, family-based implementation","specification independent","source code","Variability Encoding, tool, proof",,
D15,," Slawomir Duszynski",(phdthesis),2015,"Analyzing Similarity of Cloned Software Variants Using Hierarchical Set Models","","","","","","iterative two-way matching",,
EKS:GPCE15,," Sascha El-Sharkawy,  Adam Krafczyk,  Klaus Schmid",GPCE,2015,"Analysing the KConfig Semantics and its Analysis Tools","","","","","","Feature Modeling Language, KConfig",,
useBDG+:SCP19,," Maurice H. ter Beek,  Ferruccio Damiani,  Stefania Gnesi,  Franco Mazzanti,  Luca Paolini",SEFM,2015,"From Featured Transition Systems to Modal Transition Systems with Variability Constraints","analysis method undefined","analysis strategy undefined","family-based implementation","specification undefined","design","SPL Model Checking, SPL Specification, no tool, no evaluation, proof, FTS, MTS",,
BLLV:SPLC15,," Maurice H. ter Beek,  Axel Legay,  Alberto Lluch Lafuente,  Andrea Vandin",SPLC,2015,"Statistical Analysis of Probabilistic Models of Software Product Lines with Quantitative Constraints","statistical model checking","unoptimized product-based analysis","family-based implementation","family-based specification","design","SPL Model Checking, tool, evaluation, no proof, QFLan, MultiVeSta, SMT, Maude",,
BLLV:FMSPLE15,," Maurice H. ter Beek, Axel Legay, Alberto Lluch-Lafuente, Andrea Vandin",FMSPLE,2015,"Quantitative Analysis of Probabilistic Models of Software Product Lines with Statistical Model Checking","statistical model checking","unoptimized product-based analysis","family-based implementation","family-based specification","design","SPL Model Checking, tool, evaluation, no proof, PFLan, MultiVeSta, SMT, Maude",,
BFGM:SPLat15,," Maurice H. ter Beek,  Alessandro Fantechi,  Stefania Gnesi,  Franco Mazzanti",SPLat,2015,"Using FMC for Family-Based Analysis of Software Product Lines","model checking","family-based analysis","family-based implementation","family-wide specification","design","SPL Model Checking, Variability Encoding, no tool, no proof, no evaluation, FMC",,
BBV:FMSPLE15,,"Tessa Belder,  Maurice H. ter Beek, Erik P. de Vink",FMSPLE,2015,"Coherent Branching Feature Bisimulation","model checking","family-based analysis","family-based implementation","family-based specification","design","SPL Model Checking, evaluation, proof, FTS, mCRL2",,
GDR+:IST15,," Jose A. Galindo,  Deepak Dhungana,  Rick Rabiser,  David Benavides,  Goetz Botterweck,  Paul Gr&uuml;nbacher",IST,2015,"Supporting Distributed Product Configuration by Integrating Heterogeneous Variability Modeling Approaches","","","","","","Compositional Feature Modeling",,
useMFV:JSERD16,," Rui Angelo Matnei Filho,  Silvia Regina Vergilio",SBES,2015,"A Mutation and Multi-Objective Test Data Generation Approach for Feature Testing of Software Product Lines","testing","sample-based analysis","implementation independent","specification independent","program","SPL Testing, name=Matnei-Filho's algorithm, usage of FMTS/FaMa/AETG, feature model, population-based search, automatic selection, no coverage guarantee, testing efficiency, effectiveness, unavailable tool, evaluation, testing, feature-model mutation, SPLC18",,
LFRE:IWCT15,,"Roberto E. Lopez-Herrejon, Stefan Fischer, Rudolf Ramler, Aalexander Egyed",IWCT,2015,"A First Systematic Mapping Study on Combinatorial Interaction Testing for Software Product Lines","","","","","","Survey, Sampling, TODO",,
SGS+:ASE15,," Atri Sarkar,  Jianmei Guo,  Norbert Siegmund,  Sven Apel,  Krzysztof Czarnecki",ASE,2015,"Cost-Efficient Sampling for Performance Prediction of Configurable Systems","","","","","","name=feature-frequency heuristic, compared to pair-wise/3-wise, feature model, greedy, automatic selection, feature-wise coverage, testing efficiency, effectiveness, open-source tool, evaluation, non-functional properties, SPLC18",,
KTTS:ASE15,," Matthias Kowal,  Max Tschaikowski,  Mirco Tribastone,  Ina Schaefer",ASE,2015,"Scaling Size and Parameter Spaces in Variability-Aware Software Performance Models","performance analysis","family-product-based analysis","delta modules, family-based implementation","specification independent","design","no tool, evaluation, no proof",,
DPL+:VaMoS15,," Xavier Devroey,  Gilles Perrouin,  Axel Legay,  Pierre-Yves Schobbens,  Patrick Heymans",VaMoS,2015,"Covering SPL Behaviour with Sampled Configurations: An Initial Assessment","feature-model analysis, testing","sample-based analysis","implementation independent","specification independent","","Sampling, evaluation, FTS, evaluation, testing efficiency, effectiveness, compared to ICPL/similarity heuristic, FTS, SPLC18",,
BSAB:ICSE15,," Shoham Ben-David,  Baruch Sterin,  Joanne M. Atlee,  Sandy Beidu",ICSE,2015,"Symbolic Model Checking of Product-Line Requirements Using SAT-Based Methods","model checking","family-based analysis","runtime variability, family-based implementation","family-wide specification, feature-based specification","design","SPL Model Checking, Variability Encoding, proof, tool, evaluation, CTL, SAT, BDD",,
NBKC:TSE15,,"Sarah Nadi, Thorsten Berger, Christian Kästner, Krzysztof Czarnecki",TSE,2015,"Where Do Configuration Constraints Stem From? An Extraction Approach and an Empirical Study","","","","","","Feature Modeling, SPL Analysis, Reverse Engineering Variability",,
KSFS:VaMoS15,," Sebastian Krieter,  Reimar Schr&ouml;ter,  Wolfram Fenske,  Gunter Saake",VaMoS,2015,"Use-Case-Specific Source-Code Documentation for Feature-Oriented Programming","","","","","","SPL Documentation, Feature Orientation, FeatureIDE",,
useDBW:SCP18,,"Aleksandar S. Dimovski, Claus Brabrand, Andrzej Wasowski",ECOOP,2015,"Variability Abstractions: Trading Precision for Speed in Family-Based Analyses","data-flow analysis","family-based analysis","preprocessor, family-based implementation","domain-independent specification","source code","tool, evaluation",,
BKL+:AUSE15,," Johannes B&uuml;rdek,  Timo Kehrer,  Malte Lochau,  Dennis Reuling,  Udo Kelter,  Andy Sch&uuml;rr",AUSE,2015,"Reasoning about Product-Line Evolution Using Complex Feature Model Differences","","","","","","SPL Evolution, Feature Modeling",,
VBM:ICFEM15,,"Mahsa Varshosaz, Harsh Beohar, Mohammad Reza Mousavi",ICFEM,2015,"Delta-Oriented FSM-Based Testing","test-case generation, testing","regression-based analysis","implementation independent","feature-based specification","design","SPL Specification, SPL Testing, delta models, finite state machines",,
FLLE:ICSE15,," Stefan Fischer,  Lukas Linsbauer,  Roberto E. Lopez-Herrejon,  Alexander Egyed",ICSE,2015,"The ECCO Tool: Extraction and Composition for Clone-and-Own","variant-preserving migration","product-family-based analysis","clone-and-own, product-family-based implementation","specification independent","source code","VariantSync, SPL Migration, Clone-and-Own, tool, evaluation, ECCO",,
LFLE:SST15,," Lukas Linsbauer,  Stefan Fischer,  Roberto E. Lopez-Herrejon,  Alexander Egyed",SST,2015,"Using Traceability for Incremental Construction and Evolution of Software Product Portfolios","variant-preserving migration","product-family-based analysis","clone-and-own, product-family-based implementation","specification independent","source code","VariantSync, tool, evaluation",,
ALL+:GECCO15,," Wesley K.G. Assuncao,  Roberto E. Lopez-Herrejon,  Lukas Linsbauer,  Silvia R. Vergilio,  Alexander Egyed",GECCO,2015,"Extracting Variability-Safe Feature Models from Source Code Dependencies in System Variants","","","","","","Feature-Model Synthesis",,
JBAC:SPLC15,," Wenbin Ji,  Thorsten Berger,  Michal Antkiewicz,  Krzysztof Czarnecki",SPLC,2015,"Maintaining Feature Traceability with Embedded Annotations","","","","","","VariantSync, Feature Location",,
MZB+:SPLC15,," Jabier Martinez,  Tewfik Ziadi,  Tegawende F. Bissyande,  Jacques Klein,  Yves Le Traon",SPLC,2015,"Bottom-Up Adoption of Software Product Lines: A Generic and Extensible Approach","","","","","","VariantSync, SPL Migration, Clone-and-Own",,
useSKT+:ICSE16,," Reimar Schr&ouml;ter,  Sebastian Krieter,  Thomas Th&uuml;m,  Fabian Benduhn,  Gunter Saake",(techreport),2015,"Feature-Model Interfaces for Compositional Analyses","","","","","","Compositional Feature Modeling",,
ES:STTT15,," Holger Eichelberger,  Klaus Schmid",STTT,2015,"Mapping the Design Space of Textual Variability Modeling Languages: A Refined Analysis","","","","","","Feature Modeling, Survey",,
BLB+:FASE15,,"Johannes B&uuml;rdek, Malte Lochau, Stefan Bauregger, Andreas Holzer,  Alexander von Rhein, Sven Apel, Dirk Beyer",FASE,2015,"Facilitating Reuse in Multi-Goal Test-Suite Generation for Software Product Lines","","","","","","SPL Testing, SPL Model Checking",,
RGA+:ICSE15,," Alexander von Rhein,  Alexander Grebhahn,  Sven Apel,  Norbert Siegmund,  Dirk Beyer,  Thorsten Berger",ICSE,2015,"Presence-Condition Simplification in Highly Configurable Systems","","","","","","Feature Modeling, SPL Analysis",,
SSW:ICSME15,," Stefan Stanciulescu,  Sandro Schulze,  Andrzej Wasowski",ICSME,2015,"Forked and Integrated Variants in an Open-Source Firmware Project","","","","","","VariantSync, Clone-and-Own",,
SGKA:ESECFSE15,," Norbert Siegmund,  Alexander Grebhahn,  Sven Apel,  Christian K&auml;stner",ESECFSE,2015,"Performance-Influence Models for Highly Configurable Systems","","","","","","SPL Non-Functional Properties, evaluation of option-wise/negative option-wise/pair-wise, testing efficiency, effectiveness, evaluation, non-functional properties, open-source tool, SPLConqueror, SPLC18",,
LEGP:MODELS15,,"Daniela Lettner, Klaus Eder, Paul Gr&uuml;nbacher, Herbert Pr&auml;hofer",MODELS,2015,"Feature Modeling of Two Large-Scale Industrial Software Systems: Experiences and Lessons Learned","","","","","","Feature Modeling, Compositional Feature Modeling",,
OGRT:SLE15,," Lina Ochoa,  Oscar Gonzalez-Rojas,  Thomas Th&uuml;m",SLE,2015,"Using Decision Rules for Solving Conflicts in Extended Feature Models","","","","","","SPL Non-Functional Properties, Feature Modeling",,
RBR+:SPLC15,," Dennis Reuling,  Johannes B&uuml;rdek,  Serge Rot&auml;rmel,  Malte Lochau,  Udo Kelter",SPLC,2015,"Fault-Based Product-Line Testing: Effective Sample Generation Based on Feature-Diagram Mutation","testing","","","","","SPL Testing, Feature Modeling, name=feature-diagram mutation, feature model, greedy, no coverage guarantee, sampling efficiency, testing efficiency, effectiveness, available tool, evaluation, no prioritization, compared to ICPL, feature-model mutation, SPLC18",,
LBS:SANER15,," Sascha Lity,  Hauke Baller,  Ina Schaefer",SANER,2015,"Towards Incremental Model Slicing for Delta-Oriented Software Product Lines","","","","","","SPL Static Analysis, Product-Based Analysis, SPL Testing, Delta Orientation",,
AGV:ICST15,,"Paolo Arcaini, Angelo Gargantini, Paolo Vavassori",ICST,2015,"Generating Tests for Detecting Faults in Feature Models","testing, type checking","","","","","name=distinguishing configurations, compared to pairwise sampling/all valid configurations, feature model, greedy, automatic selection, no coverage guarantee, sampling efficiency, testing efficiency, effectiveness, unavailable tool, evaluation, feature-model mutation, SPLC18",,
S15,,"Thomas Schmorleiz",(mastersthesis),2015,"An Annotation-Centric Approach to Similarity Management","","","","","","VariantSync, Clone-and-Own",,
WKP:VaMoS15,," Jens H. Weber,  Anita Katahoire,  Morgan Price",VaMoS,2015,"Uncovering Variability Models for Software Ecosystems from Multi-Repository Structures","","","","","","VariantSync, Clone-and-Own, Feature Modeling",,
LG:VaMoS15,," Daniela Lettner,  Paul Gr&uuml;nbacher",VaMoS,2015,"Using Feature Feeds to Improve Developer Awareness in Software Ecosystem Evolution","","","","","","VariantSync, Feature Modeling, SPL Evolution, Ecosystem",,
BDS:SCP14,,"Lorenzo Bettini, Ferruccio Damiani, Ina Schaefer",SCP,2015,"Implementing Type-Safe Software Product Lines Using Parametric Traits","type checking","feature-product-based analysis","composition-based implementation","domain-independent specification","source code / program","SPL Type Checking, SPL Evolution, SPL Implementation, Traits, CSUR14, PhD15",,
MJ:TAOSD14,," Tim Molderez,  Dirk Janssens",TAOSD,2015,"Modular Reasoning in Aspect-Oriented Languages from a Substitution Perspective","","","","","","Design by Contract, Aspect Orientation",,
VLFF14,," Birgit Vogel-Heuser,  Christoph Legat,  Jens Folmer,  Stefan Feldmann",(techreport),2014,"Researching Evolution in Industrial Plant Automation: Scenarios and Documentation of the Pick and Place Unit","","","","","","PPU",,
FMB+:ASE14,,"Jean-Remy Falleri, Floreal Morandat, Xavier Blanc, Matias Martinez, Martin Monperrus",ASE,2014,"Fine-Grained and Accurate Source Code Differencing","","","","","","tree differencing, program diffing",,
SPH+:EXWA14,," Sergio Segura,  Jose A. Parejo,  Robert M. Hierons,  David Benavides,  Antonio Ruiz-Cortes",EXWA,2014,"Automated Generation of Computationally Hard Feature Models Using Evolutionary Algorithms","","","","","","Random Feature Models",,
CR:IJAST14,," Anastasia Cmyrev,  Ralf Reissing",IJAST,2014,"Efficient and Effective Testing of Automotive Software Product Lines","testing","sample-based analysis","implementation independent","specification independent","program","SPL Testing, name=Cmyrev's greedy algorithm, compared to MoSo-PoLiTe, feature model, greedy, semi-automatic selection, feature-wise coverage, requirements coverage, sampling efficiency, testing efficiency, effectiveness, unavailable tool, evaluation, testing, SPLC18, name=Cmyrev's simulated annealing, compared to MoSo-PoLiTe, feature model, local search, semi-automatic selection, no coverage guarantee, sampling efficiency, testing efficiency, effectiveness, unavailable tool, evaluation, testing, SPLC18",,
GKS+:PPL14,,"Alexander Grebhahn, Sebastian Kuckuk, Christian Schmitt, Harald K&ouml;stler, Norbert Siegmund, Sven Apel, Frank Hannig, J&uuml;rgen Teich",PPL,2014,"Experiments on Optimizing the Performance of Stencil Codes with SPL Conqueror","performance analysis","sample-based analysis","implementation independent","specification independent","program","SPL Analysis, name=function-learning heuristic, compared to feature-wise heuristic/pair-wise heuristic/higher-order heuristic/hot-spot heuristic, feature model, greedy, automatic selection, no coverage guarantee, testing efficiency, effectiveness, open-source tool, SPLConqueror, evaluation, non-functional properties, SPLC18",,
KST:FASE14,," Matthias Kowal,  Ina Schaefer,  Mirco Tribastone",FASE,2014,"Family-Based Performance Analysis of Variant-Rich Software Systems","performance analysis","family-product-based analysis","delta modules, family-based implementation","specification independent","design","no tool, evaluation, no proof",,
LHF+:CEC14,,"Roberto Erick Lopez-Herrejon, Javier Ferrer, Francisco Chicano, Alexander Egyed, Enrique Alba",CEC,2014,"Comparative Analysis of Classical Multi-Objective Evolutionary Algorithms and Seeding Strategies for Pairwise Testing of Software Product Lines","testing","","","","","SPL Testing, usage of SPLAR/FaMa/SPLCA/jMetal, usage of NSGA-II/MOCell/SPEA2/PAES, feature model, population-based search, automatic selection, no coverage guarantee, sampling efficiency, testing efficiency, effectiveness, open-source tool, evaluation, seeding strategies: size-based random seeding/greedy seeding/single-objective-based seeding, SPLC18",,
TDS+:ATC14,," Reinhard Tartler,  Christian Dietrich,  Julio Sincero,  Wolfgang Schr&ouml;der-Preikschat,  Daniel Lohmann",ATC,2014,"Static Analysis of Variability in System Software: The 90,000 #Ifdefs Issue","family-specific analysis, type checking","family-product-based analysis, sample-based analysis","build system, preprocessor, family-based implementation","domain-independent specification","source code","SPL Analysis, Sampling, tool, evaluation, no proof, SAT, name=vampyr, feature model, greedy, implementation artifacts, no coverage guarantee, open-source tool, evaluation, effectiveness, SPLC18, name=all-yes-config, feature model, manual selection, expert knowledge, no coverage guarantee, evaluation, effectiveness, type checking, SPLC18",,
ZHP+:SAC14,," Tewfik Ziadi,  Christopher Henard,  Mike Papadakis,  Mikal Ziane,  Yves Le Traon",SAC,2014,"Towards a Language-Independent Approach for Reverse-Engineering of Software Product Lines","","","","","","VariantSync, merge refactoring",,
SSA:Modellierung14,,"Christoph Seidl, Ina Schaefer, Uwe A&szlig;mann",Modellierung,2014,"DeltaEcore - A Model-Based Delta Language Generation Framework","","","","","","Delta Orientation, SPL Implementation",,
KHS+:PPPJ14,," Jonathan Koscielny,  S&ouml;nke Holthusen,  Ina Schaefer,  Sandro Schulze,  Lorenzo Bettini,  Ferruccio Damiani",PPPJ,2014,"DeltaJ 1.5: Delta-Oriented Programming for Java 1.5","","","","","","Delta Orientation, SPL Implementation",,
WKE+:Onward14,," Eric Walkingshaw,  Christian K&auml;stner,  Martin Erwig,  Sven Apel,  Eric Bodden",Onward,2014,"Variational Data Structures: Exploring Tradeoffs in Computing with Variability","data-flow analysis, syntax checking, type checking","family-based analysis","preprocessor, feature modules, family-based implementation, feature-based implementation","domain-independent specification","source code","SPL Analysis",,
DPL+:ISoLA14,," Xavier Devroey,  Gilles Perrouin,  Axel Legay,  Maxime Cordy,  Pierre-Yves Schobbens,  Patrick Heymans",ISoLA,2014,"Coverage Criteria for Behavioural Testing of Software Product Lines","testing","analysis strategy undefined","implementation independent","family-based specification","","SPL Testing, SPL Coverage, no tool, no evaluation, FTS",,
SDCE:ICSE14,," Todd W. Schiller,  Kellen Donohue,  Forrest Coward,  Michael D. Ernst",ICSE,2014,"Case Studies and Tools for Contract Specifications","","","","","","Design by Contract",,
DPS:SPLat14,," Xavier Devroey,  Gilles Perrouin,  Pierre-Yves Schobbens",SPLat,2014,"Abstract Test Case Generation for Behavioural Testing of Software Product Lines","testing","unoptimized product-based analysis","annotation-based implementation","family-based specification","design","",,
BV:ISoLA14,," Maurice H. ter Beek,  Erik P. de Vink",ISoLA,2014,"Towards Modular Verification of Software Product Lines with mCRL2","model checking","family-based analysis","annotation-based implementation","family-wide specification","design","SPL Model Checking, PhD15",,
VK:APSEC14,," Mahsa Varshosaz,  Ramtin Khosravi",APSEC,2014,"Model Checking of Software Product Lines in Presence of Nondeterminism and Probabilities","model checking","family-based analysis","annotation-based implementation","family-wide specification","design","SPL Model Checking, probabilistic model checking, Markov decision process, PCTL, non-determinism, no tool, no evaluation",,
LAG+:ICSME14,," Lukas Linsbauer,  Florian Angerer,  Paul Gr&uuml;nbacher,  Daniela Lettner,  Herbert Pr&auml;hofer,  Roberto E. Lopez-Herrejon,  Alexander Egyed",ICSME,2014,"Recovering Feature-to-Code Mappings in Mixed-Variability Software Systems","variant-preserving migration","product-family-based analysis","clone-and-own, product-family-based implementation","specification independent","source code","Feature Location, VariantSync, tool, evaluation",,
useLLE:SoSyM16b,," Stefan Fischer,  Lukas Linsbauer,  Roberto Erick Lopez-Herrejon,  Alexander Egyed",ICSME,2014,"Enhancing Clone-and-Own with Systematic Reuse for Developing Software Variants","variant-preserving migration","product-family-based analysis","clone-and-own, product-family-based implementation","specification independent","source code","VariantSync, Clone-and-Own, tool, evaluation",,
KKS:ICSME14,," Benjamin Klatt,  Klaus Krogmann,  Christoph Seidl",ICSME,2014,"Program Dependency Analysis for Consolidating Customized Product Copies","variant-preserving migration","product-based analysis","product-based implementation","","source code / program","SPL Migration, Clone-and-Own, VariantSync, specification undefined (none)",,
BNR+:MODELS14,," Thorsten Berger,  Divya Nair,  Ralf Rublack,  Joanne M. Atlee,  Krzysztof Czarnecki,  Andrzej Wasowski",MODELS,2014,"Three Cases of Feature-Based Variability Modeling in Industry","","","","","","Clone-and-Own",,
DSW:SPLC14,," Ferruccio Damiani,  Ina Schaefer,  Tim Winkelmann",SPLC,2014,"Delta-Oriented Multi Software Product Lines","","","","","","MPL, Delta Orientation, Compositional Feature Modeling",,
BL:FOSD14,," Hauke Baller,  Malte Lochau",FOSD,2014,"Towards Incremental Test Suite Optimization for Software Product Lines","testing","sample-based analysis","implementation independent","family-based specification","design, program","SPL Testing, no tool, no evaluation, no proof, name=incremental test-suite optimization, product set, test artifacts, greedy, requirements coverage, unavailable tool, no evaluation, no proof, testing",,
PHL:ICST14,," Mike Papadakis,  Christopher Henard,  Yves Le Traon",ICST,2014,"Sampling Program Inputs with Mutation Analysis: Going Beyond Combinatorial Interaction Testing","","","","","","SPL Testing",,
HPL:SBSE14,," Christopher Henard,  Mike Papadakis,  Yves Le Traon",(incollection),2014,"Mutation-Based Generation of Software Product Line Test Configurations","testing","","","","","SPL Testing, name=Henard's CNF mutation, compared to random sampling, feature model, local search, automatic selection, no coverage guarantee, sampling efficiency, testing efficiency, effectiveness, open-source tool, evaluation, feature-model mutation, SPLC18",,
SO:SPLC14,," Borislava I. Simidchieva,  Leon J. Osterweil",SPLC,2014,"Generation, Composition, and Verification of Families of Human-Intensive Systems","model checking","family-based analysis","services, feature-based implementation","family-wide specification","","Variability Encoding, tool, evaluation",,
SWZ:InnoSWDev14,,"Yufeng Shi, Ou Wei, Yu Zhou",InnoSWDev,2014,"Model Checking Partial Software Product Line Designs","model checking","family-based analysis","annotation-based implementation","family-wide specification","design","SPL Model Checking, Variability Encoding, PhD15",,
BH14,,"Bernhard Beckert, Reiner H&auml;hnle",IS,2014,"Reasoning and Verification: State of the Art and Current Trends","","","","","","Verification, Testing",,
M14,,"Jens Meinicke",(mastersthesis),2014,"VarexJ: A Variability-Aware Interpreter for Java Applications","","","","","","SPL Testing",,
K14,,"Stefan Kr&uuml;ger",(mastersthesis),2014,"Product-Line Verification with Abstract Contracts","","","","","","SPL Theorem Proving, Variability Encoding",,
RBB14,," Marcio Ribeiro,  Paulo Borba,  Claus Brabrand",(book),2014,"Emergent Interfaces for Feature Modularization","","","","","","SPL Static Analysis, Preprocessors",,
ABB+:VSTTE14,," Wolfgang Ahrendt,  Bernhard Beckert,  Daniel Bruns,  Richard Bubel,  Christoph Gladisch,  Sarah Grebing,  Reiner H&auml;hnle,  Martin Hentschel,  Vladimir Klebanov,  Wojciech Mostowski,  Christoph Scheben,  Peter H. Schmitt,  Mattias Ulbrich",VSTTE,2014,"The KeY Platform for Verification and Analysis of Java Programs","","","","","","Design by Contract, Verification",,
SFG+:SCP14,," Gabriel Coutinho Sousa Ferreira,  Felipe Nunes Gaia,  Eduardo Figueiredo,  Marcelo de Almeida Maia",SCP,2014,"On the Use of Feature-Oriented Programming for Evolving Software Product Lines &#8211; A Comparative Study","","","","","","Feature Orientation, SPL Analysis, Modularity",,
MMCA:IST14,," Ivan Do Carmo Machado,  John D. McGregor,  Yguarata Cerqueira Cavalcanti,  Eduardo Santana De Almeida",IST,2014,"On Strategies for Testing Software Product Lines: A Systematic Literature Review","","","","","","SPL Testing, Survey, PRG",,
BV:FormaliSE14,," Maurice H. ter Beek,  Erik P. de Vink",FormaliSE,2014,"Using mCRL2 for the Analysis of Software Product Lines","model checking","family-based analysis","annotation-based implementation","family-wide specification","design","SPL Model Checking, PhD15",,
NKN:ICSE14,," Hung Viet Nguyen,  Christian K&auml;stner,  Tien N. Nguyen",ICSE,2014,"Exploring Variability-Aware Execution for Testing Plugin-Based Web Applications","testing","family-based analysis","annotation-based implementation","family-wide specification","source code / program","SPL Testing",,
useNBKC:TSE15,," Sarah Nadi,  Thorsten Berger,  Christian K&auml;stner,  Krzysztof Czarnecki",ICSE,2014,"Mining Configuration Constraints: Static Analyses and Empirical Results","","","","","","Feature-Model Mining, Preprocessors",,
RBK:ICSE14,," Marcio Ribeiro,  Paulo Borba,  Christian K&auml;stner",ICSE,2014,"Feature Maintenance with Emergent Interfaces","static analysis","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","SPL Static Analysis, Preprocessors, CSUR14, PhD15",,
NKN:FSE14,,"Hung Viet Nguyen, Christian K&auml;stner, Tien N. Nguyen",FSE,2014,"Building Call Graphs for Embedded Client-Side Code in Dynamic Web Applications","static analysis, syntax checking, testing","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","SPL Testing, SPL Static Analysis, SPL Syntax Checking, Variability Encoding, PhD15",,
CHL+:FSE14,," Maxime Cordy,  Patrick Heymans,  Axel Legay,  Pierre-Yves Schobbens,  Bruno Dawagne,  Martin Leucker",FSE,2014,"Counterexample Guided Abstraction Refinement of Product-Line Behavioural Models","","","","","","SPL Model Checking",,
AV:REVE14,," Wesley Klewerton Guez Assuncao,  Silvia Regina Vergilio",REVE,2014,"Feature Location for Software Product Line Migration: A Mapping Study","","","","","","SPL Migration, Survey, VariantSync",,
APL+:SPLC14,," Florian Angerer,  Herbert Pr&auml;hofer,  Daniela Lettner,  Andreas Grimmer,  Paul Gr&uuml;nbacher",SPLC,2014,"Identifying Inactive Code in Product Lines with Configuration-Aware System Dependence Graphs","","","","","","SPL Static Analysis",,
T:SPLC14,," Mirco Tribastone",SPLC,2014,"Behavioral Relations in a Process Algebra for Variants","","","","","","SPL Static Analysis",,
DTP:SPLC14,," Arnaud Dieumegard,  Andres Toom,  Marc Pantel",SPLC,2014,"A Software Product Line Approach for Semantic Specification of Block Libraries in Dataflow Languages","","","","","","SPL Theorem Proving, SPL Specification",,
CWD+:SPLat14,," Maxime Cordy,  Marco Willemart,  Bruno Dawagne,  Patrick Heymans,  Pierre-Yves Schobbens",SPLatools,2014,"An Extensible Platform for Product-Line Behavioural Analysis","model checking","family-based analysis","annotation-based implementation","family-based specification","design","SPL Model Checking, PhD15",,
BV:SPLat14,," Maurice H. ter Beek,  Erik P. de Vink",SPLatools,2014,"Software Product Line Analysis with mCRL2","model checking","family-based analysis","annotation-based implementation","family-wide specification","design","SPL Model Checking, PhD15",,
BHP:ISoLA14,,"Richard Bubel, Reiner H&auml;hnle, Maria Pelevina",ISoLA,2014,"Fully Abstract Operation Contracts","theorem proving","regression-based analysis","product-based implementation","product-based specification","source code / program","Design by Contract, Theorem Proving",,
LMBR:ISoLA14,," Malte Lochau,  Stephan Mennicke,  Hauke Baller,  Lars Ribbeck",ISoLA,2014,"DeltaCCS: A Core Calculus for Behavioral Change","model checking","regression-based analysis","composition-based implementation","family-wide specification","design","SPL Model Checking, PhD15",,
KRA:FOSD14,," Sergiy Kolesnikov,  Judith Roth,  Sven Apel",FOSD,2014,"On the Relation Between Internal and External Feature Interactions in Feature-Oriented Product Lines: A Case Study","","","","","","Feature Interaction, SPL Metrics",,
KS:ICSME14,,"Frederik Kanning, Sandro Schulze",ICSME,2014,"Program Slicing in the Presence of Preprocessor Variability","static analysis","family-based analysis","annotation-based implementation","","source code / program","SPL Analysis, specification undefined (none), PhD15",,
FGFS:JUCS14,,"Felype Ferreira, Rohit Gheyi, Paulo Borba, Gustavo Soares",JUCS,2014,"A Toolset for Checking SPL Refinements","refactoring","regression-based analysis","","specification independent","source code","SPL Evolution, SPL Refactoring, SPL CIA, SPL Analysis, tool, evaluation",,
useAMS+:TOSEM18,," Iago Abal,  Claus Brabrand,  Andrzej Wasowski",ASE,2014,"42 Variability Bugs in the Linux Kernel: A Qualitative Analysis","testing, analysis method undefined","sample-based analysis","implementation independent","","","Feature Interaction, no tool, evaluation, name=one-disabled, greedy, feature model, no coverage guarantee, evaluation, testing efficiency, effectiveness, evaluated with real faults, SPLC18",,
HPP+:TSE14,," Christopher Henard,  Mike Papadakis,  Gilles Perrouin,  Jacques Klein,  Patrick Heymans,  Yves Le Traon",TSE,2014,"Bypassing the Combinatorial Explosion: Using Similarity to Generate and Prioritize T-Wise Test Configurations for Software Product Lines","testing","","","","","SPL Testing, Sampling, name=similarity heuristic, feature model, local search, no coverage guarantee, evaluation, sampling efficiency, testing efficiency, effectiveness, a.k.a. PLEDGE, compared to IPOG/CASA/ICPL, SAT, SPLC18",,
useATL+:SoSyM16,," Mustafa Al-Hajjaji,  Thomas Th&uuml;m,  Jens Meinicke,  Malte Lochau,  Gunter Saake",SPLC,2014,"Similarity-Based Prioritization in Software Product-Line Testing","testing","sample-based analysis","implementation independent","specification independent","program","SPL Testing, PhD15, sampling efficiency, testing efficiency, open-source tool, evaluation, usage of random sampling/CASA/Chvatal/ICPL, testing, SPLC18",,
TMB+:SPLC14,," Thomas Th&uuml;m,  Jens Meinicke,  Fabian Benduhn,  Martin Hentschel,  Alexander von Rhein,  Gunter Saake",SPLC,2014,"Potential Synergies of Theorem Proving and Model Checking for Software Product Lines","model checking, theorem proving","family-based analysis","composition-based implementation","feature-based specification","source code / program","SPL Theorem Proving, SPL Model Checking, Variability Encoding, PhD15",,
MTS+:SPLat14,," Jens Meinicke,  Thomas Th&uuml;m,  Reimar Schr&ouml;ter,  Fabian Benduhn,  Gunter Saake",SPLatools,2014,"An Overview on Analysis Tools for Software Product Lines","","","","","","SPL Theorem Proving, SPL Model Checking, SPL Theorem Proving, SPL Static Analysis",,
SSTS:SPLC14,," Reimar Schr&ouml;ter,  Norbert Siegmund,  Thomas Th&uuml;m,  Gunter Saake",SPLC,2014,"Feature-Context Interfaces: Tailored Programming Interfaces for Software Product Lines","type checking","family-based analysis","composition-based implementation","domain-independent specification","source code / program","SPL Type Checking, SPL Implementation, PhD15",,
CE:ICFP14,," Sheng Chen,  Martin Erwig",ICFP,2014,"Type-Based Parametric Analysis of Program Families","type checking","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","SPL Type Checking, CSUR14, PhD15",,
SR:SATTOSE14,," Thomas Schmorleiz,  Ralf L&auml;mmel",SATTOSE,2014,"Similarity Management via History Annotation","","","","","","VariantSync",,
TAK+:CSUR14,," Thomas Th&uuml;m,  Sven Apel,  Christian K&auml;stner,  Ina Schaefer,  Gunter Saake",CSUR,2014,"A Classification and Survey of Analysis Strategies for Software Product Lines","","","","","","Survey, SPL Type Checking, SPL Theorem Proving, SPL Model Checking",,
AJB+:ICSE14,," Michal Antkiewicz,  Wenbin Ji,  Thorsten Berger,  Krzysztof Czarnecki,  Thomas Schmorleiz,  Ralf L&auml;mmel,  Stefan Stanciulescu,  Andrzej Wasowski,  Ina Schaefer",ICSE,2014,"Flexible Product Line Engineering with a Virtual Platform","","","","","","Clone-and-Own, SPL Migration, VariantSync",,
HSMI:ICST14,," Hauke Baller,  Sascha Lity,  Malte Lochau,  Ina Schaefer",ICST,2014,"Multi-Objective Test Suite Optimization for Incremental Product Family Testing","test-case selection, testing","sample-based analysis, optimized product-based analysis","implementation independent","family-based specification","requirements","SPL Testing, name=incremental heuristic, greedy, product set, test artifacts, requirements coverage, sampling efficiency, effectiveness, unavailable tool, evaluation, testing",,
EFN:FM14,," H.-Christian Estler,  Carlo A. Furia,  Martin Nordio,  Marco Piccioni,  Bertrand Meyer",FM,2014,"Contracts in Practice","","","","","","Design by Contract",,
P14,,"Matthias Praast",(mastersthesis),2014,"Effiziente Kodierung von Variabilität in Spezifikationen","","","","","","SPL Theorem Proving, SPL Model Checking, Variability Encoding",,
B14,," Fabian Benduhn",(mastersthesis),2014,"Representing Variability in Product Lines: A Survey of Modeling and Specification Techniques","","","","","","SPL Specification, SPL Modeling",,
CM:FASE14,,"Barak Cohen, Shahar Maoz",FASE,2014,"Semantically Configurable Analysis of Scenario-Based Specifications","","","","","","",,
KDO:TSE14,,"Christian K&auml;stner, Alexander Dreiling, Klaus Ostermann",TSE,2014,"Variability Mining: Consistent Semiautomatic Detection of Product-Line Features","","","","","","SPL Extraction, SPL Type Checking, VariantSync",,
DKB:AOSD14,," Clemens Dubslaff,  Sascha Kl&uuml;ppelholz,  Christel Baier",AOSD,2014,"Probabilistic Model Checking for Energy Analysis in Software Product Lines","model checking","family-based analysis","composition-based implementation","feature-based specification","design","SPL Model Checking, DPL, SPL Non-Functional Properties, Variability Encoding, non-functional properties, PhD15",,
RLB+:AOSD14,," Henrique Rebelo,  Gary T. Leavens,  Mehdi Bagherzadeh,  Hridesh Rajan,  Ricardo Lima,  Daniel M. Zimmerman,  Marcio Cornelio,  Thomas Th&uuml;m",AOSD,2014,"AspectJML: Modular Specification and Runtime Checking for Crosscutting Contracts","","","","","","Aspect Orientation, Design by Contract",,
RLB+:AOSDtool14,," Henrique Rebelo,  Gary T. Leavens,  Mehdi Bagherzadeh,  Hridesh Rajan,  Ricardo Lima,  Daniel M. Zimmerman,  Marcio Cornelio,  Thomas Th&uuml;m",AOSD,2014,"Modularizing Crosscutting Contracts with AspectJML","","","","","","Aspect Orientation, Design by Contract",,
MBW:AOSD14,," Jan Midtgaard,  Claus Brabrand,  Andrzej Wasowski",AOSD,2014,"Systematic Derivation of Static Analyses for Software Product Lines","static analysis","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","SPL Static Analysis, CSUR14, PhD15",,
CCH+:SCP14,,"Andreas Classen, Maxime Cordy, Patrick Heymans, Axel Legay, Pierre-Yves Schobbens",SCP,2014,"Formal Semantics, Modular Specification, and Symbolic Verification of Product-Line Behaviour","model checking","family-based analysis","composition-based implementation","family-based specification","design","SPL Model Checking, PhD15",,
SK:SCP14,," Hamideh Sabouri,  Ramtin Khosravi",SCP,2014,"Reducing the Verification Cost of Evolving Product Families Using Static Analysis Techniques","model checking, static analysis","family-based analysis","annotation-based implementation","family-wide specification","design","SPL Static Analysis, SPL Model Checking, SPL Evolution, CSUR14, PhD15",,
CEW:TOPLAS14,," Sheng Chen,  Martin Erwig,  Eric Walkingshaw",TOPLAS,2014,"Extending Type Inference to Variational Programs","type checking","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","SPL Type Checking, compared to product-based (unoptimized), CSUR14, PhD15",,
YDL+:HASE14,," Linbin Yu,  Feng Duan,  Yu Lei,  Raghu N. Kacker,  D. Richard Kuhn",HASE,2014,"Combinatorial Test Generation for Software Product Lines Using Minimum Invalid Tuples","","","","","","SPL Testing, Sampling",,
RA:IJCSI14,,"Maryem Rhanoui, Bouchra El Asri",IJCSI,2014,"A Contractual Specification of Functional and Non-Functional Requirements of Domain-Specific Components","","","","","","Design by Contract, SPL Specification",,
BTI:TOSEM14,," Eric Bodden,  Eric Tanter,  Milton Inostroza",TOSEM,2014,"Join Point Interfaces for Safe and Flexible Decoupling of Aspects","","","","","","Aspect Orientation, Modularity, Type Checking",,
BH:FHIES14,,"Sara Bessling, Michaela Huhn",FHIES,2014,"Towards Formal Safety Analysis in Feature-Oriented Product Line Development","model checking","unoptimized product-based analysis","composition-based implementation","feature-based specification","design","Feature Interaction, SPL Model Checking, SPL Specification, CSUR14, PhD15",,
ASN:VaMoS14,," Stephan Adelsberger,  Stefan Sobernig,  Gustaf Neumann",VaMoS,2014,"Towards Assessing the Complexity of Object Migration in Dynamic, Feature-Oriented Software Product Lines","static analysis","family-based analysis","composition-based implementation","","source code / program","Feature Orientation, DPL, Design by Contract, SPL Static Analysis, specification undefined (none), CSUR14, PhD15",,
DPC+:VaMoS14,," Xavier Devroey,  Gilles Perrouin,  Maxime Cordy,  Pierre-Yves Schobbens,  Axel Legay,  Patrick Heymans",VaMoS,2014,"Towards Statistical Prioritization for Software Product Lines Testing","model checking, testing","family-based analysis","implementation undefined","specification undefined","design","SPL Testing",,
FTS:VaMoS14,," Wolfram Fenske,  Thomas Th&uuml;m,  Gunter Saake",VaMoS,2014,"A Taxonomy of Software Product Line Reengineering","","","","","","SPL Refactoring, Survey",,
SSA:VaMoS14,," Christoph Seidl,  Ina Schaefer,  Uwe A&szlig;mann",VaMoS,2014,"Capturing Variability in Space and Time with Hyper Feature Models","","","","","","Feature Modeling",,
TKB+:SCP14,," Thomas Th&uuml;m,  Christian K&auml;stner,  Fabian Benduhn,  Jens Meinicke,  Gunter Saake,  Thomas Leich",SCP,2014,"FeatureIDE: An Extensible Framework for Feature-Oriented Software Development","","","","","","Feature Modeling Tool, SPL Implementation Tool, Abstract Features",,
KK:QoSA13,," Benjamin Klatt,  Martin K&uuml;ster",QoSA,2013,"Improving Product Copy Consolidation by Architecture-Aware Difference Analysis","","","","","","iterative two-way matching",,
ARSD:ICSM13,," Muhammad Asaduzzaman,  Chanchal K. Roy,  Kevin A. Schneider,  Massimiliano Di Penta",ICSM,2013,"LHDiff: A Language-Independent Hybrid Approach for Tracking Source Code Lines","","","","","","program diffing",,
SC:MODELSWARD13,," Matthew Stephan,  James R. Cordy",MODELSWARD,2013,"A Survey of Model Comparison Approaches and Applications.","","","","","","two-way model diffing survey",,
KKT:ASE13,,"Timo Kehrer, Udo Kelter, Gabriele Taentzer",ASE,2013,"Consistency-Preserving Edit Scripts in Model Versioning","","","","","","semantic lifting",,
LWB+:JSS13,,"Philip Langer, Manuel Wimmer, Petra Brosch, Markus Herrmannsdörfer, Martina Seidl, Konrad Wieland, Gerti Kappel",JSS,2013,"A Posteriori Operation Detection in Evolving Software Models","","","","","","semantic lifting",,
CMV:CP13,," Supratik Chakraborty,  Kuldeep S. Meel,  Moshe Y. Vardi",CP,2013,"A Scalable Approximate Model Counter","","","","","","Model Counting, #SAT",,
AHA+:CAiSE13,," Ebrahim Khalil Abbasi,  Arnaud Hubaux,  Mathieu Acher,  Quentin Boucher,  Patrick Heymans",CAiSE,2013,"The Anatomy of a Sales Configurator: An Empirical Study of 111 Cases","","","","","","Product Configuration",,
MGSH:SPLC13,," Dusica Marijan,  Arnaud Gotlieb,  Sagar Sen,  Aymeric Hervieu",SPLC,2013,"Practical Pairwise Testing for Software Product Lines","testing","","","","","name=Marijan's configuration generation, usage of PACOGEN, feature model, local search, pair-wise coverage, sampling efficiency, testing efficiency, effectiveness, evaluation, SPLC18",,
SIMA:ASE13,," Abdel Salam Sayyad,  Joseph Ingram,  Tim Menzies,  Hany Ammar",ASE,2013,"Scalable Product Line Configuration: A Straw to Break the Camel's Back","","","","","","usage of jMetal/Z3",,
SRK+:IST13,," Norbert Siegmund,  Marko Rosenm&uuml;ller,  Christian K&auml;stner,  Paolo G. Giarrusso,  Sven Apel,  Sergiy S. Kolesnikov",IST,2013,"Scalable Prediction of Non-functional Properties in Software Product Lines: Footprint and Memory Consumption","","","","","","name=interaction-wise heuristic, compared to feature-wise heuristic/pair-wise heuristic, feature model, greedy, automatic selection, no coverage guarantee, testing efficiency, effectiveness, open-source tool, evaluation, non-functional properties, SPLConqueror, SAT, SPLC18",,
useGYS+:EMSE18,," Jianmei Guo,  Krzysztof Czarnecki,  Sven Apel,  Norbert Siegmund,  Andrzej Wasowski",ASE,2013,"Variability-Aware Performance Prediction: A Statistical Learning Approach","performance analysis","sample-based analysis","implementation independent","specification independent","program","name=random sampling, greedy, feature model, no coverage guarantee, testing efficiency, open-source tool, DECART, evaluation, non-functional properties, SPLC18",,
HLHE:VaMoS13,," Evelyn Nicole Haslinger,  Roberto E. Lopez-Herrejon,  Alexander Egyed",VaMoS,2013,"Using Feature Model Knowledge to Speed Up the Generation of Covering Arrays","testing","","","","","name=coverage array reduction, evaluation with ICPL, feature model, greedy, automatic selection, t-wise coverage, sampling efficiency, testing efficiency, unavailable tool, evaluation, SPLC18",,
KGP:EMSE13,," Huzefa Kagdi,  Malcom Gethers,  Denys Poshyvanyk",EMSE,2013,"Integrating Conceptual and Logical Couplings for Change Impact Analysis in Software","","","","","","Feature Traceability, VariantSync",,
AGA:TSE13,," Nasir Ali,  Yann-Gael Gueheneuc,  Giuliano Antoniol",TSE,2013,"Trustrace: Mining Software Repositories to Improve the Accuracy of Requirement Traceability Links","","","","","","Feature Traceability, VariantSync",,
RC:ESECFSE13,," Julia Rubin,  Marsha Chechik",ESECFSE,2013,"N-Way Model Merging","","","","","","VariantSync",,
BSL+:TSE13,," Thorsten Berger,  Steven She,  Rafael Lotufo,  Andrzej Wasowski,  Krzysztof Czarnecki",TSE,2013,"A Study of Variability Models and Languages in the Systems Software Domain","","","","","","Feature Modeling, Feature Modeling Languages",,
MLF+:CBSOFT13,," Flavio Medeiros,  Thiago Lima,  Francisco Dalton,  Marcio Ribeiro,  Rohit Gheyi,  Baldoino Fonseca",CBSOFT,2013,"Colligens: A Tool to Support the Development of Preprocessor-Based Software Product Lines in C","","","","","","SPL Implementation, Preprocessors, FeatureIDE",,
KKK:REVE13,," Benjamin Klatt,  Martin K&uuml;ster,  Klaus Krogmann",REVE,2013,"A Graph-Based Analysis Concept to Derive a Variation Point Design from Product Copies","","","","","","VariantSync",,
VK:FMSPLE13,," Mahsa Varshosaz,  Ramtin Khosravi",FMSPLE,2013,"Discrete Time Markov Chain Families: Modeling and Verification of Probabilistic Software Product Lines","model checking","family-based analysis","annotation-based implementation","family-wide specification","design","SPL Model Checking, Markov chains, probabilistic model checking, Markov chain, PCTL, no tool, no evaluation",,
DRGP:JSEP13,," Bogdan Dit,  Meghan Revelle,  Malcom Gethers,  Denys Poshyvanyk",JSEP,2013,"Feature Location in Source Code: A Taxonomy and Survey","","","","","","Feature Location, VariantSync",,
useLLE:SoSyM16a,," Lukas Linsbauer,  E. Roberto Lopez-Herrejon,  Alexander Egyed",SPLC,2013,"Recovering Traceability Between Features and Code in Product Variants","variant-preserving migration","product-family-based analysis","clone-and-own, product-family-based implementation","specification independent","source code","Feature Location, VariantSync, tool, evaluation",,
RC13,," Julia Rubin,  Marsha Chechik",(incollection),2013,"A Survey of Feature Location Techniques","","","","","","Survey, VariantSync, Feature Location, SPL Migration",,
DRB+:CSMR13,," Yael Dubinsky,  Julia Rubin,  Thorsten Berger,  Slawomir Duszynski,  Martin Becker,  Krzysztof Czarnecki",CSMR,2013,"An Exploratory Study of Cloning in Industrial Software Product Lines","","","","","","VariantSync, Clone-and-Own",,
SDTF:TOPLAS13,," T. Stephen Strickland,  Christos Dimoulas,  Asumu Takikawa,  Matthias Felleisen",TOPLAS,2013,"Contracts for First-Class Classes","","","","","","Design by Contract, Mixins",,
H:FMCO13,,"Reiner H&auml;hnle",FMCO,2013,"The Abstract Behavioral Specification Language: A Tutorial Introduction","","","","","","Design by Contract, Delta Orientation",,
AKS+:FOSD13,," Sven Apel,  Sergiy Kolesnikov,  Norbert Siegmund,  Christian K&auml;stner,  Brady Garvin",FOSD,2013,"Exploring Feature Interactions in the Wild: The New Feature-interaction Challenge","","","","","","Feature Interaction",,
BRN+:VaMoS13,," Thorsten Berger,  Ralf Rublack,  Divya Nair,  Joanne M. Atlee,  Martin Becker,  Krzysztof Czarnecki,  Andrzej Wasowski",VaMoS,2013,"A Survey of Variability Modeling in Industrial Practice","","","","","","Feature Modeling, FeatureIDE, MPL",,
SRA:GPCE13,," Norbert Siegmund,  Alexander von Rhein,  Sven Apel",GPCE,2013,"Family-Based Performance Measurement","","","","","","SPL Non-Functional Properties, Variability Encoding, Feature Orientation, evaluation of feature-wise heuristic/pair-wise heuristic, testing efficiency, effectiveness, evaluation, non-functional properties, SPLC18",,
GBC+:ESECFSE13,," Joel Greenyer,  Christian Brenner,  Maxime Cordy,  Patrick Heymans,  Erika Gressi",ESECFSE,2013,"Incrementally Synthesizing Controllers from Scenario-Based Product Line Specifications","synthesis","regression-based analysis","composition-based implementation","family-wide specification","design","SPL Analysis, SPL Synthesis, compared to product-based (unoptimized)",,
GSCH:REJ13,," Joel Greenyer,  Amir Molzam Sharifloo,  Maxime Cordy,  Patrick Heymans",REJ,2013,"Features Meet Scenarios: Modeling and Consistency-Checking Scenario-Based Product Line Specifications","model checking","family-based analysis","composition-based implementation","family-wide specification","design","SPL Specification, SPL Model Checking, CSUR14, PhD15",,
ABT+:REJ13,," Mauricio Alferez,  Rodrigo Bonifacio,  Leopoldo Teixeira,  Paola Accioly,  Uira Kulesza,  Ana Moreira,  Joao Araujo,  Paulo Borba",REJ,2013,"Evaluating Scenario-Based SPL Requirements Approaches: The Case for Modularity, Stability and Expressiveness","","","","","","SPL Specification",,
HS:SC13,," Seyed Hossein Haeri,  Sibylle Schupp",SC,2013,"Reusable Components for Lightweight Mechanisation of Programming Languages","","","","","","SPL Analysis",,
MRG:GPCE13,," Flavio Medeiros,  Marcio Ribeiro,  Rohit Gheyi",GPCE,2013,"Investigating Preprocessor-Based Syntax Errors","syntax checking","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","Preprocessors, SPL Parsing, CSUR14, PhD15",,
MRKN:iFM13,," Jean-Vivien Millo,  S. Ramesh,  Shankara Narayanan Krishna,  Ganesh Khandu Narwane",iFM,2013,"Compositional Verification of Software Product Lines","model checking","feature-product-based analysis","composition-based implementation","feature-based specification","requirements, design","SPL Model Checking",,
BDS13,," Lorenzo Bettini,  Ferruccio Damiani,  Ina Schaefer",Acta Informatica,2013,"Compositional Type Checking of Delta-Oriented Software Product Lines","type checking","feature-product-based analysis","composition-based implementation","domain-independent specification","source code / program","SPL Type Checking, CSUR14, PhD15",,
KKL13,," D. Richard Kuhn,  Raghu N. Kacker,  Yu Lei",(book),2013,"Introduction to Combinatorial Testing","","","","","","Combinatorial Testing",,
HPP+:SPLC13,," Christopher Henard,  Mike Papadakis,  Gilles Perrouin,  Jacques Klein,  Yves Le Traon",SPLC,2013,"Multi-Objective Test Generation for Software Product Lines","testing","","","","","SPL Testing, name=moga, feature model, expert knowledge, population-based search, semi-automatic selection, no coverage guarantee, sampling efficiency, testing efficiency, effectiveness, open-source tool, evaluation, compared to random sampling, SPLC18",,
KSS:VariComp13,," Matthias Kowal,  Sandro Schulze,  Ina Schaefer",VariComp,2013,"Towards Efficient SPL Testing by Variant Reduction","testing","","","","","SPL Testing, name=feature-model filtering, greedy, feature model, expert knowledge, t-wise coverage, sampling efficiency, testing efficiency, no tool, evaluation, compared to ICPL, SPLC18",,
M13,,"Jens Meinicke",(mastersthesis),2013,"JML-Based Verification for Feature-Oriented Programming","","","","","","Feature Orientation, Design by Contract, SPL Theorem Proving, SPL Model Checking",,
IHE+:ICCAD13,," Muhammad Ismail,  Osman Hasan,  Thomas Ebi,  Muhammad Shafique,  J&ouml;rg Henkel",ICCAD,2013,"Formal Verification of Distributed Dynamic Thermal Management","","","","","","Model Checking, Theorem Proving",,
KRHA:GPCE13,," Sergiy Kolesnikov,  Alexander von Rhein,  Claus Hunsen,  Sven Apel",GPCE,2013,"A Comparison of Product-Based, Feature-Based, and Family-Based Type Checking","type checking","family-based analysis, feature-product-based analysis","composition-based implementation","domain-independent specification","source code / program","Feature Orientation, SPL Type Checking, CSUR14, PhD15",,
LKA+:ESECFSE13,," J&ouml;rg Liebig,  Alexander von Rhein,  Christian K&auml;stner,  Sven Apel,  Jens D&ouml;rre,  Christian Lengauer",ESECFSE,2013,"Scalable Analysis of Variable Software","data-flow analysis, static analysis, type checking","family-based analysis, sample-based analysis","annotation-based implementation","domain-independent specification, family-wide specification","source code / program","SPL Type Checking, SPL Static Analysis, CSUR14, PhD15, name=single-conf heuristic, manual selection, feature model, expert knowledge, no coverage guarantee, sampling efficiency, testing efficiency, open-source tool, evaluation, no prioritization, type checking, compared to configuration coverage/ICPL/family-based analysis, SPLC18, name=random sampling, greedy, feature model, no coverage guarantee, sampling efficiency, testing efficiency, open-source tool, evaluation, no prioritization, data-flow analysis, type checking, compared to configuration coverage/ICPL/family-based analysis, SPLC18",,
KMKB:ESECFSE13,," Chang Hwan Peter Kim,  Darko Marinov,  Sarfraz Khurshid,  Don Batory,  Sabrina Souto,  Paulo Barros,  Marcelo D'Amorim",ESECFSE,2013,"SPLat: Lightweight Dynamic Analysis for Reducing Combinatorics in Testing Configurable Systems","testing","family-based analysis","annotation-based implementation","feature-based specification","source code / program","SPL Testing, SPL Specification",,
DDJS13,," Ferruccio Damiani,  Johan Dovland,  Einar Broch Johnsen,  Ina Schaefer",FAC,2013,"Verifying Traits: An Incremental Proof System for Fine-Grained Reuse","","","","","","SPL Theorem Proving, Traits",,
PGT+:SPLC13,,"Leonardo Passos, Jianmei Guo, Leopoldo Teixeira, Krzysztof Czarnecki, Andrzej Wasowski, Paulo Borba",SPLC,2013,"Coevolution of Variability Models and Related Artifacts: A Case Study from the Linux Kernel","","","","","","SPL Evolution, Feature Mapping",,
RLK+13,," Henrique Rebelo,  Ricardo Lima,  Uira Kulesza,  Marcio Ribeiro,  Yuanfang Cai,  Roberta Coelho,  Claudio Sant'Anna,  Alexandre Mota",IJSEKE,2013,"Quantifying the Effects of Aspectual Decompositions on Design by Contract Modularization: A Maintenance Study","","","","","","Design by Contract, Aspect Orientation, Strict Preconditions",,
BMB+:PLDI13,," Eric Bodden,  Tarsis Toledo,  Marcio Ribeiro,  Claus Brabrand,  Paulo Borba,  Mira Mezini",PLDI,2013,"SPLLIFT: Statically Analyzing Software Product Lines in Minutes Instead of Years","static analysis","family-based analysis","annotation-based implementation","family-wide specification","source code / program","SPL Static Analysis, CSUR14, PhD15, BDD",,
HTH13,," Arnaud Hubaux,  Thein Than Tun,  Patrick Heymans",CSUR,2013,"Separation of Concerns in Feature Diagram Languages: A Systematic Survey","","","","","","Feature Modeling, Survey",,
SK:JUCS13,,"Hamideh Sabouri, Ramtin Khosravi",JUCS,2013,"Modeling and Verification of Reconfigurable Actor Families","model checking","family-based analysis","annotation-based implementation","family-wide specification","design","SPL Model Checking, DPL, Variability Encoding, compared to product-based (unoptimized), CSUR14, PhD15",,
SK:FSEN13,," Hamideh Sabouri,  Ramtin Khosravi",FSEN,2013,"Delta Modeling and Model Checking of Product Families","model checking","family-based analysis","composition-based implementation","domain-independent specification","design","SPL Model Checking, Delta Orientation, CSUR14, PhD15",,
I13,," Paul Istoan",(phdthesis),2013,"Methodology for the Derivation of Product Behaviour in a Software Product Line","model checking, type checking","feature-product-based analysis","composition-based implementation","domain-independent specification, family-wide specification, feature-based specification","design","SPL Type Checking, CSUR14, PhD15",,
HB:FHIES13,,"Michaela Huhn, Sara Bessling",FHIES,2013,"Enhancing Product Line Development by Safety Requirements and Verification","model checking","unoptimized product-based analysis","composition-based implementation","feature-based specification","design","Feature Interaction, SPL Model Checking, SPL Specification, CSUR14, PhD15",,
RCC:SPLC13,," Julia Rubin,  Krzysztof Czarnecki,  Marsha Chechik",SPLC,2013,"Managing Cloned Variants: A Framework and Experience","","","","","","Clone-and-Own, VariantSync, merge refactoring",,
D13,,"Benjamin Delaware",(phdthesis),2013,"Feature Modularity in Mechanized Reasoning","","","","","","SPL Theorem Proving, SPL Type Checking, Feature Orientation",,
SST:MultiPLE13,," Reimar Schr&ouml;ter,  Norbert Siegmund,  Thomas Th&uuml;m",MultiPLE,2013,"Towards Modular Analysis of Multi Product Lines","","","","","","Design by Contract",,
ABKS13,," Sven Apel,  Don Batory,  Christian K&auml;stner,  Gunter Saake",(book),2013,"Feature-Oriented Software Product Lines","","","","","","Feature Orientation",,
useRLB+:AOSD14,," Henrique Rebelo,  Gary T. Leavens,  Mehdi Bagherzadeh,  Hridesh Rajan,  Ricardo Lima,  Daniel M. Zimmerman,  Marcio Cornelio,  Thomas Th&uuml;m",(techreport),2013,"AspectJML: Modular Specification and Runtime Checking for Crosscutting Contracts","","","","","","Aspect Orientation, Design by Contract",,
PB13,," Matthew Parkinson,  Gavin Bierman",(incollection),2013,"Separation Logic for Object-Oriented Programming","","","","","","Design by Contract",,
BLP:FMSPLE13,," Maurice H. ter Beek,  Alberto Lluch Lafuente,  Marinella Petrocchi",FMSPLE,2013,"Combining Declarative and Procedural Views in the Specification and Analysis of Product Families","model checking","family-based analysis","annotation-based implementation","family-wide specification","design","SPL Specification, SPL Model Checking, Feature Modeling, CSUR14, PhD15",,
useBLP:FMSPLE13,," Maurice H. ter Beek,  Alberto Lluch Lafuente,  Marinella Petrocchi",ICTCS,2013,"Combining Declarative and Procedural Views in the Feature-Oriented Specification and Analysis of Product Families","model checking","family-based analysis","annotation-based implementation","family-wide specification","design","SPL Specification, SPL Model Checking, Feature Modeling, CSUR14, PhD15",,
BRT+13,," Claus Brabrand,  Marcio Ribeiro,  Tarsis Toledo,  Johnni Winther,  Paulo Borba",TAOSD,2013,"Intraprocedural Dataflow Analysis for Software Product Lines","static analysis","family-based analysis","annotation-based implementation","family-wide specification","source code / program","SPL Static Analysis, CSUR14, PhD15, BDD",,
CCS+13,,"Andreas Classen, Maxime Cordy, Pierre-Yves Schobbens, Patrick Heymans, Axel Legay, Jean-Francois Raskin",TSE,2013,"Featured Transition Systems: Foundations for Verifying Variability-Intensive Systems and Their Application to LTL Model Checking","model checking","family-based analysis","composition-based implementation, annotation-based implementation","family-based specification","design","SPL Model Checking, CSUR14, PhD15",,
W13,,"Andre Weigelt",(mastersthesis),2013,"Methoden-basierte Komposition von Kontrakten in Feature-orientierter Programmierung","","","","","","Feature Orientation, Design by Contract",,
LLKK:ICSR13,," Duc Minh Le,  Hyesun Lee,  Kyo C. Kang,  Lee Keun",ICSR,2013,"Validating Consistency between a Feature Model and Its Implementation","type checking","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","SPL Type Checking, SPL Evolution, compared to none, CSUR14, PhD15",,
CCH+:SPLC13,," Maxime Cordy,  Andreas Classen,  Patrick Heymans,  Pierre-Yves Schobbens,  Axel Legay",SPLC,2013,"ProVeLines: A Product Line of Verifiers for Software Product Lines","model checking","family-based analysis","composition-based implementation, annotation-based implementation","specification undefined","design","SPL Model Checking",,
HSB:CADE13,," Reiner H&auml;hnle,  Ina Schaefer,  Richard Bubel",CADE,2013,"Reuse in Software Verification by Abstract Method Calls","theorem proving","regression-based analysis","composition-based implementation","feature-based specification","source code / program","Design by Contract, Theorem Proving, Delta Orientation, PhD15",,
WHSS:MAPLESCALE13,," David Wille,  S&ouml;nke Holthusen,  Sandro Schulze,  Ina Schaefer",MAPLESCALE,2013,"Interface Variability in Family Model Mining","","","","","","Delta Orientation, SPL Migration",,
SSA:FMSPLE13,," Christoph Seidl,  Ina Schaefer,  Uwe A&szlig;mann",FMSPLE,2013,"Variability-Aware Safety Analysis Using Delta Component Fault Diagrams","fault-tree analysis","family-product-based analysis","composition-based implementation","","design","Delta Orientation, SPL Fault-Tree Analysis, specification undefined (none)",,
LC:SCP13,," Miguel A. Laguna,  Yania Crespo",SCP,2013,"A Systematic Mapping Study on Software Product Line Evolution: From Legacy System Reengineering to Product Line Refactoring","","","","","","SPL Evolution, SPL Migration, SPL Refactoring, Clone-and-Own, Survey, VariantSync",,
CCH+:ASAS13,," Maxime Cordy,  Andreas Classen,  Patrick Heymans,  Axel Legay,  Pierre-Yves Schobbens",ASAS,2013,"Model Checking Adaptive Software with Featured Transition Systems","model checking","family-based analysis","annotation-based implementation","family-based specification","design","SPL Model Checking, CSUR14, PhD15",,
CSHL:ICSE13,," Maxime Cordy,  Pierre-Yves Schobbens,  Patrick Heymans,  Axel Legay",ICSE,2013,"Beyond Boolean Product-Line Model Checking: Dealing with Feature Attributes and Multi-Features","model checking","family-based analysis","annotation-based implementation","family-based specification","design","SPL Model Checking, CSUR14, PhD15",,
ARTK13,," Sven Apel,  Alexander von Rhein,  Thomas Th&uuml;m,  Christian K&auml;stner",ComNet,2013,"Feature-Interaction Detection Based on Feature-Based Specifications","","","","","","Feature Orientation, SPL Specification, Feature Interaction, Design by Contract",,
T:ISSTA13,," Thomas Th&uuml;m",ISSTA,2013,"Product-Line Verification with Feature-Oriented Contracts","","","","","","Feature Orientation, Design by Contract",,
TAZ+:MASPEGHI13,," Thomas Th&uuml;m,  Sven Apel,  Andreas Zelend,  Reimar Schr&ouml;ter,  Bernhard M&ouml;ller",MASPEGHI,2013,"Subclack: Feature-Oriented Programming with Behavioral Feature Interfaces","runtime analysis","unoptimized product-based analysis","composition-based implementation","feature-based specification","source code / program","Feature Orientation, Design by Contract",,
HLC:ICSE13,," Patrick Heymans,  Axel Legay,  Maxime Cordy",ICSE,2013,"Efficient Quality Assurance of Variability-Intensive Systems","model checking","family-based analysis","","","design","SPL Model Checking",,
RLL+:FOAL13,," Henrique Rebelo,  Gary T. Leavens,  Ricardo Lima,  Paulo Borba,  Marcio Ribeiro",FOAL,2013,"Modular Aspect-Oriented Design Rule Enforcement with XPIDRs","","","","","","Design by Contract, Aspect Orientation, Strict Preconditions",,
C13,,"Cemal Yilmaz",TSE,2013,"Test Case-Aware Combinatorial Interaction Testing","","","","","","Combinatorial Testing",,
PFP+:ICSE13,," Nadia Polikarpova,  Carlo A. Furia,  Yu Pei,  Yi Wei,  Bertrand Meyer",ICSE,2013,"What Good Are Strong Specifications?","","","","","","Design by Contract, Preconditions Strict",,
DOS:POPL13,," Benjamin Delaware,  Bruno C. d. S. Oliveira,  Tom Schrijvers",POPL,2013,"Meta-Theory a la Carte","theorem proving","feature-product-based analysis","composition-based implementation","domain-independent specification","theory","SPL Theorem Proving, CSUR14, PhD15",,
RC:ICSE13,," Julia Rubin,  Marsha Chechik",ICSE,2013,"A Framework for Managing Cloned Product Variants","","","","","","Clone-and-Own, VariantSync",,
EW:GTTSE13,," Martin Erwig,  Eric Walkingshaw",GTTSE,2013,"Variation Programming with the Choice Calculus","","","","","","SPL Implementation",,
EORW:VaMoS13,," Martin Erwig,  Klaus Ostermann,  Tillmann Rendel,  Eric Walkingshaw",VaMoS,2013,"Adding Configuration to the Choice Calculus","type checking","family-based analysis","annotation-based implementation","domain-independent specification","design","SPL Configuration Analysis, SPL Formalization",,
BM13,,"Hagen Buchwald, Florian Meyerer",Eclipse Magazin,2013,"C4J: Contracts, Java und Eclipse","","","","","","Design by Contract",,
GBS13,,"Rui C. Goncalves, Don Batory, Joao L. Sobral",(techreport),2013,"ReFlO: An Interactive Tool for Pipe-And-Filter Domain Specification and Program Generation","","","","","","Behavioral Subtyping",,
ARW+:ICSE13,," Sven Apel,  Alexander von Rhein,  Philipp Wendler,  Armin Gr&ouml;&szlig;linger,  Dirk Beyer",ICSE,2013,"Strategies for Product-Line Verification: Case Studies and Experiments","model checking","family-based analysis, sample-based analysis","composition-based implementation","feature-based specification","source code / program","SPL Model Checking, Variability Encoding, CSUR14, PhD15",,
AKL13,," Sven Apel,  Christian K&auml;stner,  Christian Lengauer",TSE,2013,"Language-Independent and Automated Software Composition: The FeatureHouse Experience","","","","","","Feature Orientation",,
STSS:VaMoS13,," Reimar Schr&ouml;ter,  Thomas Th&uuml;m,  Norbert Siegmund,  Gunter Saake",VaMoS,2013,"Automated Analysis of Dependent Feature Models","","","","","","Feature Modeling, Feature Modeling Tool",,
RAK+:VaMoS13,," Alexander von Rhein,  Sven Apel,  Christian K&auml;stner,  Thomas Th&uuml;m,  Ina Schaefer",VaMoS,2013,"The PLA Model: On the Combination of Product-Line Analyses","","","","","","SPL Type Checking, SPL Analysis",,
RPK:SCP12,," Uwe Ryssel,  Joern Ploennigs,  Klaus Kabitzsch",SCP,2012,"Automatic Library Migration for the Generation of Hardware-In-The-Loop Models","","","","","","iterative two-way matching",,
KKOS:ICSM12,,"Timo Kehrer, Udo Kelter, Manuel Ohrndorf, Tim Sollbach",ICSM,2012,"Understanding Model Evolution Through Semantically Lifting Model Differences With SiLift","","","","","","semantic lifting",,
DTS+:SPLC12,," Christian Dietrich,  Reinhard Tartler,  Wolfgang Schr&ouml;der-Preikschat,  Daniel Lohmann",SPLC,2012,"A Robust Approach for Variability Extraction from the Linux Build System","","","","","","KConfig",,
CGR+:VaMoS12,," Krzysztof Czarnecki,  Paul Gr&uuml;nbacher,  Rick Rabiser,  Klaus Schmid,  Andrzej Wasowski",VaMoS,2012,"Cool Features and Tough Decisions: A Comparison of Variability Modeling Approaches","","","","","","Feature Modeling, Feature Modeling Languages",,
VGD:FSE12,," Willem Visser,  Jaco Geldenhuys,  Matthew B. Dwyer",FSE,2012,"Green: Reducing, Reusing and Recycling Constraints in Program Analysis","","","","","","Incremental Solving",,
HXC:VaMoS12,," Arnaud Hubaux,  Yingfei Xiong,  Krzysztof Czarnecki",VaMoS,2012,"A User Survey of Configuration Challenges in Linux and eCos","","","","","","Product Configuration",,
SKK+:ICSE12,," Norbert Siegmund,  Sergiy S. Kolesnikov,  Christian K&auml;stner,  Sven Apel,  Don Batory,  Marko Rosenm&uuml;ller,  Gunter Saake",ICSE,2012,"Predicting Performance via Automated Feature-Interaction Detection","","","","","","name=higher-order heuristic/hot-spot heuristic, compared to feature-wise/pair-wise/all valid configurations, feature model, greedy, automatic selection, no coverage guarantee, testing efficiency, effectiveness, evaluation, open-source tool, non-functional properties, SPLConqueror, SAT, SPLC18",,
SRK+:SQJ12,," Norbert Siegmund,  Marko Rosenm&uuml;ller,  Martin Kuhlemann,  Christian K&auml;stner,  Sven Apel,  Gunter Saake",SQJ,2012,"SPL Conqueror: Toward Optimization of Non-functional Properties in Software Product Lines","","","","","","name=feature-wise heuristic, feature model, greedy, automatic selection, feature-wise coverage, testing efficiency, effectiveness, evaluation, open-source tool, non-functional properties, SPLConqueror, SAT, SPLC18, name=pair-wise heuristic, feature model, greedy, automatic selection, pair-wise coverage, testing efficiency, effectiveness, evaluation, open-source tool, non-functional properties, SPLConqueror, SAT, SPLC18",,
NNP+:TSE12,," Hoan Anh Nguyen,  Tung Thanh Nguyen,  Nam H. Pham,  Jafar Al-Kofahi,  Tien N. Nguyen",TSE,2012,"Clone Management for Evolving Software","","","","","","Managed Code Clones, VariantSync",,
HRGL:SPLC12,," Wolfgang Heider,  Rick Rabiser,  Paul Gr&uuml;nbacher,  Daniela Lettner",SPLC,2012,"Using Regression Testing to Analyze the Impact of Changes to Variability Models on Products","testing","unoptimized product-based analysis","annotation-based implementation","","source code / program","specification undefined (none)",,
ALL:ASE12,," Sven Apel,  Olaf Le&szlig;enich,  Christian Lengauer",ASE,2012,"Structured Merge with Auto-Tuning: Balancing Precision and Performance","","","","","","Software Merging, Version Control, VariantSync",,
ZFSZ:CSMR12,," Tewfik Ziadi,  Luz Frias,  Marcos Aurelio Almeida da Silva,  Mikal Ziane",CSMR,2012,"Feature Identification from the Source Code of Product Variants","","","","","","SPL Migration, VariantSync",,
HZDK:ICSM12,," Ahmed E. Hassan,  Ying Zou,  Tejinder Dhaliwal,  Foutse Khomh",ICSM,2012,"Recovering Commit Dependencies for Selective Code Integration in Software Product Lines","","","","","","VariantSync, Clone-and-Own",,
AHC+:CAiSE12,,"Mathieu Acher, Patrick Heymans, Philippe Collet, Clement Quinton, Philippe Lahire, Philippe Merle",CAiSE,2012,"Feature Model Differences","","","","","","Feature Model Diffing, Complex Constraints",,
SGB+:VaMoS12,," Sergio Segura,  Jose A. Galindo,  David Benavides,  Jose A. Parejo,  Antonio Ruiz-Cortes",VaMoS,2012,"BeTTy: Benchmarking and Testing on the Automated Analysis of Feature Models","","","","","","Feature Modeling, Feature Modeling Tool, Simple Constraints, Random Feature Models",,
TSD+:OOPSLA12,," Asumu Takikawa,  T. Stephen Strickland,  Christos Dimoulas,  Sam Tobin-Hochstadt,  Matthias Felleisen",OOPSLA,2012,"Gradual Typing for First-Class Classes","","","","","","Design by Contract, Mixins",,
MJ:FOAL12,," Tim Molderez,  Dirk Janssens",FOAL,2012,"Design by Contract for Aspects, by Aspects","","","","","","Aspect Orientation, Design by Contract",,
HFA+12,,"Ruben Heradio, David Fernandez-Amoros, Luis de la Torre, Ismael Abad",Expert Systems with Applications,2012,"Exemplar Driven Development of Software Product Lines","","","","","","VariantSync",,
EBG:CAiSE12,," Faezeh Ensan,  Ebrahim Bagheri,  Dragan Gasevic",(incollection),2012,"Evolutionary Search-Based Test Generation for Software Product Line Feature Models","testing","","","","","name=gasplt, usage of FAMA, feature model, local search, automatic selection, no coverage guarantee, testing efficiency, effectiveness, open-source tool, evaluation, SPLC18",,
CCS+:VaMoS12,," Maxime Cordy,  Andreas Classen,  Pierre-Yves Schobbens,  Patrick Heymans,  Axel Legay",VaMoS,2012,"Managing Evolution in Software Product Lines: A Model-Checking Perspective","model checking","family-based analysis","annotation-based implementation","family-based specification","design","SPL Model Checking, SPL Evolution, CSUR14, PhD15",,
BGM:SPLC12,," Maurice H. ter Beek,  Stefania Gnesi,  Franco Mazzanti",SPLC,2012,"Demonstration of a Model Checker for the Analysis of Product Variability","model checking","family-based analysis","annotation-based implementation","family-based specification","design","SPL Model Checking, CSUR14, PhD15",,
GG:PLDI12,," Paul Gazzillo,  Robert Grimm",PLDI,2012,"SuperC: Parsing All of C by Taming the Preprocessor","syntax checking","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","Preprocessors, SPL Parsing, CSUR14, PhD15, BDD",,
MHF:SPLC12,," Martin Fagereng Johansen,  Oystein Haugen,  Franck Fleurey",SPLC,2012,"An Algorithm for Generating T-Wise Covering Arrays from Large Feature Models","feature-model analysis, testing","sample-based analysis","implementation independent","specification independent","","Sampling, tool, evaluation, name=ICPL, feature model, greedy, t-wise coverage, evaluation, sampling efficiency, testing efficiency, open-source tool, compared to CASA/IPOG/MoSo-PoLiTe, a.k.a. SPLCAT, SPLC18",,
JHF+:MODELS12,," Martin Fagereng Johansen,  Oystein Haugen,  Franck Fleurey,  Anne Grete Eldegard,  Torbjorn Syversen",(incollection),2012,"Generating Better Partial Covering Arrays by Modeling Weights on Sub-Product Lines","testing","","","","","name=weight coverage, compared to ICPL, usage of ICPL, feature model, expert knowledge, greedy, semi-automatic selection, no coverage guarantee, testing efficiency, effectiveness, open-source tool, evaluation, SPLC18",,
POS+:SQJ12,," Gilles Perrouin,  Sebastian Oster,  Sagar Sen,  Jacques Klein,  Benoit Baudry,  Yves Le Traon",SQJ,2012,"Pairwise Testing for Software Product Lines: Comparison of Two Approaches","testing","","","","","evaluation of Alloy-based sampling/MoSo-PoLiTe, sampling efficiency, testing efficiency, evaluation, SPLC18",,
WRH+12,,"Claes Wohlin, Per Runeson, Martin H&ouml;st,  Magnus C. Ohlsson, Bj&ouml;rn Regnell",(book),2012,"Experimentation in Software Engineering","","","","","","Research Method",,
KS:COORDINATION12,,"Ramtin Khosravi, Hamideh Sabouri",COORDINATION,2012,"Using Coordinated Actors to Model Families of Distributed Systems","","","","","","SPL Specification",,
ABFG:ISoLA12,," Patrizia Asirelli,  Maurice H. ter Beek,  Alessandro Fantechi,  Stefania Gnesi",ISoLA,2012,"A Compositional Framework to Derive Product Line Behavioural Descriptions","model checking","family-based analysis","annotation-based implementation","family-based specification","design","SPL Model Checking, CSUR14, PhD15",,
SJBK:COMPSAC12,," Hamideh Sabouri,  Mohammad Mahdi Jaghoori,  Frank de Boer,  Ramtin Khosravi",COMPSAC,2012,"Scheduling and Analysis of Real-Time Software Families","model checking","family-based analysis","annotation-based implementation","domain-independent specification","design","SPL Model Checking, compared to product-based (unoptimized), CSUR14, PhD15",,
BMP:SERENE12,," Maurice H. ter Beek,  Henry Muccini,  Patrizio Pelliccione",SERENE,2012,"Assume-Guarantee Testing of Evolving Software Product Line Architectures","model checking, testing","feature-product-based analysis, regression-based analysis, sample-based analysis","composition-based implementation","feature-based specification","design","SPL Model Checking, SPL Testing, SPL Evolution",,
PSS:MODIQUITOUS12,," Georg P&uuml;schel,  Ronny Seiger,  Thomas Schlegel",MODIQUITOUS,2012,"Test Modeling for Context-aware Ubiquitous Applications with Feature Petri Nets","testing","unoptimized product-based analysis","implementation independent","family-based specification","source code / program","SPL Testing, SPL Specification",,
RLBC:SPLC12,," Julia Rubin,  Andrei Kirshin,  Goetz Botterweck,  Marsha Chechik",SPLC,2012,"Managing Forked Product Variants","","","","","","Clone-and-Own, VariantSync",,
HGR:IST12,," Gerald Holl,  Paul Gr&uuml;nbacher,  Rick Rabiser",IST,2012,"A Systematic Review and an Expert Survey on Capabilities Supporting Multi Product Lines","","","","","","Survey, PRG, MPL",,
JHS:FMCO12,," Einar Broch Johnsen,  Reiner H&auml;hnle,  Jan Sch&auml;fer,  Rudolf Schlatte,  Martin Steffen",FMCO,2012,"ABS: A Core Language for Abstract Behavioral Specification","","","","","","SPL Specification, Delta Orientation",,
LKL:SPLC12,," Jihyun Lee,  Sungwon Kang,  Danhyung Lee",SPLC,2012,"A Survey on Software Product Line Testing","","","","","","SPL Testing, Survey",,
DCP+:ISoLA12,," Xavier Devroey,  Maxime Cordy,  Gilles Perrouin,  Eun-Young Kang,  Pierre-Yves Schobbens,  Patrick Heymans,  Axel Legay,  Benoit Baudry",ISoLA,2012,"A Vision for Behavioural Model-Driven Validation of Software Product Lines","","","","","","SPL Model Checking, SPL Testing",,
SK:FSEN12,," Hamideh Sabouri,  Ramtin Khosravi",FSEN,2012,"Efficient Verification of Evolving Software Product Lines","model checking","family-based analysis","composition-based implementation","family-wide specification","design","SPL Evolution, SPL Model Checking, CSUR14, PhD15",,
SLC12,," Markku Sakkinen,  Philippe Lahire,  Ciprian-Bogdan Chirila",NJC,2012,"Towards Fully-Fledged Reverse Inheritance in Eiffel","","","","","","OOP",,
CSHL:FMSPLE12,," Maxime Cordy,  Pierre-Yves Schobbens,  Patrick Heymans,  Axel Legay",FMSPLE,2012,"Towards an Incremental Automata-Based Approach for Software Product-Line Model Checking","model checking","regression-based analysis","composition-based implementation","family-wide specification","design","SPL Model Checking, SPL Evolution, CSUR14, PhD15",,
CSHL:SPLC12,," Maxime Cordy,  Pierre-Yves Schobbens,  Patrick Heymans,  Axel Legay",SPLC,2012,"Behavioural Modelling and Verification of Real-Time Software Product Lines","model checking","family-based analysis","annotation-based implementation","family-wide specification","design","SPL Model Checking, CSUR14, PhD15",,
CCH+12,,"Andreas Classen, Maxime Cordy, Patrick Heymans, Axel Legay, Pierre-Yves Schobbens",STTT,2012,"Model Checking Software Product Lines with SNIP","model checking","family-based analysis","annotation-based implementation","family-based specification","design","SPL Model Checking, CSUR14, PhD15",,
KKB:ISSRE12,," Chang Hwan Peter Kim,  Sarfraz Khurshid,  Don Batory",ISSRE,2012,"Shared Execution for Efficiently Testing Product Lines","testing","family-based analysis","annotation-based implementation","family-based specification","source code / program","SPL Testing",,
KRE+:FOSD12,," Christian K&auml;stner,  Alexander von Rhein,  Sebastian Erdweg,  Jonas Pusch,  Sven Apel,  Tillmann Rendel,  Klaus Ostermann",FOSD,2012,"Toward Variability-Aware Testing","testing","family-based analysis","annotation-based implementation","family-wide specification","source code / program","SPL Testing, SPL Model Checking, Variability Encoding",,
useCEW:TOPLAS14,," Sheng Chen,  Martin Erwig,  Eric Walkingshaw",ICFP,2012,"An Error-Tolerant Type System for Variational Lambda Calculus","type checking","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","SPL Type Checking, CSUR14, PhD15",,
HK:WCRE12,," Armijn Hemel,  Rainer Koschke",WCRE,2012,"Reverse Engineering Variability in Source Code Using Clone Detection: A Case Study for Linux Variants of Consumer Electronic Devices","","","","","","Clone-and-Own, Code Clones, SPL Migration, VariantSync",,
TB12,,"Thomas Th&uuml;m, Fabian Benduhn",Eclipse Magazin,2012,"Entwicklung von Softwarevarianten mit FeatureIDE","","","","","","Feature Modeling Tool, SPL Implementation Tool",,
XXJ:WCRE12,," Yinxing Xue,  Zhenchang Xing,  Stan Jarzabek",WCRE,2012,"Feature Location in a Collection of Product Variants","information retrieval","product-family-based analysis","clone-and-own, product-based implementation","specification independent","source code","Clone-and-Own, SPL Migration, VariantSync, tool, evaluation, no proof",,
ACG+:VaMoS12,," Mathieu Acher,  Anthony Cleve,  Gilles Perrouin,  Patrick Heymans,  Charles Vanbeneden,  Philippe Collet,  Philippe Lahire",VaMoS,2012,"On Extracting Feature Models From Product Descriptions","","","","","","Clone-and-Own, SPL Migration, Feature Modeling",,
LSZ12,," Giovanni Lagorio,  Marco Servetto,  Elena Zucca",IC,2012,"Featherweight Jigsaw - Replacing Inheritance by Composition in Java-like Languages","","","","","","Feature Orientation",,
HS:ISoLA12,," Reiner H&auml;hnle,  Ina Schaefer",ISoLA,2012,"A Liskov Principle for Delta-Oriented Programming","theorem proving","feature-family-based analysis","composition-based implementation","feature-based specification","source code / program","Design by Contract, Delta Orientation, Preconditions Lazy, SPL Theorem Proving, CSUR14, PhD15",,
MAG:WASP12,,"Giselle Machado, Vander Alves, Rohit Gheyi",WASP,2012,"Formal Specification and Verification of Well-Formedness in Business Process Product Lines","type checking","family-based analysis","composition-based implementation","domain-independent specification","design","SPL Type Checking",,
JHF+:ICTSS12,," Martin Fagereng Johansen,  Oystein Haugen,  Franck Fleurey,  Erik Carlson,  Jan Endresen,  Tormod Wien",ICTSS,2012,"A Technique for Agile and Automatic Interaction Testing for Product Lines","","","","","","SPL Testing, Frameworks",,
useMRKN:iFM13,,"Jean-Vivien Millo, S. Ramesh, Shankara Narayanan Krishna, Ganesh Khandu Narwane",CoRR,2012,"Compositional Verification of Evolving Software Product Lines","","","","","","SPL Evolution, SPL Specification, SPL Verification",,
L12,,"Thomas Leich",(phdthesis),2012,"Variables Nanodatenmanagement f&uuml;r eingebettete Systeme","","","","","","Feature Orientation",,
B12,," Fabian Benduhn",(mastersthesis),2012,"Contract-Aware Feature Composition","","","","","","Feature Orientation, Design by Contract",,
GSCH:RE12,," Joel Greenyer,  Amir Molzam Sharifloo,  Maxime Cordy,  Patrick Heymans",RE,2012,"Efficient Consistency Checking of Scenario-Based Product-Line Specifications","model checking","family-based analysis","composition-based implementation","family-wide specification","design","SPL Specification, SPL Model Checking, CSUR14, PhD15",,
CCP+:ICSE12,," Maxime Cordy,  Andreas Classen,  Gilles Perrouin,  Pierre-Yves Schobbens,  Patrick Heymans,  Axel Legay",ICSE,2012,"Simulation-Based Abstractions for Software Product-Line Model Checking","model checking","family-based analysis","annotation-based implementation","family-based specification","design","SPL Model Checking, CSUR14, PhD15",,
HJD:ConfWS12,," Arnaud Hubaux,  Dietmar Jannach,  Conrad Drescher,  Leonardo Murta,  Tomi M&auml;nnist&ouml;,  Krzysztof Czarnecki,  Patrick Heymans,  Tien N. Nguyen,  Markus Zanker",ConfWS,2012,"Unifying Software and Product Configuration: A Research Roadmap","","","","","","Product Configuration, Feature Modeling",,
P12,,"Nikolaos Papakonstantinou",(phdthesis),2012,"System Design and Risk Assessment for Safety Critical Control Software Product Lines","","","","","","FeatureIDE",,
useLKA+:ESECFSE13,,"J&ouml;rg Liebig, Alexander von Rhein, Christian K&auml;stner, Sven Apel, Jens D&ouml;rre, Christian Lengauer",(techreport),2012,"Large-Scale Variability-Aware Type Checking and Dataflow Analysis","static analysis, type checking","family-based analysis, sample-based analysis","annotation-based implementation","domain-independent specification, family-wide specification","source code / program","SPL Type Checking, SPL Static Analysis, CSUR14, PhD15",,
KOE:OOPSLA12,," Christian K&auml;stner,  Klaus Ostermann,  Sebastian Erdweg",OOPSLA,2012,"A Variability-Aware Module System","type checking","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","SPL Type Checking, compared to none, CSUR14, PhD15",,
useBMB+:PLDI13,,"Eric Bodden, Tarsis Toledo, Marcio Ribeiro, Claus Brabrand, Paulo Borba, Mira Mezini",(techreport),2012,"Transparent and Efficient Reuse of IFDS-Based Static Program Analyses for Software Product Lines","static analysis","family-based analysis","annotation-based implementation","family-wide specification","source code / program","SPL Static Analysis, CSUR14, PhD15",,
GDS:ICSE12,," Michaela Greiler,  Arie van Deursen,  Margaret-Anne Storey",ICSE,2012,"Test Confessions: A Study of Testing Practices for Plug-in Systems","","","","","","SPL Testing, Frameworks",,
HBC+12,," Patrick Heymans,  Quentin Boucher,  Andreas Classen,  Arnaud Bourdoux,  Laurent Demonceau",STTT,2012,"A Code Tagging Approach to Software Product Line Development","","","","","","SPL Implementation",,
RC:FASE12,," Julia Rubin,  Marsha Chechik",FASE,2012,"Combining Related Products into Product Lines","","","","","","SPL Refactoring, Clone-and-Own, VariantSync, merge refactoring",,
SCRS12,," J&ouml;rn Guy S&uuml;&szlig;,  David Carrington,  Neil Robinson,  Paul Strooper",(inbook),2012,"Mintha: A Framework for Auto-Programming and Testing of Railway Controllers for Varying Clients","","","","","","SPL Implementation, SPL Testing, FeatureIDE",,
HMZ:RAMiCS12,," Peter H&ouml;fner,  Bernhard M&ouml;ller,  Andreas Zelend",RAMiCS,2012,"Foundations of Coloring Algebra with Consequences for Feature-Oriented Programming","","","","","","Feature Orientation, Preprocessors, SPL Formalization",,
HMZ12,," Peter H&ouml;fner,  Bernhard M&ouml;ller,  Andreas Zelend",(techreport),2012,"Foundations of Coloring Algebra with Consequences for Feature-Oriented Programming","","","","","","Feature Orientation, Preprocessors, SPL Formalization",,
JLM+12,," Sven J&ouml;rges,  Anna-Lena Lamprecht,  Tiziana Margaria,  Ina Schaefer,  Bernhard Steffen",STTT,2012,"A Constraint-Based Variability Modeling Framework","feature-model analysis","","","","","Feature Modeling",,
DS:ISoLA12,," Ferruccio Damiani,  Ina Schaefer",ISoLA,2012,"Family-Based Analysis of Type Safety for Delta-Oriented Software Product Lines","type checking","feature-family-based analysis","composition-based implementation","domain-independent specification","source code / program","Delta Orientation, SPL Type Checking, CSUR14, PhD15",,
BTG12,," Paulo Borba,  Leopoldo Teixeira,  Rohit Gheyi",TCS,2012,"A Theory of Software Product Line Refinement","","","","","","SPL Evolution, SPL Refactoring, SPL Migration, VariantSync",,
SRC+12,," Ina Schaefer,  Rick Rabiser,  Dave Clarke,  Lorenzo Bettini,  David Benavides,  Goetz Botterweck,  Animesh Pathak,  Salvador Trujillo,  Karina Villela",STTT,2012,"Software Diversity: State of the Art and Perspectives","","","","","","SPL Implementation, SPL Specification",,
BMS:FM12,," Maurice H. ter Beek,  Franco Mazzanti,  Aldi Sulova",FM,2012,"VMC: A Tool for Product Variability Analysis","model checking","family-based analysis","annotation-based implementation","family-based specification","design","SPL Model Checking, CSUR14, PhD15",,
SCD:FASE12,," Jiangfan Shi,  Myra B. Cohen,  Matthew B. Dwyer",FASE,2012,"Integration Testing of Software Product Lines Using Compositional Symbolic Execution","static analysis, testing","family-product-based analysis","annotation-based implementation","domain-independent specification","source code / program","SPL Testing, SPL Static Analysis, Feature Interaction, Abstract Features, Pairwise Testing, CSUR14, PhD15, name=Shi's dataflow analysis, feature model, implementation artifacts, greedy, code coverage, t-wise coverage, sampling efficiency, unavailable tool, evaluation, testing, SPLC18",,
HRRS:Monterey12,," Arne Haber,  Holger Rendel,  Bernhard Rumpe,  Ina Schaefer",Monterey,2012,"Evolving Delta-Oriented Software Product Line Architectures","","","","","","SPL Evolution, Delta Orientation",,
BS:FOSD12,," Thomas Buchmann,  Felix Schw&auml;gerl",FOSD,2012,"Ensuring Well-Formedness of Configured Domain Models in Model-Driven Product Lines Based on Negative Variability","type checking","unoptimized product-based analysis","annotation-based implementation","domain-independent specification","design","SPL Type Checking, CSUR14, PhD15",,
HLL+12,," John Hatcliff,  Gary T. Leavens,  K. Rustan M. Leino,  Peter M&uuml;ller,  Matthew Parkinson",CSUR,2012,"Behavioral Interface Specification Languages","","","","","","Design by Contract, Survey",,
DDJ+:FMSPLE12,," Ferruccio Damiani,  Olaf Owe,  Johan Dovland,  Ina Schaefer,  Einar Broch Johnsen,  Ingrid Chieh Yu",FMSPLE,2012,"A Transformational Proof System for Delta-Oriented Programming","theorem proving","feature-product-based analysis","composition-based implementation","feature-based specification","source code / program","Delta Orientation, Feature Orientation, Design by Contract, Preconditions Lazy, SPL Theorem Proving, CSUR14, PhD15",,
T:MIT12,," Thomas Th&uuml;m",MIT,2012,"Verification of Software Product Lines Using Contracts","","","","","","Design by Contract, SPL Theorem Proving",,
TSAH:GPCE12,," Thomas Th&uuml;m,  Ina Schaefer,  Sven Apel,  Martin Hentschel",GPCE,2012,"Family-Based Deductive Verification of Software Product Lines","theorem proving","family-based analysis","composition-based implementation","feature-based specification","source code / program","SPL Theorem Proving, Design by Contract, CSUR14, PhD15",,
KATS:TOSEM12,," Christian K&auml;stner,  Sven Apel,  Thomas Th&uuml;m,  Gunter Saake",TOSEM,2012,"Type Checking Annotation-Based Product Lines","type checking","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","SPL Type Checking, compared to single product, CSUR14, PhD15, SAT",,
B:PLAS12,,"Eric Bodden",PLAS,2012,"Position Paper: Static Flow-Sensitive &amp; Context-Sensitive Information-Flow Analysis for Software Product Lines","static analysis","family-based analysis","annotation-based implementation","family-wide specification","source code / program","SPL Static Analysis, CSUR14, PhD15",,
useBRT+13,," Claus Brabrand,  Marcio Ribeiro,  Tarsis Toledo,  Paulo Borba",AOSD,2012,"Intraprocedural Dataflow Analysis for Software Product Lines","static analysis","family-based analysis","annotation-based implementation","family-wide specification","source code / program","SPL Static Analysis, CSUR14, PhD15",,
ASL+12,,"Sven Apel, Sergiy Kolesnikov, J&ouml;rg Liebig, Christian K&auml;stner, Martin Kuhlemann, Thomas Leich",SCP,2012,"Access Control in Feature-Oriented Programming","","","","","","Feature Orientation",,
useTAK+:CSUR,," Thomas Th&uuml;m,  Sven Apel,  Christian K&auml;stner,  Martin Kuhlemann,  Ina Schaefer,  Gunter Saake",(techreport),2012,"Analysis Strategies for Software Product Lines","","","","","","SPL Type Checking, SPL Model Checking, SPL Static Analysis, SPL Analysis",,
TLD:OSR12,," Reinhard Tartler,  Daniel Lohmann,  Christian Dietrich,  Christoph Egger,  Julio Sincero",OSR,2012,"Configuration Coverage in the Analysis of Large-Scale System Software","family-specific analysis, type checking","sample-based analysis","annotation-based implementation","domain-independent specification","source code / program","Preprocessors, SPL Configuration Analysis, CSUR14, PhD15, name=all-yes-config, feature model, manual selection, expert knowledge, no coverage guarantee, sampling efficiency, effectiveness, open-source tool, evaluation, no prioritization, SPLC18, name=configuration coverage, feature model, greedy, implementation artifacts, code coverage, sampling efficiency, effectiveness, open-source tool, evaluation, no prioritization, Undertaker, type checking, SPLC18",,
TSK+:FASE12,," Thomas Th&uuml;m,  Ina Schaefer,  Martin Kuhlemann,  Sven Apel,  Gunter Saake",FASE,2012,"Applying Design by Contract to Feature-Oriented Programming","","","","","","Design by Contract, Feature Orientation",,
STKS:VaMoS12,," Sandro Schulze,  Thomas Th&uuml;m,  Martin Kuhlemann,  Gunter Saake",VaMoS,2012,"Variant-Preserving Refactoring in Feature-Oriented Software Product Lines","","","","","","SPL Refactoring, Feature Orientation",,
CBH:SCP11,,"Andreas Classen, Quentin Boucher, Patrick Heymans",SCP,2011,"A Text-Based Approach to Feature Modelling: Syntax and Semantics of TVL","","","","","","Feature-Modeling Language, TVL, Download",,
PLP11,," Richard Pohl,  Kim Lauenroth,  Klaus Pohl",ASE,2011,"A Performance Comparison of Contemporary Algorithmic Approaches for Automated Analysis Operations on Feature Models","","","","","","Model Counting, Feature Modeling, BDD, #SAT, SAT",,
HGS+:JRCS11,,"Andreas Herrmann, Daniel G. Goldstein, Rupert Stadler, Jan R. Landwehr, Mark Heitmann, Reto Hofstetter, Frank Huber",JRCS,2011,"The Effect of Default Options on Choice&#8211;Evidence from Online Product Configurators","","","","","","Product Configuration",,
OZLG:SPLC11,," Sebastian Oster,  Marius Zink,  Malte Lochau,  Mark Grechanik",SPLC,2011,"Pairwise Feature-Interaction Testing for SPLs: Potentials and Limitations","testing","sample-based analysis","annotation-based implementation","","design","Sampling, family-based specification (feature sets)?, evaluation of MoSo-PoLiTe, testing efficiency, effectiveness, unavailable tool, evaluation, testing, SPLC18",,
useXXJ:WCRE12,," Yinxing Xue",ICSE,2011,"Reengineering Legacy Software Products into Software Product Line Based on Automatic Variability Analysis","","","","","","SPL Migration, VariantSync",,
ACLF:ASE11,," Mathieu Acher,  Philippe Collet,  Philippe Lahire,  Robert B. France",ASE,2011,"Slicing Feature Models","","","","","","Feature Modeling",,
ALB+:ESECFSE11,," Sven Apel,  J&ouml;rg Liebig,  Benjamin Brandl,  Christian Lengauer,  Christian K&auml;stner",ESECFSE,2011,"Semistructured Merge: Rethinking Merge in Revision Control Systems","","","","","","VariantSync",,
DKB:WCRE11,,"Slawomir Duszynski, Jens Knodel, Martin Becker",WCRE,2011,"Analyzing the Source Code of Multiple Software Variants for Reuse Potential","variant-preserving migration","product-family-based analysis","product-based implementation","","source code / program","SPL Migration, VariantSync, specification undefined (none)",,
Pa11,,"Thomas Patzke",(phdthesis),2011,"Sustainable Evolution of Product Line Infrastructure Code","","","","","","SPL Evolution, SPL Implementation",,
HHJ+:FMCO11,," Reiner H&auml;hnle,  Michiel Helvensteijn,  Einar Broch Johnsen,  Michael Lienhardt,  Davide Sangiorgi,  Ina Schaefer,  Peter Y. H. Wong",FMCO,2011,"HATS Abstract Behavioral Specification: The Architectural View","","","","","","Design by Contract, Delta Orientation",,
W11,,"Benjamin Wei&szlig;",(phdthesis),2011,"Deductive Verification of Object-Oriented Software: Dynamic Frames, Dynamic Logic, and Predicate Abstraction","","","","","","Design by Contract",,
HZS:SCP11,," Shan Shan Huang,  David Zook,  Yannis Smaragdakis",SCP,2011,"Statically Safe Program Generation with SafeGen","type checking","family-based analysis","implementation independent","domain-independent specification","source code / program","SPL Type Checking, SPL Theorem Proving, CSUR14, PhD15",,
HS:TOPLAS11,," Shan Shan Huang,  Yannis Smaragdakis",TOPLAS,2011,"Morphing: Structurally Shaping a Class by Reflecting on Others","type checking","","composition-based implementation","domain-independent specification","source code / program","SPL Type Checking, feature-based analysis?, compared to none",,
EB+:ITNG11,," Alireza Ensan,  Ebrahim Bagheri,  Mohsen Asadi,  Dragan Gasevic,  Yevgen Biletskiy",ITNG,2011,"Goal-Oriented Test Case Selection and Prioritization for Product Line Feature Models","testing","","","","","name=Ensan's algorithm, feature model, expert knowledge, greedy, semi-automatic selection, no coverage guarantee, testing efficiency, evaluation, SPLC18",,
JHF:MODELS11,," Martin Fagereng Johansen,  Oystein Haugen,  Franck Fleurey",(incollection),2011,"Properties of Realistic Feature Models Make Combinatorial Testing of Product Lines Feasible","testing","","","","","name=Chvatal's algorithm, usage of FeatureIDE/SPLAR/Sat4J, feature model, greedy, automatic selection, t-wise coverage, sampling efficiency, sampling efficiency, open-source tool, evaluation, SPLC18",,
GCD:ESE11,," Brady J. Garvin,  Myra B. Cohen,  Matthew B. Dwyer",EMSE,2011,"Evaluating Improvements to a Meta-Heuristic Search for Constrained Interaction Testing","testing","","","","","name=CASA, feature model, local search, automatic selection, t-wise coverage, sampling efficiency, testing efficiency, open-source tool, evaluation, compared to CDS:TSE08, SPLC18",,
JH:TSE11,," Yue Jia,  Mark Harman",TSE,2011,"An Analysis and Survey of the Development of Mutation Testing","","","","","","Testing, Survey",,
C:NFM11,," David R. Cok",NFM,2011,"OpenJML: JML for Java 7 by Extending OpenJDK","","","","","","Design by Contract, Runtime Assertion Checking",,
SK:FACS11,," Hamideh Sabouri,  Ramtin Khosravi",FACS,2011,"Reducing the Model Checking Cost of Product Lines Using Static Analysis Techniques","model checking, static analysis","family-based analysis","annotation-based implementation","family-wide specification","design","SPL Static Analysis, SPL Model Checking, CSUR14, PhD15",,
NL:CSUR11,," Changhai Nie,  Hareton Leung",CSUR,2011,"A Survey of Combinatorial Testing","","","","","","Testing, Survey",,
BK:CAV11,," Dirk Beyer,  M. Erkan Keremoglu",CAV,2011,"CPAchecker: A Tool for Configurable Software Verification","","","","","","Model Checking",,
OWES11,," Sebastian Oster,  Andreas W&uuml;bbeke,  Gregor Engels,  Andy Sch&uuml;rr",(incollection),2011,"A Survey of Model-Based Software Product Lines Testing","","","","","","SPL Testing, Survey",,
LHME:SPLC11,," Roberto E. Lopez-Herrejon,  Leticia Montalvillo-Mendizabal,  Alexander Egyed",SPLC,2011,"From Requirements to Features: An Exploratory Study of Feature-Oriented Refactoring","","","","","","SPL Evolution, SPL Refactoring",,
DCI+11,," Paulo Anselmo Da Mota Silveira Neto,  Ivan Do Carmo Machado,  John D. McGregor,  Eduardo Santana De Almeida,  Silvio Romero De Lemos Meira",IST,2011,"A Systematic Mapping Study of Software Product Lines Testing","","","","","","SPL Testing, Survey",,
ALH+:ICSR11,," Mauricio Alferez,  Roberto E. Lopez-Herrejon,  Ana Moreira,  Vasco Amaral,  Alexander Egyed",ICSR,2011,"Supporting Consistency Checking Between Features and Software Product Line Use Scenarios","type checking","family-based analysis","composition-based implementation","domain-independent specification","requirements","SPL Type Checking, compared to none, CSUR14, PhD15",,
KAO:FOSD11,," Christian K&auml;stner,  Sven Apel,  Klaus Ostermann",FOSD,2011,"The Road to Feature Modularity?","","","","","","Open-Closed World, Modularity, Feature Orientation, Feature Modeling, Feature Interaction, Design by Contract",,
EW11,," Martin Erwig,  Eric Walkingshaw",TOSEM,2011,"The Choice Calculus: A Representation for Software Variation","","","","","","SPL Formalization",,
RCL+:FTfJP11,," Henrique Rebelo,  Roberta Coelho,  Ricardo Lima,  Gary T. Leavens,  Marieke Huisman,  Alexandre Mota,  Fernando Castor Filho",FTfJP,2011,"On the Interplay of Exception Handling and Design by Contract: An Aspect-Oriented Recovery Approach","","","","","","Design by Contract, Aspect Orientation",,
P11,," David L. Parnas",The Future of Software Engineering,2011,"Precise Documentation: The Key to Better Software","","","","","","Specification",,
RQB+:GPCE11,," Marcio Ribeiro,  Felipe Queiroz,  Paulo Borba,  Tarsis Toledo,  Claus Brabrand,  Sergio Soares",GPCE,2011,"On the Impact of Feature Dependencies when Maintaining Preprocessor-Based Software Product Lines","static analysis","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","SPL Static Analysis, Preprocessors, CSUR14, PhD15",,
GWW+11,," Jianmei Guo,  Jules White,  Guangxin Wang,  Jian Li,  Yinglin Wang",JSS,2011,"A Genetic Algorithm for Optimized Feature Selection with Resource Constraints in Software Product Lines","","","","","","Feature Modeling",,
ABFG:FMOODS11,," Patrizia Asirelli,  Maurice H. ter Beek,  Alessandro Fantechi,  Stefania Gnesi",FMOODSFORTE,2011,"A Model-Checking Tool for Families of Services","model checking","family-based analysis","annotation-based implementation","family-based specification","design","SPL Model Checking, CSUR14, PhD15",,
TBG:SBES11,," Leopoldo Teixeira,  Paulo Borba,  Rohit Gheyi",SBES,2011,"Safe Composition of Configuration Knowledge-Based Software Product Lines","type checking","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","Feature Mapping, Abstract Features, SPL Type Checking, Preprocessors, compared to none, CSUR14, PhD15",,
NTS+:GPCE11,," Lais Neves,  Leopoldo Teixeira,  Demostenes Sena,  Vander Alves,  Uira Kulesza,  Paulo Borba",GPCE,2011,"Investigating the Safe Evolution of Software Product Lines","","","","","","SPL Evolution",,
GPB:SC11,," Ali Gondal,  Michael Poppleton,  Michael Butler",SC,2011,"Composing Event-B Specifications: Case-Study Experience","model checking, theorem proving","feature-product-based analysis","components","feature-product-based specification","design","SPL Specification, SPL Model Checking, SPL Theorem Proving",,
ABF+:PLEASE11,," Patrizia Asirelli,  Maurice H. ter Beek,  Alessandro Fantechi,  Stefania Gnesi,  Franco Mazzanti",PLEASE,2011,"Design and Validation of Variability in Product Lines","model checking","family-based analysis","annotation-based implementation","family-based specification","design","SPL Model Checking, CSUR14, PhD15",,
BMP:SERENE11,," Maurice H. ter Beek,  Henry Muccini,  Patrizio Pelliccione",SERENE,2011,"Guaranteeing Correct Evolution of Software Product Lines: Setting up the Problem","","","","","","SPL Evolution, SPL Model Checking, Design by Contract",,
useABFG:ISoLA12,," Patrizia Asirelli,  Maurice H. ter Beek,  Stefania Gnesi,  Alessandro Fantechi",SPLC,2011,"Formal Description of Variability in Product Families","model checking","family-based analysis","annotation-based implementation","family-based specification","design","SPL Model Checking, CSUR14, PhD15",,
CE:SPLC11,," Sheng Chen,  Martin Erwig",SPLC,2011,"Optimizing the Product Derivation Process","","","","","","Feature Modeling",,
KA:GTTSE11,,"Christian K&auml;stner, Sven Apel",GTTSE,2011,"Feature-Oriented Software Development: A Short Tutorial on Feature-Oriented Programming, Virtual Separation of Concerns, and Variability-Aware Analysis","","","","","","Feature Orientation, SPL Type Checking",,
TSP+:11,," Thomas Th&uuml;m,  Sandro Schulze,  Mario Pukall,  Gunter Saake,  Sebastian G&uuml;nther",(techreport),2011,"AutoDaMa: On the Feasibility of Secure and Tailor-made Automotive Data Management","","","","","","",,
ASW+:ASE11,," Sven Apel,  Hendrik Speidel,  Philipp Wendler,  Alexander von Rhein,  Dirk Beyer",ASE,2011,"Detection of Feature Interactions Using Feature-Aware Verification","model checking","family-based analysis","composition-based implementation","feature-based specification","source code / program","SPL Model Checking, Variability Encoding, CSUR14, PhD15",,
useASW+:ASE11,," Sven Apel,  Hendrik Speidel,  Philipp Wendler,  Alexander von Rhein,  Dirk Beyer",(techreport),2011,"Feature-Aware Verification","model checking","family-based analysis","composition-based implementation","feature-based specification","source code / program","SPL Model Checking, Variability Encoding, CSUR14, PhD15",,
BKS:FoVeOOS11,," Daniel Bruns,  Vladimir Klebanov,  Ina Schaefer",FoVeOOS,2011,"Verification of Software Product Lines with Delta-Oriented Slicing","theorem proving","regression-based analysis","composition-based implementation","feature-based specification","source code / program","Delta Orientation, Design by Contract, SPL Specification, SPL Theorem Proving, CSUR14, PhD15",,
KBK:AOSD11,," Chang Hwan Peter Kim,  Don Batory,  Sarfraz Khurshid",AOSD,2011,"Reducing Combinatorics in Testing Product Lines","static analysis, testing","family-product-based analysis","composition-based implementation, annotation-based implementation","family-wide specification","source code / program","Feature Orientation, SPL Static Analysis, SPL Testing, CSUR14, PhD15, name=Kim's combinatorial reduction, usage of Sat4J, feature model, implementation artifacts, test artifacts, greedy, automatic selection, code coverage, sampling efficiency, testing efficiency, unavailable tool, evaluation, testing, SPLC18",,
ACLF:SAC11,," Mathieu Acher,  Philippe Collet,  Philippe Lahire,  Robert B. France",SAC,2011,"A Domain-Specific Language for Managing Feature Models","","","","","","Feature Modeling Tool",,
BFL+11,," Mike Barnett,  Manuel F&auml;hndrich,  K. Rustan M. Leino,  Peter M&uuml;ller,  Wolfram Schulte,  Herman Venter",CACM,2011,"Specification and Verification: The Spec# Experience","","","","","","Design by Contract, Verification, Preconditions Strict",,
ER:IST11,," Emelie Engstr&ouml;m,  Per Runeson",IST,2011,"Software Product Line Testing - A Systematic Mapping Study","","","","","","SPL Testing, Survey",,
TLSS:EuroSys11,," Reinhard Tartler,  Daniel Lohmann,  Julio Sincero,  Wolfgang Schr&ouml;der-Preikschat",EuroSys,2011,"Feature Consistency in Compile-Time-Configurable System Software: Facing the Linux 10,000 Feature Problem","family-specific analysis","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","Preprocessors, SPL Static Analysis, CSUR14, PhD15, SAT",,
KGR+:OOPSLA11,," Christian K&auml;stner,  Paolo G. Giarrusso,  Tillmann Rendel,  Sebastian Erdweg,  Klaus Ostermann,  Thorsten Berger",OOPSLA,2011,"Variability-Aware Parsing in the Presence of Lexical Macros and Conditional Compilation","syntax checking","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","SPL Parsing, Preprocessors, CSUR14, PhD15, SAT",,
DCB:OOPSLA11,," Benjamin Delaware,  William Cook,  Don Batory",OOPSLA,2011,"Product Lines of Theorems","theorem proving","feature-product-based analysis","composition-based implementation","domain-independent specification","theory","SPL Theorem Proving, CSUR14, PhD15",,
HRRS:MBEES11,,"Arne Haber, Holger Rendel, Bernhard Rumpe, Ina Schaefer",MBEES,2011,"Delta Modeling for Software Architectures","","","","","","",,
H11,," Sebastian Henneberg",(mastersthesis),2011,"Next-Generation Feature Models with Pseudo-Boolean SAT Solvers","","","","","","",,
useHS:ISoLA12,," Reiner H&auml;hnle,  Ina Schaefer",FoVeOOS,2011,"A Liskov Principle for Delta-Oriented Programming","","","","","","Design by Contract, Delta Orientation, Preconditions Lazy, SPL Theorem Proving",,
STAL:FOSD11,," Wolfgang Scholz,  Thomas Th&uuml;m,  Sven Apel,  Christian Lengauer",FOSD,2011,"Automatic Detection of Feature Interactions Using the Java Modeling Language: An Experience Report","static analysis","unoptimized product-based analysis","composition-based implementation","feature-based specification","source code / program","SPL Static Analysis, Design by Contract, Feature Orientation, CSUR14, PhD15",,
LBL:AUSE11,," Jing Liu,  Samik Basu,  Robyn Lutz",AUSE,2011,"Compositional Model Checking of Software Product Lines Using Variation Point Obligations","model checking","feature-product-based analysis","composition-based implementation","family-wide specification","design","SPL Model Checking, CSUR14, PhD15",,
SH11,," Ina Schaefer,  Reiner H&auml;hnle",Computer,2011,"Formal Methods in Software Product Line Engineering","","","","","","SPL Specification, SPL Model Checking, SPL Theorem Proving",,
SBD11,," Ina Schaefer,  Lorenzo Bettini,  Ferruccio Damiani",AOSD,2011,"Compositional Type-Checking for Delta-Oriented Programming","type checking","feature-product-based analysis","composition-based implementation","domain-independent specification","source code / program","SPL Type Checking, Delta Orientation, CSUR14, PhD15",,
CHSL:ICSE11,," Andreas Classen,  Patrick Heymans,  Pierre-Yves Schobbens,  Axel Legay",ICSE,2011,"Symbolic Model Checking of Software Product Lines","model checking","family-based analysis","annotation-based implementation","family-based specification","design","SPL Model Checking, Variability Encoding, BDD, CSUR14, PhD15",,
SRK+:SPLC11,,"Norbert Siegmund, Marko Rosenm&uuml;ller, Christian K&auml;stner, Paolo G. Giarrusso, Sven Apel, Sergiy Kolesnikov",SPLC,2011,"Scalable Prediction of Non-Functional Properties in Software Product Lines","","","","","","name=interaction-wise heuristic, compared to feature-wise heuristic/pair-wise heuristic, feature model, greedy, automatic selection, no coverage guarantee, testing efficiency, effectiveness, open-source tool, evaluation, non-functional properties, SPLConqueror, SAT, SPLC18",,
TKES:SPLC11,,"Thomas Th&uuml;m, Christian K&auml;stner, Sebastian Erdweg, Norbert Siegmund",SPLC,2011,"Abstract Features in Feature Modeling","","","","","","Feature Modeling, Abstract Features, Feature Mapping",,
RS:ICST11,,"Vladimir V. Rubanov, Eugene A. Shatokhin",ICST,2011,"Runtime Verification of Linux Kernel Modules Based on Call Interception","runtime analysis","unoptimized product-based analysis","annotation-based implementation","domain-independent specification","source code / program","",,
MCHB:VAMOS11,," Raphael Michel,  Andreas Classen,  Arnaud Hubaux,  Quentin Boucher",VaMoS,2011,"A Formal Semantics for Feature Cardinalities in Feature Diagrams","","","","","","Feature Modeling",,
SLBWC:ICSE11,," Steven She,  Rafael Lotufo,  Thorsten Berger, Andrzej Wasowski,  Krzysztof Czarnecki",ICSE,2011,"Reverse Engineering Feature Models","","","","","","Feature Modeling",,
TSKA:VAST11,," Thomas Th&uuml;m,  Ina Schaefer,  Martin Kuhlemann,  Sven Apel",VAST,2011,"Proof Composition for Deductive Verification of Software Product Lines","theorem proving","feature-product-based analysis","composition-based implementation","feature-based specification","source code / program","SPL Theorem Proving, Design by Contract, CSUR14, PhD15",,
OZML:VaMoS11,," Sebastian Oster,  Ivan Zorcic,  Florian Markert,  Malte Lochau",VaMoS,2011,"MoSo-PoLiTe - Tool Support for Pairwise and Model-Based Software Product Line Testing","","","","","","SPL Testing",,
RSTS:VAMOS11,," Marko Rosenm&uuml;ller,  Norbert Siegmund,  Thomas Th&uuml;m,  Gunter Saake",VaMoS,2011,"Multi-Dimensional Variability Modeling","","","","","","Feature Modeling",,
LSB+:SPLC10,," Rafael Lotufo,  Steven She,  Thorsten Berger,  Krzysztof Czarnecki,  Andrzej Wasowski",SPLC,2010,"Evolution of the Linux Kernel Variability Model","","","","","","Kconfig",,
SB:TR10,,"Steven She, Thorsten Berger",(techreport),2010,"Formal Semantics of the Kconfig Language","","","","","","Kconfig",,
KZK:LoCoCo10,,"Andreas K&uuml;bler, Christoph Zengler, Wolfgang K&uuml;chlin",LoCoCo,2010,"Model Counting in Product Configuration","","","","","","Model Counting",,
DGRN:JSS10,," Deepak Dhungana,  Paul Gr&uuml;nbacher,  Rick Rabiser,  Thomas Neumayer",JSS,2010,"Structuring the Modeling Space and Supporting Evolution in Software Product Line Engineering","","","","","","Compositional Feature Modeling",,
D:SPLC10,," Slawomir Duszynski",SPLC,2010,"Visualizing and Analyzing Software Variability with Bar Diagrams and Occurrence Matrices","variant-preserving migration","product-family-based analysis","product-based implementation","","source code / program","specification undefined (none)",,
GKN:SPLC10,," Yossi Gil,  Shiri Kremer-Davidson,  Itay Maman",SPLC,2010,"Sans Constraints? Feature Diagrams vs. Feature Models","","","","","","Feature Modeling, ReqEx",,
SF:DLS10,," T. Stephen Strickland,  Matthias Felleisen",DLS,2010,"Contracts for First-Class Classes","","","","","","Design by Contract, Mixins",,
HEB+:FOSD10,," Wanja Hofer,  Christoph Elsner,  Frank Blendinger,  Wolfgang Schr&ouml;der-Preikschat,  Daniel Lohmann",FOSD,2010,"Toolchain-Independent Variant Management with the Leviathan Filesystem","","","","","","VariantSync",,
KO:OOPSLA10,," Karl Klose,  Klaus Ostermann",OOPSLA,2010,"Modular Logic Metaprogramming","type checking","feature-product-based analysis","composition-based implementation","domain-independent specification","source code / program","SPL Type Checking, CSUR14, PhD15",,
KKHL:FOSD10,," Andy Kenner,  Christian K&auml;stner,  Steffen Haase,  Thomas Leich",FOSD,2010,"TypeChef: Toward Type Checking #Ifdef Variability in C","type checking","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","Preprocessors, SPL Type Checking, SPL Parsing, compared to single product, CSUR14, PhD15",,
ABGF:VaMoS10,," Patrizia Asirelli,  Maurice H. ter Beek,  Stefania Gnesi,  Alessandro Fantechi",VaMoS,2010,"A Deontic Logical Framework for Modelling Product Families","model checking","family-based analysis","annotation-based implementation","family-based specification","design","SPL Model Checking, CSUR14, PhD15",,
SK:FMSPLE10,,"Hamideh Sabouri, Ramtin Khosravi",FMSPLE,2010,"An Effective Approach for Verifying Product Lines in Presence of Variability Models","feature-model analysis","","","","","Feature Modeling, Feature Mapping",,
useKBK:AOSD11,," Chang Hwan Peter Kim,  Don Batory,  Sarfraz Khurshid",ASE,2010,"Eliminating Products to Test in a Software Product Line","static analysis, testing","family-product-based analysis","composition-based implementation, annotation-based implementation","family-wide specification","source code / program","Feature Orientation, SPL Static Analysis, SPL Testing, CSUR14, PhD15, name=Kim's combinatorial reduction, usage of Sat4J, feature model, implementation artifacts, test artifacts, greedy, automatic selection, code coverage, sampling efficiency, testing efficiency, unavailable tool, evaluation, testing, SPLC18",,
SPB:ABZ10,," Jennifer Sorge,  Michael Poppleton,  Michael Butler",ABZ,2010,"A Basis for Feature-Oriented Modelling in Event-B","model checking, theorem proving","feature-product-based analysis","components","feature-product-based specification","design","SPL Model Checking, SPL Theorem Proving",,
SOM:SOFSEM10,," Andy Sch&uuml;rr,  Sebastian Oster,  Florian Markert",SOFSEM,2010,"Model-Driven Software Product Line Testing: An Integrated Approach","","","","","","SPL Testing",,
LMP10,," Kim Lauenroth,  Andreas Metzger,  Klaus Pohl",IPISE,2010,"Quality Assurance in the Presence of Variability","model checking","family-based analysis","annotation-based implementation","feature-based specification","design","SPL Model Checking, CSUR14, PhD15",,
VGE+:ASE10,," Michael Vierhauser,  Paul Gr&uuml;nbacher,  Alexander Egyed,  Rick Rabiser,  Wolfgang Heider",ASE,2010,"Flexible and Scalable Consistency Checking on Product Line Variability Models","type checking","optimized product-based analysis","composition-based implementation","domain-independent specification","design, source code / program","SPL Type Checking, SPL Evolution",,
MCP+:FMSPLE10,," Radu Muschevici,  Dave Clarke,  Jose Proenca",FMSPLE,2010,"Feature Petri Nets","analysis method undefined","analysis strategy undefined","annotation-based implementation","specification undefined","design","SPL Modeling",,
KBBK:RV10,," Chang Hwan Peter Kim,  Eric Bodden,  Don Batory,  Sarfraz Khurshid",RV,2010,"Reducing Configurations to Monitor in a Software Product Line","static analysis, testing","family-product-based analysis","composition-based implementation","family-wide specification","source code / program","Feature Orientation, Aspect Orientation, SPL Static Analysis, SPL Testing, CSUR14, PhD15, name=Kim's monitoring technique, feature model, implementation artifacts, test artifacts, greedy, automatic selection, code coverage, sampling efficiency, testing efficiency, unavailable tool, evaluation, testing, SPLC18",,
ALMK10,," Sven Apel,  Christian Lengauer,  Bernhard M&ouml;ller,  Christian K&auml;stner",SCP,2010,"An Algebraic Foundation for Automatic Feature-Based Program Synthesis","","","","","","Feature Orientation, SPL Formalization",,
ABFG:iFM10,," Patrizia Asirelli,  Maurice H. ter Beek,  Alessandro Fantechi,  Stefania Gnesi",iFM,2010,"A Logical Framework to Deal with Variability","model checking","family-based analysis","annotation-based implementation","family-based specification","design","SPL Model Checking, CSUR14, PhD15",,
DJOS10,,"Johan Dovland, Einar Broch Johnsen, Olaf Owe, Martin Steffen",JLAP,2010,"Lazy Behavioral Subtyping","","","","","","Design by Contract",,
BDH:FoVeOOS10,," Richard Bubel,  Crystal Din,  Reiner H&auml;hnle",FoVeOOS,2010,"Verification of Variable Software: An Experience Report","feature-model analysis","","","","","Design by Contract, SPL Theorem Proving",,
SMP:SPLC10,," Vanessa Stricker,  Andreas Metzger,  Klaus Pohl",SPLC,2010,"Avoiding Redundant Testing in Application Engineering","static analysis, testing","regression-based analysis","implementation undefined","specification undefined","design","SPL Testing, SPL Static Analysis",,
RSK:FOSD10,," Marko Rosenm&uuml;ller,  Norbert Siegmund,  Martin Kuhlemann",FOSD,2010,"Improving Reuse of Component Families by Generating Component Hierarchies","","","","","","SPL Implementation",,
AL:iFM10,," Serge Autexier,  Christoph L&uuml;th",iFM,2010,"Adding Change Impact Analysis to the Formal Verification of C Programs","","","","","","Verification",,
STL:TR10,,"Julio Sincero, Reinhard Tartler, Daniel Lohmann",(techreport),2010,"An Algorithm for Quantifying the Program Variability Induced by Conditional Compilation","","","","","","Preprocessors, SPL Configuration Analysis",,
STLS:GPCE10,," Julio Sincero,  Reinhard Tartler,  Daniel Lohmann,  Wolfgang Schr&ouml;der-Preikschat",GPCE,2010,"Efficient Extraction and Analysis of Preprocessor-Based Variability","","","","","","Preprocessors, SPL Configuration Analysis",,
HPSA:SAC10,," Robert Hirschfeld,  Michael Perscheid,  Christian Schubert,  Malte Appeltauer",SAC,2010,"Dynamic Contract Layers","","","","","","Context Orientation, Design by Contract, Preconditions Strict",,
ASLK:FOSD10,,"Sven Apel, Wolfgang Scholz, Christian Lengauer, Christian K&auml;stner",FOSD,2010,"Language-Independent Reference Checking in Software Product Lines","type checking","family-based analysis","composition-based implementation","domain-independent specification","source code / program","SPL Type Checking, compared to none, CSUR14, PhD15",,
NNH10,," Flemming Nielson,  Hanne R. Nielson,  Chris Hankin",(book),2010,"Principles of Program Analysis","","","","","","Static Analysis",,
SGS:FMCO10,," Ina Schaefer,  Dilian Gurov,  Siavash Soleimanifard",FMCO,2010,"Compositional Algorithmic Verification of Software Product Lines","model checking","family-based analysis","annotation-based implementation","family-wide specification","source code / program","SPL Model Checking, CSUR14, PhD15",,
BCH+:ASE10,," Quentin Boucher,  Andreas Classen,  Patrick Heymans,  Arnaud Bourdoux,  Laurent Demonceau",ASE,2010,"Tag and Prune: A Pragmatic Approach to Software Product Line Implementation","","","","","","SPL Implementation",,
RPRB:SPLASH10,," Marcio Ribeiro,  Humberto Pacheco,  Leopoldo Teixeira,  Paulo Borba",SPLASH,2010,"Emergent Feature Modularization","static analysis","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","SPL Static Analysis, Preprocessors, CSUR14, PhD15",,
BDS:SAC10,,"Lorenzo Bettini, Ferruccio Damiani, Ina Schaefer",SAC,2010,"Implementing Software Product Lines Using Traits","type checking","feature-product-based analysis","composition-based implementation","domain-independent specification","source code / program","SPL Implementation, Traits, CSUR14, PhD15",,
AH:TOPLAS10,," Sven Apel,  Delesley Hutchins",TOPLAS,2010,"A Calculus for Uniform Feature Composition","type checking","feature-product-based analysis","composition-based implementation","domain-independent specification","source code / program","SPL Type Checking, CSUR14, PhD15",,
SC10,,"Amritam Sarcar, Yoonsik Cheon",(techreport),2010,"A New Eclipse-Based JML Compiler Built Using AST Merging","","","","","","",,
PSK+:ICST10,," Gilles Perrouin,  Sagar Sen,  Jacques Klein,  Benoit Baudry,  Yves Le Traon",ICST,2010,"Automated and Scalable T-Wise Test Case Generation Strategies for Software Product Lines","testing","sample-based analysis","composition-based implementation","family-based specification","source code / program","SPL Testing, name=Alloy-based sampling, feature model, greedy, t-wise coverage, evaluation, testing efficiency, effectiveness, unavailable tool, testing, SPLC18",,
RPK:GPCE10,," Uwe Ryssel,  Joern Ploennigs,  Klaus Kabitzsch",GPCE,2010,"Automatic Variation-Point Identification in Function-Block-Based Models","","","","","","merge refactoring",,
KS:FOSD10,," Martin Kuhlemann,  Martin Sturm",FOSD,2010,"Patching Product Line Programs","","","","","","",,
CIZ:OOPSLA10,," Shigeru Chiba,  Atsushi Igarashi,  Salikh Zakirov",OOPSLA,2010,"Mostly Modular Compilation of Crosscutting Concerns by Contextual Predicate Dispatch","type checking","unoptimized product-based analysis","composition-based implementation","domain-independent specification","source code / program","",,
BSLWC:ASE10,," Thorsten Berger,  Steven She,  Rafael Lotufo,  Andrzej Wasowski,  Krzysztof Czarnecki",ASE,2010,"Variability Modeling in the Real: A Perspective from the Operating Systems Domain","","","","","","Feature Modeling",,
OMR:SPLC10,," Sebastian Oster,  Florian Markert,  Philipp Ritter",SPLC,2010,"Automated Incremental Pairwise Testing of Software Product Lines","testing","sample-based analysis","implementation independent","","source code / program","SPL Testing, specification undefined (none), name=MoSo-PoLiTe, greedy, semi-automatic selection, feature model, expert knowledge, pair-wise coverage, sampling efficiency, testing efficiency, unavailable tool, evaluation, testing, SPLC18, SAT",,
K10,,"Christian K&auml;stner",(phdthesis),2010,"Virtual Separation of Concerns: Toward Preprocessors 2.0","","","","","","Preprocessors",,
CHSLR10,,"Andreas Classen, Patrick Heymans, Pierre-Yves Schobbens, Axel Legay, Jean-Francois Raskin",ICSE,2010,"Model Checking Lots of Systems: Efficient Verification of Temporal Properties in Software Product Lines","model checking","family-based analysis","annotation-based implementation","feature-based specification","design","SPL Model Checking, CSUR14, PhD15",,
AKGL10,," Sven Apel,  Christian K&auml;stner,  Armin Gr&ouml;&szlig;linger,  Christian Lengauer",AUSE,2010,"Type Safety for Feature-Oriented Product Lines","type checking","family-based analysis","composition-based implementation","domain-independent specification","source code / program","Feature Orientation, Type Checking, compared to none, CSUR14, PhD15",,
T10,," Thomas Th&uuml;m",(mastersthesis),2010,"A Machine-Checked Proof for a Product-Line&#8211;Aware Type System","","","","","","SPL Type Checking",,
ASLK:ISSRE10,," Sven Apel,  Wolfgang Scholz,  Christian Lengauer,  Christian K&auml;stner",ISSRE,2010,"Detecting Dependences and Interactions in Feature-Oriented Design","model checking","unoptimized product-based analysis","composition-based implementation","feature-based specification","design","Feature Orientation, SPL Model Checking, CSUR14, PhD15",,
SBB+:SPLC10,," Ina Schaefer,  Lorenzo Bettini,  Viviana Bono,  Ferruccio Damiani,  Nico Tanzarella",SPLC,2010,"Delta-Oriented Programming of Software Product Lines","","","","","","Delta Orientation, Feature Orientation, SPL Implementation",,
LAL+:ICSE10,,"J&ouml;rg Liebig, Sven Apel, Christian Lengauer, Christian K&auml;stner, Michael Schulze",ICSE,2010,"An Analysis of the Variability in Forty Preprocessor-Based Software Product Lines","","","","","","Preprocessors",,
BSRC10,,"David Benavides, Sergio Segura, Antonio Ruiz-Cortes",Information Systems,2010,"Automated Analysis of Feature Models 20 Years Later: A Literature Review","","","","","","Feature Modeling, Survey",,
CCD:ICSE09,," Gerardo Canfora,  Luigi Cerulo,  Massimiliano Di Penta",ICSE,2009,"Ldiff: An Enhanced Line Differencing Tool","","","","","","program diffing",,
KDPP:CVSM09,," Dimitrios S. Kolovos,  Davide Di Ruscio,  Alfonso Pierantonio,  Richard F. Paige",CVSM,2009,"Different Models for Model Matching: An Analysis of Approaches to Support Model Differencing","","","","","","two-way model diffing survey",,
BBH+09,," A. Biere,  A. Biere,  M. Heule,  H. van Maaren,  T. Walsh",(book),2009,"Handbook of Satisfiability: Volume 185 Frontiers in Artificial Intelligence and Applications","","","","","","Satisfiability Solving, Download",,
SS:HICSS09,,"Horst Schirmeier, Olaf Spinczyk",HICSS,2009,"Challenges in Software Product Line Composition","","","","","","Compositional Feature Modeling",,
SBFF:HICSS09,,"Clarissa Streichsbier, Paul Blazek, Fabian Faltin, Wolfgang Fr&uuml;hwirt",HICSS,2009,"Are De-Facto Standards a Useful Guide for Designing Human-Computer Interaction Processes? The Case of User Interface Design for Web Based B2C Product Configurators","","","","","","Product Configuration",,
OG:ICSR09,," Erika Mir Olimpiew,  Hassan Gomaa",ICSR,2009,"Reusable Model-Based Testing","testing","feature-product-based analysis","composition-based implementation","","source code / program","domain-independent specification?",,
KFBA:SQJ09,," Rainer Koschke,  Pierre Frenzel,  Andreas P. Breu,  Karsten Angstmann",SQJ,2009,"Extending the Reflexion Method for Consolidating Software Variants into Product Lines","","","","","","VariantSync",,
RCK:SCP09,," Chanchal K. Roy,  James R. Cordy,  Rainer Koschke",SCP,2009,"Comparison and Evaluation of Code Clone Detection Techniques and Tools: A Qualitative Approach","","","","","","Code Clones",,
MKB:JSME09,," Thilo Mende,  Rainer Koschke,  Felix Beckwermert",JSME,2009,"An Evaluation of Code Similarity Identification for the Grow-and-Prune Model","variant-preserving migration","product-based analysis","product-based implementation","","source code / program","Clone-and-Own, VariantSync, specification undefined (none), merge refactoring",,
CHTN:ICSE09,," Andreas Classen,  Patrick Heymans,  Thein Than Tun,  Bashar Nuseibeh",ICSE,2009,"Towards Safer Composition","","","","","","SPL Type Checking",,
ABGF:VaMoS09,," Patrizia Asirelli,  Maurice H. ter Beek,  Stefania Gnesi,  Alessandro Fantechi",VaMoS,2009,"Deontic Logics for Modeling Behavioural Variability - Research in Progress","model checking","family-based analysis","annotation-based implementation","family-based specification","design","SPL Model Checking, CSUR14, PhD15",,
PPR+:SIGMOD09,," Andrew Pavlo,  Erik Paulson,  Alexander Rasin,  Daniel J. Abadi,  David J. DeWitt,  Samuel Madden,  Michael Stonebraker",SIGMOD,2009,"A Comparison of Approaches to Large-scale Data Analysis","","","","","","PRG",,
WDF+:CADE09,," Christoph Weidenbach,  Dilyana Dimova,  Arnaud Fietzke,  Rohit Kumar,  Martin Suda,  Patrick Wischnewski",CADE,2009,"SPASS Version 3.5","","","","","","Theorem Proving",,
MBNJ:ICSE09,," Brice Morin,  Olivier Barais,  Gregory Nain,  Jean-Marc Jezequel",ICSE,2009,"Taming Dynamically Adaptive Systems Using Models and Aspects","","","","","","Aspect Orientation",,
MDHS09,," Todd Mytkowicz,  Amer Diwan,  Matthias Hauswirth,  Peter F. Sweeney",ASPLOS,2009,"Producing Wrong Data Without Doing Anything Obviously Wrong!","","","","","","PRG",,
C09,," Graham Cormode",SIGMOD Rec.,2009,"How NOT to Review a Paper: The Tools and Techniques of the Adversarial Reviewer","","","","","","Research Ethics",,
MFC+09,," Bertrand Meyer,  Arno Fiva,  Ilinca Ciupa,  Andreas Leitner,  Yi Wei,  Emmanuel Stapf",Computer,2009,"Programs That Test Themselves","","","","","","Specification, Testing",,
MA:SPLC09,," Sonia Montagud,  Silvia Abrahao",SPLC,2009,"Gathering Current Knowledge About Quality Evaluation in Software Product Lines","","","","","","SPL Analysis, Survey",,
TRC:VaMoS09,," Pablo Trinidad,  Antonio Ruiz-Cortes",VaMoS,2009,"Abductive Reasoning and Automated Analysis of Feature Models: How are They Connected?","","","","","","Feature Modeling",,
TSS+:FOSD09,," Reinhard Tartler,  Julio Sincero,  Wolfgang Schr&ouml;der-Preikschat,  Daniel Lohmann",FOSD,2009,"Dead or Alive: Finding Zombie Features in the Linux Kernel","family-specific analysis","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","Preprocessors, SPL Configuration Analysis, CSUR14, PhD15",,
DCB09,," Benjamin Delaware,  William Cook,  Don Batory",ESECFSE,2009,"Fitting the Pieces Together: A Machine-Checked Model of Safe Composition","type checking","feature-family-based analysis","composition-based implementation","domain-independent specification","source code / program","Feature Orientation, SPL Type Checking, compared to single product, CSUR14, PhD15",,
useDCB09,,"Benjamin Delaware, William Cook, Don Batory",FOAL,2009,"A Machine-Checked Model of Safe Composition","type checking","feature-family-based analysis","composition-based implementation","domain-independent specification","source code / program","Feature Orientation, SPL Type Checking, CSUR14, PhD15",,
MWC:SPLC09,," Marcilio Mendonca,  Andrzej Wasowski,  Krzysztof Czarnecki",SPLC,2009,"SAT-Based Analysis of Feature Models is Easy","","","","","","Feature Modeling, Random Feature Models",,
KAR+:SPLC09,," Christian K&auml;stner,  Sven Apel,  Syed Saif ur Rahman,  Marko Rosenm&uuml;ller,  Don Batory,  Gunter Saake",SPLC,2009,"On the Impact of the Optional Feature Problem: Analysis and Case Studies","","","","","","",,
H:FOSD09,," Florian Heidenreich",FOSD,2009,"Towards Systematic Ensuring Well-Formedness of Software Product Lines","type checking","family-based analysis","annotation-based implementation","domain-independent specification","design","SPL Type Checking, Abstract Features, compared to none, CSUR14, PhD15",,
BJS:VaMoS09,,"Goetz Botterweck, Mikolas Janota, Denny Schneeweiss",VaMoS,2009,"A Design of a Configurable Feature Model Configurator","","","","","","Feature Modeling Tool",,
M09,," Marcilio Mendonca",(phdthesis),2009,"Efficient Reasoning Techniques for Large Scale Feature Models","","","","","","",,
HM:FOSD09,," Peter H&ouml;fner,  Bernhard M&ouml;ller",FOSD,2009,"An Extension for Feature Algebra","","","","","","SPL Formalization",,
KBK:GPCE09,,"Martin Kuhlemann, Don Batory, Christian K&auml;stner",GPCE,2009,"Safe Composition of Non-Monotonic Features","type checking","family-based analysis","feature modules","domain-independent specification","source code / program","Feature Orientation, SPL Type Checking, compared to none, CSUR14, PhD15",,
MBC:OOPSLA09,," Marcilio Mendonca,  Moises Branco,  Donald Cowan",OOPSLA,2009,"S.P.L.O.T.: Software Product Lines Online Tools","","","","","","Feature Modeling Tool",,
LPT09,," Kim Lauenroth,  Klaus Pohl,  Simon Toehning",ASE,2009,"Model Checking of Domain Artifacts in Product Line Engineering","model checking","family-based analysis","annotation-based implementation","feature-based specification","design","SPL Model Checking, CSUR14, PhD15",,
WDS09,," Jules White,  Brian Dougherty,  Douglas C. Schmidt",JSS,2009,"Selecting Highly Optimal Architectural Feature Sets with Filtered Cartesian Flattening","","","","","","Abstract Features",,
AK09,,"Sven Apel, Christian K&auml;stner",JOT,2009,"An Overview of Feature-Oriented Software Development","","","","","","",,
useAKL13,,"Sven Apel, Christian K&auml;stner, Christian Lengauer",ICSE,2009,"FeatureHouse: Language-Independent, Automated Software Composition","","","","","","Feature Orientation",,
KAK:GPCE09,," Christian K&auml;stner,  Sven Apel,  Martin Kuhlemann",GPCE,2009,"A Model of Refactoring Physically and Virtually Separated Features","","","","","","Feature Orientation, Preprocessors, SPL Refactoring, SPL Migration",,
R09,,"Malte Rosenthal",(mastersthesis),2009,"Alternative Features in Colored Featherweight Java","","","","","","",,
F09b,,"Bruno De Fraine",(misc),2009,"Formalization and Type-Soundness Proof for Featherweight Java in Coq","","","","","","",,
F09,,"Bruno De Fraine",(phdthesis),2009,"Language Facilities for the Deployment of Reusable Aspects","","","","","","",,
AKGL09,,"Sven Apel, Christian K&auml;stner, Armin Gr&ouml;&szlig;linger, Christian Lengauer",(techreport),2009,"Type-Safe Feature-Oriented Product Lines","","","","","","",,
JDHW09,," Elmar Juergens,  Florian Deissenboeck,  Benjamin Hummel,  Stefan Wagner",ICSE,2009,"Do Code Clones Matter?","","","","","","Code Clones",,
TBK:ICSE09,,"Thomas Th&uuml;m, Don Batory, Christian K&auml;stner",ICSE,2009,"Reasoning about Edits to Feature Models","","","","","","Feature Modeling, Abstract Features, Feature Mapping, SPL Refactoring, Random Feature Models",,
KTS+:ICSE09,,"Christian K&auml;stner, Thomas Th&uuml;m, Gunter Saake, Janet Feigenspan, Thomas Leich, Fabian Wielgorz, Sven Apel",ICSE,2009,"FeatureIDE: A Tool Framework for Feature-Oriented Software Development","","","","","","Feature Modeling Tool, SPL Implementation Tool",,
BP:UPGRADE08,," Cedric Brun,  Alfonso Pierantonio",UPGRADE,2008,"Model Differences in the Eclipse Modeling Framework","","","","","","model diffing",,
HM:WCRE08,,"Masatomo Hashimoto, Akira Mori",WCRE,2008,"Diff/TS: A Tool for Fine-Grained Structural Change Analysis","","","","","","tree differencing",,
HMO+:SPLC08,,"Oystein Haugen, Birger Moller-Pedersen, Jon Oldevik, Goran K. Olsen, Andreas Svendsen",SPLC,2008,"Adding Standardized Variability to Domain Specific Languages","","","","","","Feature-Modeling Language, CVL, Download",,
K:ICSM08,,"Rainer Koschke",ICSM,2008,"Frontiers of Software Clone Management","","","","","","Cloning, VariantSync",,
LS:JAR08,," Mark H. Liffiton,  Karem A. Sakallah",JAR,2008,"Algorithms for Computing Minimal Unsatisfiable Subsets of Constraints","","","","","","Explanations",,
MBKM:CSMR08,," Thilo Mende,  Felix Beckwermert,  Rainer Koschke,  Gerald Meier",CSMR,2008,"Supporting the Grow-and-Prune Model in Software Product Lines Evolution Using Clone Detection","variant-preserving migration","product-based analysis","product-based implementation","","source code / program","specification undefined (none)",,
DKN+:WCRE08,,"Slawomir Duszynski, Jens Knodel, Matthias Naab, Dirk Hein, Clemens Schitter",WCRE,2008,"Variant Comparison - A Technique for Visualizing Software Variants","variant-preserving migration","product-family-based analysis","product-based implementation","","source code / program","SPL Migration, specification undefined (none)",,
KKB:GPCE08,," Chang Hwan Peter Kim,  Christian K&auml;stner,  Don Batory",GPCE,2008,"On the Modularity of Feature Interactions","type checking","family-based analysis","composition-based implementation, annotation-based implementation","domain-independent specification","source code / program","SPL Type Checking, Feature Interaction, Feature Orientation, Preprocessors, compared to none, CSUR14, PhD15",,
P:ABZ08,," Michael Poppleton",ABZ,2008,"The Composition of Event-B Models","model checking, theorem proving","feature-product-based analysis","components","feature-product-based specification","design","SPL Theorem Proving, SPL Model Checking",,
SG08,," Ofer Strichman,  Benny Godlin",(incollection),2008,"Verified Software: Theories, Tools, Experiments","","","","","","Model Checking",,
BTC:ICECCS08,," Soheila Bashardoust-Tajali,  Jean-Pierre Corriveau",ICECCS,2008,"On Extracting Tests from a Testable Model in the Context of Domain Engineering","","","","","","SPL Testing, SPL Specification, Design by Contract",,
LMN:SPLC08,," Jaejoon Lee,  Dirk Muthig,  Matthias Naab",SPLC,2008,"An Approach for Developing Service Oriented Product Lines","","","","","","Design by Contract, SPL Specification, Service Orientation",,
CDS:TSE08,," Myra B. Cohen,  Matthew B. Dwyer,  Jiangfan Shi",TSE,2008,"Constructing Interaction Test Suites for Highly-Configurable Systems in the Presence of Constraints: A Greedy Approach","testing","","","","","name=AETG-SAT, testing efficiency, sampling efficiency, greedy, compares four variations of AETG-SAT, CCIT, feature model, t-wise coverage, unavailable tool, evaluation, JS20",,
ESB08,,"Leire Etxeberria, Goiuria Sagardui, Lorea Belategi",JBCS,2008,"Quality-Aware Software Product Line Engineering","","","","","","SPL Analysis, Survey",,
ENC+:ICSE08,," Eduardo Figueiredo,  Nelio Cacho,  Claudio Sant'Anna,  Mario Monteiro,  Uira Kulesza,  Alessandro Garcia,  Sergio Soares,  Fabiano Ferrari,  Safoora Khan,  Fernando Castor Filho,  Francisco Dantas",ICSE,2008,"Evolving Software Product Lines with Aspects: An Empirical Study on Design Stability","","","","","","Aspect Orientation, SPL Evolution",,
HKL+08,," Wook-Shin Han,  Wooseong Kwak,  Jinsoo Lee,  Guy M. Lohman,  Volker Markl",Proc. VLDB Endow.,2008,"Parallelizing Query Optimization","","","","","","PRG",,
L:BSD08,," Chris Lattner",BSDCan,2008,"LLVM and Clang: Next Generation Compiler Technology","","","","","","Static Analysis",,
AHM+08,," Nathaniel Ayewah,  David Hovemeyer,  J. David Morgenthaler,  John Penix,  William Pugh",Software,2008,"Using Static Analysis to Find Bugs","","","","","","Static Analysis",,
HH:FM08,," Alexander Harhurin,  Judith Hartmann",FM,2008,"Towards Consistent Specifications of Product Families","theorem proving","unoptimized product-based analysis","composition-based implementation","feature-based specification","design","SPL Theorem Proving, CSUR14, PhD15",,
RSL+:SAVCBS08,," Henrique Rebelo,  Sergio Soares,  Ricardo Lima,  Paulo Borba,  Marcio Cornelio",SAVCBS,2008,"JML and Aspects: The Benefits of Instrumenting JML Features with AspectJ","","","","","","Design by Contract, Aspect Orientation",,
TBD+08,," Pablo Trinidad,  David Benavides,  Amador Duran,  Antonio Ruiz-Cortes,  Miguel Toro",JSS,2008,"Automated Error Analysis for the Agilization of Feature Modeling","","","","","","Feature Modeling",,
hall-of-fame,,"David M. Weiss",SPLC,2008,"The Product Line Hall of Fame","","","","","","",,
GLS08,," Alexander Gruler,  Martin Leucker,  Kathrin Scheidemann",FMOODS,2008,"Modeling and Model Checking Software Product Lines","model checking","family-based analysis","annotation-based implementation","family-wide specification","design","SPL Model Checking, CSUR14, PhD15",,
FG:SPLC08,,"Alessandro Fantechi, Stefania Gnesi",SPLC,2008,"Formal Modeling for Product Families Engineering","model checking","unoptimized product-based analysis","annotation-based implementation","family-wide specification","design","SPL Model Checking, CSUR14, PhD15",,
AKL:GPCE08,,"Sven Apel, Christian K&auml;stner, Christian Lengauer",GPCE,2008,"Feature Featherweight Java: A Calculus for Feature-Oriented Programming and Stepwise Refinement","type checking","unoptimized product-based analysis","composition-based implementation","domain-independent specification","source code / program","Feature Orientation, Type Checking, CSUR14, PhD15",,
ALS:TSE08,," Sven Apel,  Thomas Leich,  Gunter Saake",TSE,2008,"Aspectual Feature Modules","","","","","","",,
AMG08,," Sergio Agostinho,  Ana Moreira,  Pedro Guerreiro",SPLAT,2008,"Contracts for Aspect-Oriented Design","","","","","","Aspect Orientation, Design by Contract, Preconditions Strict",,
RLCS08,," Henrique Rebelo,  Ricardo Lima,  Marcio Cornelio,  Sergio Soares",ICST,2008,"A JML Compiler Based on AspectJ","","","","","","Design by Contract, Aspect Orientation, Preconditions Strict",,
KARL:TOOLS08,," Martin Kuhlemann,  Sven Apel,  Marko Rosenm&uuml;ller,  Roberto E. Lopez-Herrejon",TOOLSeurope,2008,"A Multiparadigm Study of Crosscutting Modularity in Design Patterns","","","","","","",,
SKRKS:VaMoS08,,"Norbert Siegmund, Martin Kuhlemann, Marko Rosenm&uuml;ller, Christian K&auml;stner, Gunter Saake",VaMoS,2008,"Integrated Product Line Model for Semi-Automated Product Derivation Using Non-Functional Properties","","","","","","Feature Modeling",,
SRKKS:APSEC08,,"Norbert Siegmund, Marko Rosenm&uuml;ller, Martin Kuhlemann, Christian K&auml;stner, Gunter Saake",APSEC,2008,"Measuring Non-Functional Properties in Software Product Lines for Product Derivation","","","","","","",,
BB08,," Don Batory,  Egon B&ouml;rger",JUCS,2008,"Modularizing Theorems for Software Product Lines: The Jbook Case Study","theorem proving","feature-product-based analysis","composition-based implementation","feature-based specification","theory","CSUR14, PhD15",,
HKW:ICSE08,,"Florian Heidenreich, Jan Kopcsek, Christian Wende",ICSEC,2008,"FeatureMapper: Mapping Features to Models","","","","","","Feature Modeling Tool, SPL Implementation Tool",,
SSP08,,"Julio Sincero, Wolfgang Schr&ouml;der-Preikschat",SPLC,2008,"The Linux Kernel Configurator as a Feature Modeling Tool","","","","","","Feature Modeling",,
ACPPW08,," Brian Aydemir,  Arthur Chargueraud,  Benjamin C. Pierce,  Randy Pollack,  Stephanie Weirich",POPL,2008,"Engineering Formal Metatheory","","","","","","",,
JKB08,,"Mikolas Janota, Joseph Kiniry, Goetz Botterweck",(techreport),2008,"Formal Methods in Software Product Lines: Concepts, Survey, and Guidelines","","","","","","Feature Modeling, Survey",,
KTA08,,"Christian K&auml;stner, Salvador Trujillo, Sven Apel",ViSPLE,2008,"Visualizing Software Product Line Variabilities in Source Code","","","","","","",,
KAK08,,"Christian K&auml;stner, Sven Apel, Martin Kuhlemann",ICSE,2008,"Granularity in Software Product Lines","","","","","","",,
MWCC08,," Marcilio Mendonca,  Andrzej Wasowski,  Krzysztof Czarnecki,  Donald Cowan",GPCE,2008,"Efficient Compilation Techniques for Large Scale Feature Models","","","","","","Feature Modeling",,
PS:ASE08,,"Hendrik Post, Carsten Sinz",ASE,2008,"Configuration Lifting: Verification Meets Software Configuration","model checking, type checking","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","SPL Type Checking, SPL Model Checking, Variability Encoding, CSUR14, PhD15",,
KA08,,"Christian K&auml;stner, Sven Apel",ASE,2008,"Type-Checking Software Product Lines&#8211;A Formal Approach","type checking","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","CSUR14, PhD15",,
T08,,"Thomas Th&uuml;m",(mastersthesis),2008,"Reasoning about Feature Model Edits","","","","","","Feature Modeling, Abstract Features, Feature Mapping",,
WSB+:SPLC08,,"Jules White, Douglas C. Schmidt, David Benavides, Pablo Trinidad, Antonio Ruiz-Cortes",SPLC,2008,"Automated Diagnosis of Product-Line Configuration Errors in Feature Models","","","","","","Feature Modeling",,
AL08,,"Sven Apel, Christian Lengauer",SC,2008,"Superimposition: A Language-Independent Approach to Software Composition","","","","","","",,
KNG:ICSE07,," Miryung Kim,  David Notkin,  Dan Grossman",ICSE,2007,"Automatic Inference of Structural Changes for Matching Across Program Versions","","","","","","program diffing",,
SK:CSMR07,," Petri Selonen,  Markus Kettunen",CSMR,2007,"Metamodel-Based Inference of Inter-Model Correspondence","","","","","","model diffing",,
NSC+:ICSE07,," Shiva Nejati,  Mehrdad Sabetzadeh,  Marsha Chechik,  Steve Easterbrook,  Pamela Zave",ICSE,2007,"Matching and Merging of Statecharts Specifications","","","","","","model diffing",,
S:NWMODE07,," Petri Selonen",NWMODE,2007,"A Review of UML Model Comparison Approaches","","","","","","two-way model diffing survey",,
FWP+:TSE07,,"Beat Fluri, Michael Wuersch, Martin Pinzger, Harald Gall",TSE,2007,"Change Distilling: Tree Differencing for Fine-Grained Source Code Change Extraction","","","","","","program diffing",,
MVS:ISSTA07,," Panagiotis Manolios,  Daron Vroon,  Gayatri Subramanian",ISSTA,2007,"Automating Component-Based System Assembly","model checking","unoptimized product-based analysis","components","","design","",,
JDB:SPLC07,," Hans Peter Jepsen,  Jan Gaardsted Dall,  Danilo Beuche",SPLC,2007,"Minimally Invasive Migration to Software Product Lines","","","","","","SPL Migration, VariantSync",,
DHG:ICECCS07,," Jens Dietrich,  John Hosking,  Jonathan Giles",ICECCS,2007,"A Formal Contract Language for Plugin-Based Software Engineering","","","","","","Design by Contract, Plug-ins",,
RW:REJ07,," Mark-Oliver Reiser,  Matthias Weber",REJ,2007,"Multi-Level Feature Trees: A Pragmatic Approach to Managing Highly Complex Product Families","","","","","","Compositional Feature Modeling",,
UGKB:ESEC07,," Engin Uzuncaova,  Daniel Garcia,  Sarfraz Khurshid,  Don Batory",ESEC,2007,"A Specification-Based Approach to Testing Software Product Lines","","","","","","SPL Specification, SPL Testing",,
CDS:ISSTA07,," Myra B. Cohen,  Matthew B. Dwyer,  Jiangfan Shi",ISSTA,2007,"Interaction Testing of Highly-configurable Systems in the Presence of Constraints","","","","","","",,
CDS:MUTATION07,," Myra B. Cohen,  Matthew B. Dwyer,  Jiangfan Shi",MUTATION,2007,"Exploiting Constraint Solving History to Construct Interaction Test Suites","","","","","","",,
BHJM:STTT07,," Dirk Beyer,  Thomas A. Henzinger,  Ranjit Jhala,  Rupak Majumdar",STTT,2007,"The Software Model Checker Blast: Applications to Software Engineering","","","","","","Model Checking",,
M:ICFI07,,"Andreas Metzger",ICFI,2007,"Quality Issues in Software Product Lines: Feature Interactions and Beyond (Invited Talk)","","","","","","SPL Verification, Feature Interaction",,
JWEG:MODELS07,," Praveen Jayaraman,  Jon Whittle,  Ahmed M. Elkhodary,  Hassan Gomaa",MODELS,2007,"Model Composition in Product Lines and Feature Interaction Detection Using Critical Pair Analysis","type checking","sample-based analysis","composition-based implementation","domain-independent specification","design","Feature Interaction, SPL Type Checking, CSUR14, PhD15",,
LNW:ESOP07,," Kim G. Larsen,  Ulrik Nyman,  Andrzej Wasowski",ESOP,2007,"Modal I/O Automata for Interface and Product Line Theories","model checking","analysis strategy undefined","composition-based implementation","specification undefined","design","SPL Modeling",,
LM:ICSE07,," Gary T. Leavens,  Peter M&uuml;ller",ICSE,2007,"Information Hiding and Visibility in Interface Specifications","","","","","","Design by Contract",,
KAB:SPLC07,," Christian K&auml;stner,  Sven Apel,  Don Batory",SPLC,2007,"A Case Study Implementing Features Using AspectJ","","","","","","Aspect Orientation, Feature Orientation",,
W:AOSD07,,"Dean Wampler",AOSD,2007,"Aspect-Oriented Design Principles: Lessons from Object-Oriented Design","","","","","","Aspect Orientation, Design by Contract",,
AGDS07,," Erik Arisholm,  Hans Gallis,  Tore Dyba,  Dag I.K. Sjoberg",TSE,2007,"Evaluating Pair Programming with Respect to System Complexity and Programmer Expertise","","","","","","PRG",,
L07,," Robyn Lutz",(techreport),2007,"Survey of Product-Line Verification and Validation Techniques","","","","","","SPL Verification, Survey",,
FM07,," Jean-Christophe Filliatre,  Claude Marche",Computer Aided Verification,2007,"The Why/Krakatoa/Caduceus Platform for Deductive Program Verification","","","","","","",,
LDL07,," Jing Liu,  Josh Dehlinger,  Robyn Lutz",JSS,2007,"Safety Analysis of Software Product Lines Using State-Based Modeling","fault-tree analysis, testing","family-product-based analysis","annotation-based implementation","family-wide specification, feature-based specification","design","SPL Testing",,
P:REFSQ07,,"Michael Poppleton",REFSQ,2007,"Towards Feature-Oriented Specification and Development with Event-B","model checking, theorem proving","feature-product-based analysis","components","feature-product-based specification","design","SPL Specification, SPL Model Checking, SPL Theorem Proving",,
A07,,"Sven Apel",(phdthesis),2007,"The Role of Features and Aspects in Software Development","","","","","","Aspect Orientation, Feature Orientation",,
BHS07,," Bernhard Beckert,  Reiner H&auml;hnle,  Peter Schmitt",(book),2007,"Verification of Object-Oriented Software: The KeY Approach","","","","","","Design by Contract, Preconditions Lazy",,
SSSPS:OSSPL07,,"Julio Sincero, Horst Schirmeier, Wolfgang Schr&ouml;der-Preikschat, Olaf Spinczyk",OSSPL,2007,"Is the Linux Kernel a Software Product Line?","","","","","","",,
BSTRC:VaMoS07,,"David Benavides, Sergio Segura, Pablo Trinidad, Antonio Ruiz-Cortes",VaMoS,2007,"FAMA: Tooling a Framework for the Automated Analysis of Feature Models","feature-model analysis","family-based analysis","implementation independent","specification independent","","Feature Modeling Tool, Feature-Model Analysis, Model Counting, BDD",,
HZS:AOSD07,," Shan Shan Huang,  David Zook,  Yannis Smaragdakis",AOSD,2007,"cJ: Enhancing Java with Safe Type Conditions","type checking","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","SPL Type Checking, compared to none, CSUR14, PhD15",,
RC07,,"Chanchal Kumar Roy, James R. Cordy",(techreport),2007,"A Survey on Software Clone Detection Research","","","","","","Code Clones, Survey",,
SNOPRSS07,,"Peter Sewell, Francesco Zappa Nardelli, Scott Owens, Gilles Peskine, Tom Ridge, Susmit Sarkar, Rok Strnisa",ICFP,2007,"Ott: Effective Tool Support for the Working Semanticist","","","","","","",,
SSP07,,"Rok Strnisa, Peter Sewell, Matthew Parkinson",OOPSLA,2007,"The Java Module System: Core Design and Semantic Definition","","","","","","",,
MHPSS:RE07,,"Andreas Metzger, Klaus Pohl, Patrick Heymans, Pierre-Yves Schobbens, Germain Saval",RE,2007,"Disambiguating the Documentation of Variability in Software Product Lines: A Separation of Concerns, Formalization and Automated Analysis","type checking","family-based analysis","annotation-based implementation","domain-independent specification","design","Feature Modeling, Abstract Features, Feature Mapping, SPL Type Checking, compared to none, CSUR14, PhD15",,
LSR07,,"Frank J. van der Linden, Klaus Schmid, Eelco Rommes",(book),2007,"Software Product Lines in Action: The Best Industrial Practice in Product Line Engineering","","","","","","",,
K07,,"Christian K&auml;stner",(mastersthesis),2007,"Aspect-Oriented Refactoring of Berkeley DB","","","","","","Aspect Orientation",,
B07,,"David Benavides",(phdthesis),2007,"On the Automated Analysis of Software Product Lines Using Feature Models - A Framework for Developing Automated Tool Support","","","","","","Feature Modeling",,
TBKC07,,"Sahil Thaker, Don Batory, David Kitchin, William Cook",GPCE,2007,"Safe Composition of Product Lines","type checking","family-based analysis","composition-based implementation","domain-independent specification","source code / program","Feature Orientation, SPL Type Checking, compared to none, CSUR14, PhD15",,
useALMK10,,"Sven Apel, Christian Lengauer, Don Batory, Bernhard M&ouml;ller, Christian K&auml;stner",(techreport),2007,"An Algebra for Feature-Oriented Software Development","","","","","","Feature Orientation",,
CW07,,"Krzysztof Czarnecki, Andrzej Wasowski",SPLC,2007,"Feature Diagrams and Logics: There and Back Again","","","","","","Feature Modeling",,
JK07,,"Mikolas Janota, Joseph Kiniry",SPLC,2007,"Reasoning about Feature Models in Higher-Order Logic","","","","","","Feature Modeling",,
SHTB07,,"Pierre-Yves Schobbens, Patrick Heymans, Jean-Christophe Trigaux, Yves Bontemps",ComNet,2007,"Generic Semantics of Feature Diagrams","","","","","","Feature Modeling",,
FS06,,"Cipriano Forza, Fabrizio Salvador",(book),2006,"Product Information Management for Mass Customization: Connecting Customer, Front-Office and Back-Office for Fast and Efficient Customization","","","","","","Configuration",,
DL:AUSE06,," Josh Dehlinger,  Robyn R. Lutz",AUSE,2006,"PLFaultCAT: A Product-Line Software Fault Tree Analysis Tool","fault-tree analysis, testing","family-product-based analysis","annotation-based implementation","family-wide specification, feature-based specification","design","",,
SHT:RE06,," Pierre-Yves Schobbens,  Patrick Heymans,  Jean-Christophe Trigaux",RE,2006,"Feature Diagrams: A Survey and a Formal Semantics","","","","","","Feature Modeling, Simple Constraints",,
DNS+:TOPLAS06,," Stephane Ducasse,  Oscar Nierstrasz,  Nathanael Sch&auml;rli,  Roel Wuyts,  Andrew P. Black",TOPLAS,2006,"Traits: A Mechanism for Fine-grained Reuse","","","","","","Modularity, Traits",,
NTJ06,," Clementine Nebut,  YvesLe Traon,  Jean-Marc Jezequel",(incollection),2006,"System Testing of Product Lines: From Requirements to Test Cases","","","","","","SPL Testing, SPL Specification, Design by Contract, Conjunctive Contract Refinement",,
CDS:ROSATEA06,," Myra B. Cohen,  Matthew B. Dwyer,  Jiangfan Shi",ROSATEA,2006,"Coverage and Adequacy in Software Product Line Testing","testing","product-based analysis","family-based implementation","family-based specification","","",,
GSS+06,," William G. Griswold,  Kevin Sullivan,  Yuanyuan Song,  Macneil Shonle,  Nishit Tewari,  Yuanfang Cai,  Hridesh Rajan",Software,2006,"Modular Software Design with Crosscutting Interfaces","","","","","","Aspect Orientation, Design by Contract",,
ALSU06,," Alfred V. Aho,  Monica S. Lam,  Ravi Sethi,  Jeffrey D. Ullman",(book),2006,"Compilers: Principles, Techniques, and Tools (2nd Edition)","","","","","","Compiler, Static Analysis",,
LBL:ICSE06,," Jia Liu,  Don Batory,  Christian Lengauer",ICSE,2006,"Feature Oriented Refactoring of Legacy Applications","","","","","","PRG, Feature Interaction, SPL Refactoring, Feature Orientation",,
SUST:AOAsia06,," Suguru Shinotsuka,  Naoyasu Ubayashi,  Hideaki Shinomi,  Tetsuo Tamai",AOAsia,2006,"An Extensible Contract Verifier for AspectJ","","","","","","Aspect Orientation, Design by Contract",,
RRDH06,,"Robby,  Edwin Rodriguez,  Matthew B. Dwyer,  John Hatcliff",STTT,2006,"Checking JML Specifications Using an Extensible Software Model Checking Framework","","","","","","Model Checking, Design by Contract",,
AGMO06,," Ivica Aracic,  Vaidas Gasiunas,  Mira Mezini,  Klaus Ostermann",TAOSD,2006,"An Overview of CaesarJ","","","","","","Modularity",,
LC06,," Gary T. Leavens,  Yoonsik Cheon",(misc),2006,"Design by Contract with JML","","","","","","Design by Contract, Verification",,
FUB:ROSATEA06,," Dario Fischbein,  Sebastian Uchitel,  Victor Braberman",ROSATEA,2006,"A Foundation for Behavioural Conformance in Software Product Line Architectures","model checking","family-based analysis","annotation-based implementation","family-wide specification","design","SPL Model Checking, CSUR14, PhD15",,
BBC+:FMCO06,," Gilles Barthe,  Lilian Burdy,  Julien Charles,  Benjamin Gregoire,  Marieke Huisman,  Jean-Louis Lanet,  Mariela Pavlova,  Antoine Requet",FMCO,2006,"JACK: A Tool for Validation of Security and Behaviour of Java Applications","","","","","","Design by Contract, Verification, Preconditions Strict",,
F06,," Bent Flyvbjerg",Qualitative Inquiry,2006,"Five Misunderstandings About Case-Study Research","","","","","","Research Method",,
CM06,,"Muffy Calder, Alice Miller",FMSD,2006,"Feature Interaction Detection by Pairwise Analysis of LTL Properties&#8211;A Case Study","","","","","","",,
KN06,," Tomoji Kishi,  Natsuko Noda",CACM,2006,"Formal Verification and Software Product Lines","model checking","unoptimized product-based analysis","annotation-based implementation","family-wide specification","design","CSUR14, PhD15",,
H:OOPSLA06,," Delesley Hutchins",OOPSLA,2006,"Eliminating Distinctions of Class: Using Prototypes to Model Virtual Classes","type checking","feature-product-based analysis","composition-based implementation","domain-independent specification","source code / program","CSUR14, PhD15",,
K06,,"Shmuel Katz",TAOSD,2006,"Aspect Categories and Classes of Temporal Properties","model checking, static analysis","regression-based analysis","composition-based implementation","feature-based specification","source code / program","Aspect Orientation, SPL Specification, SPL Static Analysis, CSUR14, PhD15",,
LBR06,,"Gary T. Leavens, Albert L. Baker, Clyde Ruby",SEN,2006,"Preliminary Design of JML: A Behavioral Interface Specification Language for Java","","","","","","Design by Contract, Preconditions Strict, Preconditions Lazy",,
ALS:ICSE06,," Sven Apel,  Thomas Leich,  Gunter Saake",ICSE,2006,"Aspectual Mixin Layers: Aspects and Features in Concert","","","","","","Aspect Orientation, Feature Orientation, Mixins",,
B:GTTSE06,," Don Batory",GTTSE,2006,"A Tutorial on Feature Oriented Programming and the AHEAD Tool Suite","","","","","","Feature Orientation",,
KG06,,"Cory J. Kapser, Michael W. Godfrey",JSME,2006,"Supporting the Analysis of Clones in Software Systems: A Case Study","","","","","","Code Clones",,
CP06,,"Krzysztof Czarnecki, Krzysztof Pietroszek",GPCE,2006,"Verifying Feature-Based Model Templates Against Well-Formedness OCL Constraints","type checking","family-based analysis","annotation-based implementation","domain-independent specification","design","Feature Modeling, SPL Type Checking, compared to none, CSUR14, PhD15, BDD",,
KV06,,"Florian Kamm&uuml;ller, Matthias V&ouml;sgen",FOAL,2006,"Towards Type Safety of Aspect-Oriented Languages","","","","","","Aspect Orientation, Type Checking",,
AWLF06,,"David Aspinall, David Winterstein, Christoph L&uuml;th, Ahsan Fayyaz",Eclipse,2006,"Proof General in Eclipse: System and Architecture Overview","","","","","","",,
B06,," Alan Bundy",Computer Journal,2006,"A Very Mathematical Dilemma","","","","","","",,
CKK06,,"Krzysztof Czarnecki, Chang Hwan Peter Kim, Karl Trygve Kalleberg",SPLC,2006,"Feature Models are Views on Ontologies","","","","","","Feature Modeling",,
TBRCST06,,"Pablo Trinidad, David Benavides, Antonio Ruiz-Cortes, Sergio Segura, Miguel Toro",APLE,2006,"Explanations for Agile Feature Models","","","","","","Feature Modeling",,
BRCTS06,,"David Benavides, Antonio Ruiz-Cortes, Pablo Trinidad, Sergio Segura",Jornadas de Ingeniera del Software y Bases de Datos,2006,"A Survey on the Automated Analyses of Feture Models","","","","","","Feature Modeling, Survey",,
BBRC06,,"Don Batory, David Benavides, Antonio Ruiz-Cortes",CACM,2006,"Automated Analyses of Feature Models: Challenges Ahead","","","","","","Feature Modeling",,
AGMKBdL06,,"Vander Alves, Rohit Gheyi, Tiago Massoni, Uira Kulesza, Paulo Borba, Carlos Jose Pereira de Lucena",GPCE,2006,"Refactoring Product Lines","","","","","","SPL Refactoring",,
BSTRC06,,"David Benavides, Sergio Segura, Pablo Trinidad, Antonio Ruiz-Cortes",SPLC,2006,"A First Step Towards a Framework for the Automated Analysis of Feature Models","","","","","","Feature Modeling",,
YGM:SEAS06,," Kentaro Yoshimura,  Dharmalingam Ganesan,  Dirk Muthig",SEAS,2006,"Assessing Merge Potential of Existing Engine Control Systems into a Product Line","","","","","","SPL Migration, Clone-and-Own, VariantSync",,
KWN:GI05,," Udo Kelter,  J&uuml;rgen Wehren,  J&ouml;rg Niere",Software Engineering,2005,"A Generic Difference Algorithm for UML Models.","","","","","","model diffing",,
ZS:ASE05,," Zhenchang Xing,  Eleni Stroulia",ASE,2005,"UMLDiff: An Algorithm for Object-Oriented Design Differencing","","","","","","model diffing",,
YMKI:PROFES05,," Tetsuo Yamamoto,  Makoto Matsushita,  Toshihiro Kamiya,  Katsuro Inoue",PROFES,2005,"Measuring Similarity of Large Software Systems Based on Source Code Correspondence","variant-preserving migration","product-based analysis","product-based implementation","","source code / program","specification undefined (none)",,
CK:CASSIS04,," David R. Cok,  Joseph Kiniry",CASSIS,2005,"ESC/Java2: Uniting ESC/Java and JML","","","","","","Design by Contract, Static Analysis, Theorem Proving",,
C05,," Curtis Clifton",(phdthesis),2005,"A Design Discipline and Language Features for Modular Reasoning in Aspect-Oriented Programs","","","","","","Aspect Orientation, Design by Contract",,
A:ECOOP05,," Jonathan Aldrich",ECOOP,2005,"Open Modules: Modular Reasoning About Advice","","","","","","Aspect Orientation",,
BEM:RISE05,," Stephanie Balzer,  Patrick Th. Eugster,  Bertrand Meyer",RISE,2006,"Can Aspects Implement Contracts?","","","","","","Aspect Orientation, Design by Contract",,
DNS:JACM05,," David Detlefs,  Greg Nelson,  James B. Saxe",JACM,2005,"Simplify: A Theorem Prover for Program Checking","","","","","","Theorem Proving",,
SGB05,," Mikael Svahnberg,  Jilles van Gurp,  Jan Bosch",SPE,2005,"A Taxonomy of Variability Realization Techniques: Research Articles","","","","","","SPL Implementation",,
BDN:OOPSLA05,," Alexandre Bergel,  Stephane Ducasse,  Oscar Nierstrasz",OOPSLA,2005,"Classbox/J: Controlling the Scope of Change in Java","","","","","","Feature Orientation",,
KM:ICSE05,," Gregor Kiczales,  Mira Mezini",ICSE,2005,"Aspect-Oriented Programming and Modular Reasoning","","","","","","Aspect Orientation",,
BL:PASTE05,," Mike Barnett,  K. Rustan M. Leino",PASTE,2005,"Weakest-Precondition of Unstructured Programs","","","","","","Verification",,
H:AUSE05,," Robert J. Hall",AUSE,2005,"Fundamental Nonmodularity in Electronic Mail","","","","","","Feature Interaction",,
CKLP:FMCO05,," Patrice Chalin,  Joseph Kiniry,  Gary T. Leavens,  Erik Poll",FMCO,2005,"Beyond Assertions: Advanced Specification and Verification with JML and ESC/Java2","","","","","","Design by Contract, Preconditions Unspecified",,
BCC+05,," Lilian Burdy,  Yoonsik Cheon,  David R. Cok,  Michael D. Ernst,  Joseph Kiniry,  Gary T. Leavens,  K. Rustan M. Leino,  Erik Poll",STTT,2005,"An Overview of JML Tools and Applications","","","","","","Design by Contract, Preconditions Unspecified",,
LKF:AUSE05,," Harry Li,  Shriram Krishnamurthi,  Kathi Fisler",AUSE,2005,"Modular Verification of Open Features Using Three-Valued Model Checking","model checking","feature-product-based analysis","composition-based implementation","feature-based specification","design","SPL Model Checking, CSUR14, PhD15",,
CA:GPCE05,," Krzysztof Czarnecki,  Michal Antkiewicz",GPCE,2005,"Mapping Features to Models: A Template Approach Based on Superimposed Variants","","","","","","",,
LS05,," David H. Lorenz,  Therapon Skotiniotis",CoRR,2005,"Extending Design by Contract for Aspect-Oriented Programming","","","","","","Aspect Orientation, Design by Contract, Preconditions Lazy",,
FK:VSTTE05,," Kathi Fisler,  Shriram Krishnamurthi",VSTTE,2005,"Decomposing Verification Around End-User Features","model checking","feature-product-based analysis","composition-based implementation","feature-based specification","design","SPL Model Checking, CSUR14, PhD15",,
ALRS05,,"Sven Apel, Thomas Leich, Marko Rosenm&uuml;ller, Gunter Saake",GPCE,2005,"FeatureC++: On the Symbiosis of Feature-Oriented and Aspect-Oriented Programming","","","","","","Aspect Orientation, Feature Orientation",,
W05,,"Stephanie Weirich",(misc),2005,"Formalization and Type-Soundness Proof for Featherweight Java in Coq","","","","","","",,
JavaSpec,,"James Gosling, Bill Joy, Guy Steele, Gilad Bracha",(book),2005,"The Java Language Specification, Third Edition","","","","","","Compiler",,
PBL05,,"Klaus Pohl, G&uuml;nter B&ouml;ckle, Frank J. van der Linden",(book),2005,"Software Product Line Engineering: Foundations, Principles and Techniques","","","","","","SPL Testing",,
T05,,"Tim Trew",SPLC,2005,"Enabling the Smooth Integration of Core Assets: Defining and Packaging Architectural Rules for a Family of Embedded Products","","","","","","",,
BSTRC05,,"David Benavides, Sergio Segura, Pablo Trinidad, Antonio Ruiz-Cortes",GTTSE,2006,"Using Java CSP Solvers in the Automated Analyses of Feature Models","","","","","","Feature Modeling",,
KC05,,"Chang Hwan Peter Kim, Krzysztof Czarnecki",ECMDA,2005,"Synchronizing Cardinality-Based Feature Models and Their Specializations","","","","","","Feature Modeling",,
CHE05b,,"Krzysztof Czarnecki, Simon Helsen, Ulrich Eisenecker",Software Process: Improvement and Practice,2005,"Staged Configuration through Specialization and Multi-Level Configuration of Feature Models","","","","","","Feature Modeling",,
WLSZP05,,"Hai Wang, Yuan Fang Li, Jing Sun, Hongyu Zhang, Jeff Pan",SWESE,2005,"A Semantic Web Approach to Feature Modeling and Verification","","","","","","",,
CHE05a,,"Krzysztof Czarnecki, Simon Helsen, Ulrich Eisenecker",Software Process: Improvement and Practice,2005,"Formalizing Cardinality-Based Feature Models and Their Specialization","","","","","","Feature Modeling",,
CK05,,"Krzysztof Czarnecki, Chang Hwan Peter Kim ",SF,2005,"Cardinality-Based Feature Modeling and Constraints: A Progress Report","","","","","","Feature Modeling",,
BTRC05,,"David Benavides, Pablo Trinidad, Antonio Ruiz-Cortes",SEKE,2005,"Using Constraint Programming to Reason on Feature Models","","","","","","Feature Modeling",,
useBTRC05,,"David Benavides, Antonio Ruiz-Cortes, Pablo Trinidad",CAiSE,2005,"Automated Reasoning on Feature Models","","","","","","Feature Modeling",,
SZLW05,,"Jing Sun, Hongyu Zhang, Yuan Fang Li, Hai Wang",ICECCS,2005,"Formal Semantics and Verification for Feature Modeling","","","","","","Feature Modeling",,
B05,,"Don Batory",SPLC,2005,"Feature Models, Grammars, and Propositional Formulas","","","","","","Feature Modeling",,
LAMS05,,"Thomas Leich, Sven Apel, Laura Marnitz, Gunter Saake",Eclipse,2005,"Tool Support for Feature-Oriented Software Development - FeatureIDE: An Eclipse-Based Approach","","","","","","Feature Modeling Tool, SPL Implementation Tool",,
AOH:ASE04,," Taweesup Apiwattanapong,  Alessandro Orso,  Mary Jean Harrold",ASE,2004,"A Differencing Algorithm for Object-Oriented Programs","","","","","","program diffing",,
HSJ+04,," Tarik Hadzic,  Sathiamoorthy Subbarayan,  Rune M. Jensen,  Henrik R. Andersen,  Jesper Moller,  Henrik Hulgaard",PCS,2004,"Fast Backtrack-Free Product Configuration using a Precompiled Solution Space Representation","","","","","","Decision Propagation, BDD",,
PH:Interfaces04,," Frits K. Pil,  Matthias Holweg",Interfaces,2004,"Linking Product Variety to Order-Fulfillment Strategies","","","","","","Configuration",,
TBG:VLHCC04,," Michael Toomim,  Andrew Begel,  Susan L. Graham",VLHCC,2004,"Managing Duplicated Code with Linked Editing","","","","","","VariantSync",,
MPY+:ICSE04,," A. Memon,  A. Porter,  C. Yilmaz,  A. Nagarajan,  D. Schmidt,  B. Natarajan",ICSE,2004,"Skoll: Distributed Continuous Quality Assurance","testing","","","","source code / program","product-based analysis?, domain-independent specification?",,
GLRW:ICSR04,,"Birgit Geppert, J. Jenny Li, Frank R&ouml;&szlig;ler, David M. Weiss",ICSR,2004,"Towards Generating Acceptance Tests for Product Lines","testing","unoptimized product-based analysis","","","","feature-based specification? family-based specification?",,
DL:HASE04,,"Josh Dehlinger, Robyn R. Lutz",HASE,2004,"Software Fault Tree Analysis for Product Lines","fault-tree analysis, testing","family-product-based analysis","annotation-based implementation","family-wide specification, feature-based specification","design","",,
DHT:IST04,,"Peter Dybjer, Qiao Haiyan, Makoto Takeyama",IST,2004,"Verifying Haskell Programs by Combining Testing, Model Checking and Interactive Theorem Proving","","","","","","Testing, Model Checking, Theorem Proving",,
P:SoSyM04,," Christian Prehofer",SoSyM,2004,"Plug-and-Play Composition of Features and Feature Interactions with Statechart Diagrams","analysis method undefined","analysis strategy undefined","composition-based implementation","specification undefined","design","SPL Modeling, Feature Interaction",,
BFKH:ASE04,," Colin Blundell,  Kathi Fisler,  Shriram Krishnamurthi,  Pascal Van Hentenryck",ASE,2004,"Parameterized Interfaces for Open System Verification of Product Lines","model checking","feature-product-based analysis","composition-based implementation","family-wide specification","design","SPL Model Checking, CSUR14, PhD15",,
HP04,," David Hovemeyer,  William Pugh",SIGPLAN,2004,"Finding Bugs is Easy","","","","","","Static Analysis",,
KFG:FSE04,," Shriram Krishnamurthi,  Kathi Fisler,  Michael Greenberg",FSE,2004,"Verifying Aspect Advice Modularly","","","","","","Aspect Orientation, SPL Verification",,
MO:FSE04,," Mira Mezini,  Klaus Ostermann",FSE,2004,"Variability Management with Feature-Oriented Programming and Aspects","","","","","","Feature Orientation, Aspect Orientation",,
BPS:SCP04,,"Danilo Beuche, Holger Papajewski, Wolfgang Schr&ouml;der-Preikschat",SCP,2004,"Variability Management with Feature Models","","","","","","",,
TTK04,," Antti Tevanlinna,  Juha Taina,  Raine Kauppinen",SEN,2004,"Product Family Testing: A Survey","","","","","","SPL Testing, Survey",,
useLS05,," Therapon Skotiniotis,  David H. Lorenz",OOPSLA,2004,"Cona: Aspects for Contracts and Contracts for Aspects","","","","","","Aspect Orientation, Design by Contract, Strict Preconditions",,
AC04,," Michal Antkiewicz,  Krzysztof Czarnecki",Eclipse,2004,"FeaturePlugin: Feature Modeling Plug-In for Eclipse","","","","","","Feature Modeling Tool",,
CCHW04,," Adrian Colyer,  Andy Clement,  George Harley,  Matthew Webster",(book),2004,"Eclipse AspectJ: Aspect-Oriented Programming With AspectJ and the Eclipse AspectJ Development Tools","","","","","","",,
G04,,"Georges Gonthier",(techreport),2004,"A Computer-Checked Proof of the Four Colour Theorem","","","","","","",,
SH04,,"Mark Staples, Derrick Hill",APSEC,2004,"Experiences Adopting Software Product Line Development without a Product Line Architecture","","","","","","VariantSync",,
BC04,,"Yves Bertot, Pierre Casteran",(book),2004,"Interactive Theorem Proving and Program Development - Coq'Art: The Calculus of Inductive Constructions","","","","","","Theorem Proving",,
STBMPSF04,,"Mirjam Steger, Christian Tischer, Birgit Boss, Andreas M&uuml;ller, Oliver Pertler, Wolfgang Stolz, Stefan Ferber",SPLC,2004,"Introducing PLA at Bosch Gasoline Systems: Experiences and Practices","","","","","","",,
ZZM04,,"Wei Zhang, Haiyan Zhao, Hong Mei",Formal Methods and Software Engineering,2004,"A Propositional Logic-Based Method for Verification of Feature Models","","","","","","Feature Modeling",,
useCHE05b,,"Krzysztof Czarnecki, Simon Helsen, Ulrich Eisenecker",SPLC,2004,"Staged Configuration Using Feature Models","","","","","","Feature Modeling",,
AMS04,,"Timo Asikainen, Tomi M&auml;nnist&ouml;, Timo Soininen",SPLC,2004,"Using a Configurator for Modelling and Configuring Software Product Lines based on Feature Models","","","","","","Feature Modeling",,
BHST04,,"Yves Bontemps, Patrick Heymans, Pierre-Yves Schobbens, Jean-Christophe Trigaux",SVMPD,2004,"Semantics of Feature Diagrams","","","","","","",,
BSR04,,"Don Batory, Jacob N. Sarvela, Axel Rauschmayer",TSE,2004,"Scaling Step-Wise Refinement","","","","","","Feature Orientation",,
FV:SPE03,,"D. Faust, Chris Verhoef",SPE,2003,"Software Product Line Migration and Deployment","","","","","","VariantSync, SPL Migration",,
B:ICSE03,," Don Batory",ICSE,2003,"A Tutorial on Feature-Oriented Programming and Product Lines","","","","","","Feature Orientation",,
MC:PFE03,,"Mike Mannion, Javier Camara",PFE,2003,"Theorem Proving for Product Line Model Verification","feature-model analysis","","","","","",,
BG:PFE03,,"Antonia Bertolino, Stefania Gnesi",PFE,2003,"PLUTO: A Test Methodology for Product Families","testing","unoptimized product-based analysis","","","","feature-based specification? family-based specification?",,
H:JMLC03,," C. A. R. Hoare",JMLC,2003,"The Verifying Compiler: A Grand Challenge for Computing Research","","","","","","Verification",,
AK03,," Colin Atkinson,  Thomas K&uuml;hne",Software,2003,"Model-Driven Development: A Metamodeling Foundation","","","","","","MDD",,
H:NODe03,," Stephan Herrmann",NODe,2003,"Object Teams: Improving Modularity for Crosscutting Collaborations","","","","","","Feature Orientation",,
SDNB:ECOOP03,," Nathanael Sch&auml;rli,  Stephane Ducasse,  Oscar Nierstrasz,  Andrew P. Black",ECOOP,2003,"Traits: Composable Units of Behaviour","","","","","","Modularity, Traits",,
MO:AOSD03,," Mira Mezini,  Klaus Ostermann",AOSD,2003,"Conquering Aspects with Caesar","","","","","","Modularity",,
LG03,," Robyn Lutz,  Gerald C. Gannod",JSS,2003,"Analysis of a Software Product Line Architecture: An Experience Report","model checking","feature-product-based analysis","components","family-wide specification","design","SPL Model Checking",,
CKMR03,,"Muffy Calder, Mario Kolberg, Evan H. Magill, Stephan Reiff-Marganiec",ComNet,2003,"Feature Interaction: A Critical Review and Considered Forecast","","","","","","Feature Interaction, Survey",,
ZR03,,"Jianjun Zhao, Martin C. Rinard",FASE,2003,"Pipa: A Behavioral Interface Specification Language for AspectJ","analysis method undefined","unoptimized product-based analysis","aspects","feature-based specification","source code / program","Aspect Orientation, Design by Contract, Preconditions Lazy",,
B03,,"Danilo Beuche",(phdthesis),2003,"Composition and Construction of Embedded Software Families","","","","","","",,
SRP03,,"Detlef Streitferdt, Matthias Riebisch, Ilka Philippow",ECBS,2003,"Details of Formalized Relations in Feature Models Using OCL","","","","","","Feature Modeling",,
CBBHROA03,,"Fei Cao, Barrett Bryant, Carol Burt, Zhisheng Huang, Rajeev Raje, Andrew Olson, Mikhail Auguston",SERP,2003,"Automating Feature-Oriented Domain Analysis","","","","","","",,
R03,,"Matthias Riebisch",(incollection),2003,"Towards a More Precise Definition of Feature Models","","","","","","Feature Modeling",,
MGR:ICDE02,," Sergey Melnik,  Hector Garcia-Molina,  Erhard Rahm",ICDE,2002,"Similarity Flooding: A Versatile Graph Matching Algorithm and Its Application to Schema Matching","","","","","","model diffing",,
DM:JAIR02,," Adnan Darwiche,  Pierre Marquis",JAIR,2002,"A Knowledge Compilation Map","","","","","","Knowledge Compilation",,
KKI:TSE02,," Toshihiro Kamiya,  Shinji Kusumoto,  Katsuro Inoue",TSE,2002,"CCFinder: A Multilinguistic Token-based Code Clone Detection System for Large Scale Source Code","variant-preserving migration","product-based analysis","product-based implementation","","source code / program","specification undefined (none)",,
M:TSE02,," Tom Mens",TSE,2002,"A State-of-the-Art Survey on Software Merging","","","","","","Software Merging, VariantSync",,
FF:ICFP02,," Robert Bruce Findler,  Matthias Felleisen",ICFP,2002,"Contracts for Higher-Order Functions","","","","","","Design by Contract, Mixins",,
ABGM:TSE02,," David L. Atkins,  Thomas Ball,  Todd L. Graves,  Audris Mockus",TSE,2002,"Using Version Control Data to Evaluate the Impact of Software Tools: A Case Study of the Version Editor","","","","","","VariantSync",,
CL:FOAL02,," Curtis Clifton,  Gary T. Leavens",FOAL,2002,"Observers and Assistants: A Proposal for Modular Aspect-Oriented Reasoning","","","","","","Aspect Orientation, Design by Contract",,
UT:AOSD02,," Naoyasu Ubayashi,  Tetsuo Tamai",AOSD,2002,"Aspect-Oriented Programming with Model Checking","model checking","unoptimized product-based analysis","composition-based implementation","family-wide specification","source code / program","Aspect Orientation, Model Checking, CSUR14, PhD15",,
FLL+:PLDI02,," Cormac Flanagan,  K. Rustan M. Leino,  Mark Lillibridge,  Greg Nelson,  James B. Saxe,  Raymie Stata",PLDI,2002,"Extended Static Checking for Java","","","","","","Static Analysis",,
NWP02,," Tobias Nipkow,  Markus Wenzel,  Lawrence C. Paulson",(book),2002,"Isabelle/HOL: A Proof Assistant for Higher-Order Logic","","","","","","Theorem Proving",,
SB02,," Yannis Smaragdakis,  Don Batory",TOSEM,2002,"Mixin Layers: An Object-Oriented Implementation Technique for Refinements and Collaboration-Based Designs","","","","","","Modularity, Feature Orientation, Mixins",,
LKF02,," Harry Li,  Shriram Krishnamurthi,  Kathi Fisler",FSE,2002,"Verifying Cross-Cutting Features as Open Systems","model checking","feature-product-based analysis","composition-based implementation","feature-based specification","design","Feature Orientation, SPL Model Checking, Feature Interaction, CSUR14, PhD15",,
K:PFE02,,"Charles W. Krueger",PFE,2002,"Easing the Transition to Software Mass Customization","","","","","","",,
APB:SCAM02,,"Lerina Aversano, Massimiliano Di Penta, Ira D. Baxter",SCAM,2002,"Handling Preprocessor-Conditioned Declarations","type checking","family-based analysis","annotation-based implementation","domain-independent specification","source code / program","compared to none, CSUR14, PhD15",,
B02,," Kent Beck",(book),2002,"Test Driven Development: By Example","","","","","","",,
KLD:S02,,"Kyo C. Kang, Jaejoon Lee, Patrick Donohoe",IEEE Software,2002,"Feature-Oriented Product Line Engineering","","","","","","",,
SS:TOSEM02,," Michael Schrefl,  Markus Stumptner",TOSEM,2002,"Behavior-Consistent Specialization of Object Life Cycles","","","","","","Specification",,
SP02,," Wolfgang Schult,  Andreas Polze",ISORC,2002,"Aspect-Oriented Programming with C# and .NET","","","","","","",,
SGSP02,," Olaf Spinczyk,  Andreas Gal,  Wolfgang Schr&ouml;der-Preikschat",TOOLSpacific,2002,"AspectC++: An Aspect-Oriented Extension to the C++ Programming Language","","","","","","Aspect Orientation",,
LKF:ASE02,,"Harry Li, Shriram Krishnamurthi, Kathi Fisler",ASE,2002,"Interfaces for Modular Feature Verification","model checking","feature-product-based analysis","composition-based implementation","feature-based specification","design","SPL Model Checking, CSUR14, PhD15",,
K02,," Howard Kim",(phdthesis),2002,"AspectC#: An AOSD implementation for C#","","","","","","Aspect Orientation",,
NPW02,,"Tobias Nipkow, Lawrence C. Paulson, Markus Wenzel",(book),2002,"Isabelle/HOL - A Proof Assistant for Higher-Order Logic","","","","","","",,
P02,,"Benjamin C. Pierce",(book),2002,"Types and Programming Languages","","","","","","Compiler",,
vDK02,,"Arie van Deursen, Paul Klint",Computing and Information Technology,2002,"Domain-Specific Language Design Requires Feature Descriptions","","","","","","",,
RBSP02,,"Matthias Riebisch, Kai B&ouml;llert, Detlef Streitferdt, Ilka Philippow",IDPT,2002,"Extending Feature Diagrams with UML Multiplicities","","","","","","",,
BLHM02,," Don Batory,  Roberto E. Lopez-Herrejon,  Jean-Philippe Martin",ASE,2002,"Generating Product-Lines of Product-Families","","","","","","",,
dJV02,,"Merijn de Jonge, Joost Visser",GP,2002,"Grammars as Feature Diagrams","","","","","","",,
M02,,"Mike Mannion",SPLC,2002,"Using First-Order Logic for Product Line Model Validation","","","","","","",,
KKT:ASE11,,"Timo Kehrer, Udo Kelter, Gabriele Taentzer",ASE,2011,"A Rule-Based Approach to the Semantic Lifting of Model Differences in the Context of Model Versioning","","","","","","semantic lifting",,
SBF:IJPE01,,"Giovani Da Silveira, Denis Borenstein, Flávio S. Fogliatto",IJPE,2001,"Mass Customization: Literature Review and Research Directions","","","","","","Product Configuration",,
FLF:ESECFSE01,," Robert Bruce Findler,  Mario Latendresse,  Matthias Felleisen",ESECFSE,2001,"Behavioral Contracts and Behavioral Subtyping","","","","","","Design by Contract",,
NCA:REFLECTION01,," Torsten Nelson,  Donald D. Cowan,  Paulo S. C. Alencar",REFLECTION,2001,"Supporting Formal Verification of Crosscutting Concerns","model checking","feature-product-based analysis","composition-based implementation","family-wide specification","design","SPL Model Checking, CSUR14, PhD15",,
LB:GCSE01,," Roberto E. Lopez-Herrejon,  Don Batory",GCSE,2001,"A Standard Problem for Evaluating Product-Line Methodologies","","","","","","Feature Orientation",,
PR01,," Malte Plath,  Mark Ryan",SCP,2001,"Feature Integration Using a Feature Construct","model checking","sample-based analysis","composition-based implementation","feature-based specification","design","Feature Interaction, SPL Model Checking, CSUR14, PhD15",,
CN01,," Paul Clements,  Linda Northrop",(book),2001,"Software Product Lines: Practices and Patterns","","","","","","",,
Sch01,,"Johann Schumann",(book),2001,"Automated Theorem Proving in Software Engineering","","","","","","",,
FK01,," Kathi Fisler,  Shriram Krishnamurthi",ESECFSE,2001,"Modular Verification of Collaboration-Based Software Designs","model checking","feature-product-based analysis","feature modules","family-wide specification","design","Feature Orientation, SPL Model Checking, CSUR14, PhD15",,
KHHKPG01,," Gregor Kiczales,  Erik Hilsdale,  Jim Hugunin,  Mik Kersten,  Jeffrey Palm,  William G. Griswold",ECOOP,2001,"An Overview of AspectJ","","","","","","Aspect Orientation",,
AG01,,"Michalis Anastasopoules, Critina Gacek",SEN,2001,"Implementing Product Line Variabilities","","","","","","",,
IPW01,,"Atsushi Igarashi, Benjamin C. Pierce, Philip Wadler",TOPLAS,2001,"Featherweight Java: A Minimal Core Calculus for Java and GJ","","","","","","",,
vGBS01,,"Jilles van Gurp, Jan Bosch, Mikael Svahnberg",WICSA,2001,"On the Notion of Variability in Software Product Lines","","","","","","",,
S01,,"Joel Spolsky",(book),2001,"User Interface Design for Programmers","","","","","","",,
DWMB:JOM00,,"Rebecca Duray, Peter T. Ward, Glenn W. Milligan, William L. Berry",JOM,2000,"Approaches to Mass Customization: Configurations and Empirical Validation","","","","","","Product Configuration",,
CR:IWPC00,," Kunrong Chen,  Vaclav Rajlich",IWPC,2000,"Case Study of Feature Location Using Dependence Graph","","","","","","Feature Location",,
HP:STTT00,,"Klaus Havelund, Thomas Pressburger",STTT,2000,"Model Checking Java Programs Using Java PathFinder","","","","","","Model Checking",,
VHBP:ASE00,," Willem Visser,  Klaus Havelund,  Guillaume P. Brat,  Seungjoon Park",ASE,2000,"Model Checking Programs","","","","","","Model Checking",,
HA:FSE00,," Jonathan D. Hay,  Joanne M. Atlee",FSE,2000,"Composing Features and Resolving Interactions","","","","","","Feature Interaction, Modularity, Feature Orientation",,
BCS:SPLC00,," Don Batory,  Rich Cardone,  Yannis Smaragdakis",SPLC,2000,"Object-Oriented Frameworks and Product Lines","","","","","","Feature Orientation, Frameworks, Design by Contract",,
KPRS:GCSE00,," Herbert Klaeren,  Elke Pulvermueller,  Awais Rashid,  Andreas Speck",GCSE,2001,"Aspect Composition Applying the Design by Contract Principle","static analysis","unoptimized product-based analysis","aspects","feature-based specification","source code / program","Aspect Orientation, Design by Contract, Preconditions Unspecified, CSUR14, PhD15",,
B00,,"Abhay Bhorkar",(techreport),2000,"A Run-time Assertion Checker for Java Using JML","","","","","","Design by Contract, Preconditions Strict, Runtime Assertions",,
SB00,,"Mikael Svahnberg, Jan Bosch",IW-SAPF,2000,"Issues Concerning Variability in Software Product Lines","","","","","","",,
CE00,,"Krzysztof Czarnecki, Ulrich Eisenecker",(book),2000,"Generative Programming: Methods, Tools, and Applications","","","","","","",,
F00,,"Martin Fowler",(book),2000,"Refactoring: Improving the Design of Existing Code","","","","","","",,
GK:XPS99,," Andreas G&uuml;nter,  Christian K&uuml;hn",XPS,1999,"Knowledge-Based Configuration: Survey and Future Directions","","","","","","Knowledge-Based Configuration",,
BFK+:SSR99,," Joachim Bayer,  Oliver Flege,  Peter Knauber,  Roland Laqua,  Dirk Muthig,  Klaus Schmid,  Tanya Widen,  Jean-Marc DeBaud",SSR,1999,"PuLSE: A Methodology to Develop Software Product Lines","","","","","","VariantSync",,
CCGR:CAV99,," Alessandro Cimatti,  Edmund M. Clarke,  Fausto Giunchiglia,  Marco Roveri",CAV,1999,"NuSMV: A New Symbolic Model Verifier","","","","","","Model Checking",,
TOHS:ICSE99,," Peri Tarr,  Harold Ossher,  William Harrison,  Stanley M. Sutton Jr.",ICSE,1999,"N Degrees of Separation: Multi-Dimensional Separation of Concerns","","","","","","PRG, Modularity, Separation of Concerns, Feature Orientation, Design Pattern",,
CGP99,," Edmund M. Clarke,  Orna Grumberg,  Doron A. Peled",(book),1999,"Model Checking","","","","","","",,
PMDL99,,"Jean-Francois Patenaude, Ettore Merlo, Michel Dagenais, Bruno Lague",IWPC,1999,"Extending Software Quality Assessment Techniques to Java Systems","","","","","","",,
IPW99,,"Atsushi Igarashi, Benjamin C. Pierce, Philip Wadler",OOPSLA,1999,"Featherweight Java: A Minimal Core Calculus for Java and GJ","","","","","","",,
HK:JR98,," Cynthia Huffman,  Barbara E. Kahn",JR,1998,"Variety for Sale: Mass Customization or Mass Confusion?","","","","","","Product Configuration",,
K:TOOLS98,," R. Kramer",TOOLSpacific,1998,"iContract - The Java(Tm) Design by Contract(Tm) Tool","","","","","","Preprocessors, Design by Contract",,
KC98,," Joseph Kiniry,  Elaine Cheong",(techreport),1998,"JPP: A Java Pre-Processor","","","","","","Preprocessors, Design by Contract",,
BCK98,," Len Bass,  Paul Clements,  Rick Kazman",(book),1998,"Software Architecture in Practice","","","","","","SPL",,
L:OOPSLA98,," K. Rustan M. Leino",OOPSLA,1998,"Data Groups: Specifying the Modification of Extended State","","","","","","Design by Contract",,
CW:CSUR98,," Reidar Conradi,  Bernhard Westfechtel",CSUR,1998,"Version Models for Software Configuration Management","","","","","","VariantSync",,
TWFL:IWSSD98,," C. Reid Turner,  Alexander L. Wolf,  Alfonso Fuggetta,  Luigi Lavazza",IWSSD,1998,"Feature Engineering","","","","","","Feature-Oriented Software Development",,
ML:OOPSLA98,," Mira Mezini,  Karl Lieberherr",OOPSLA,1998,"Adaptive Plug-and-Play Components for Evolutionary Software Development","","","","","","Design by Contract, Feature Orientation",,
FKF:POPL98,," Matthew Flatt,  Shriram Krishnamurthi,  Matthias Felleisen",POPL,1998,"Classes and Mixins","","","","","","Modularity, Mixins",,
SB:ECOOP98,," Yannis Smaragdakis,  Don Batory",ECOOP,1998,"Implementing Layered Designs with Mixin Layers","","","","","","Feature Orientation, SPL Implementation, Mixins",,
GFA98,,"Martin L. Griss, John Favaro, Massimo d' Alessandro",ICSR,1998,"Integrating Feature Modeling with the RSEB","","","","","","Feature Modeling",,
KKLKKS98,,"Kyo C. Kang, Sajoong Kim, Jaejoon Lee, Kijoo Kim, Gerard Jounghyun Kim, Euiseob Shin",Annals of Software Engineering,1998,"FORM: A Feature-Oriented Reuse Method with Domain-Specific Reference Architectures","","","","","","",,
H:TSE97,," Gerard J. Holzmann",TSE,1997,"The Model Checker SPIN","","","","","","Model Checking",,
N97,," George C. Necula",POPL,1997,"Proof-Carrying Code","","","","","","Verification",,
JM97,," Jean-Marc Jezequel,  Bertrand Meyer",Computer,1997,"Design by Contract: The Lessons of Ariane","","","","","","Design by Contract, Preconditions Strict",,
M97,," Steven S. Muchnick",(book),1997,"Advanced Compiler Design and Implementation","","","","","","Compiler, Static Analysis",,
C97,,"Luca Cardelli",(incollection),1997,"Type Systems","","","","","","",,
P97,,"Christian Prehofer",ECOOP,1997,"Feature-Oriented Programming: A Fresh Look at Objects","","","","","","Feature Orientation",,
KLMMLLI97,,"Gregor Kiczales, John Lamping, Anurag Mendhekar, Chris Maeda, Cristina Lopes, Jean-Marc Loingtier, John Irwin",ECOOP,1997,"Aspect-Oriented Programming","","","","","","Aspect Orientation",,
CRG+:SIGMOD96,," Sudarshan S. Chawathe,  Anand Rajaraman,  Hector Garcia-Molina,  Jennifer Widom",SIGMOD,1996,"Change Detection in Hierarchically Structured Information","","","","","","tree differencing",,
AS96,," Harold Abelson,  Gerald J. Sussman",(book),1996,"Structure and Interpretation of Computer Programs","","","","","","Verification",,
ORR+:CAV96,," Sam Owre,  Sreeranga P. Rajan,  John M. Rushby,  Natarajan Shankar,  Mandayam K. Srivas",CAV,1996,"PVS: Combining Specification, Proof Checking, and Model Checking","","","","","","Model Checking, Theorem Proving",,
JSHS96,," Ralf Jungclaus,  Gunter Saake,  Thorsten Hartmann,  Cristina Sernadas",TOIS,1996,"TROLL: A Language for Object-Oriented Specification of Information Systems","","","","","","Specification, Object Orientation",,
VN:OOPSLA96,," Michael VanHilst,  David Notkin",OOPSLA,1996,"Using Role Components in Implement Collaboration-Based Designs","","","","","","Feature Orientation",,
DL96,,"Krishna Kishore Dhara, Gary T. Leavens",ICSE,1996,"Forcing Behavioral Subtyping through Specification Inheritance","","","","","","Design by Contract",,
MLM96,,"Jean Mayrand, Claude Leblanc, Ettore Merlo",ICSM,1996,"Experiment on the Automatic Detection of Function Clones in a Software System Using Metrics","","","","","","",,
MMC:OOPSLA95,," Philippe Mulet,  Jacques Malenfant,  Pierre Cointe",OOPSLA,1995,"Towards a Methodology for Explicit Composition of MetaObjects","","","","","","Design by Contract, Mixins",,
NT95,," Oscar Nierstrasz,  Dennis Tsichritzis",(book),1995,"Object-Oriented Software Composition","","","","","","",,
GHJV95,,"Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides",(book),1995,"Design Patterns: Elements of Reusable Object-Oriented Software","","","","","","",,
B95,,"Brenda S. Baker",WCRE,1995,"On Finding Duplication and Near-Duplication in Large Software Systems","","","","","","",,
LW:TOPLAS94,," Barbara H. Liskov,  Jeannette M. Wing",TOPLAS,1994,"A Behavioral Notion of Subtyping","","","","","","Design by Contract",,
N94,,"Jakob Nielsen",(book),1994,"Usability Engineering","","","","","","",,
WF94,,"Andrew K. Wright, Matthias Felleisen",Information and Computation,1994,"A Syntactic Approach to Type Soundness","","","","","","",,
BMW:ICSE93,," Ted J. Biggerstaff,  Bharat G. Mitbander,  Dallas Webster",ICSE,1993,"The Concept Assignment Problem in Program Understanding","","","","","","Feature Location",,
HO:OOPSLA93,," William Harrison,  Harold Ossher",OOPSLA,1993,"Subject-Oriented Programming: A Critique of Pure Objects","","","","","","Feature Orientation",,
J93,,"J. Howard Johnson",CASCON,1993,"Identifying Redundancy in Source Code Using Fingerprints","","","","","","",,
CDK93,,"Edmund M. Clarke, Ioana A. Draghicescu, Robert P. Kurshan",Information Processing Letters,1993,"A Unified Approach for Showing Language Containment and Equivalence Between Various Types of $omega$-Automata","","","","","","",,
W92,," Alan Wills",OOZ,1992,"Specification in Fresco","","","","","","Design by Contract",,
ORS:CADE92,," Sam Owre,  John M. Rushby,  Natarajan Shankar",CADE,1992,"PVS: A Prototype Verification System","","","","","","Theorem Proving",,
H:ECOOP92,," Ian M. Holland",ECOOP,1992,"Specifying Reusable Components Using Contracts","","","","","","Design by Contract",,
M92,," Bertrand Meyer",Computer,1992,"Applying Design by Contract","","","","","","Design by Contract, Preconditions Strict",,
C:ECOOP91,," Elspeth Cusack",ECOOP,1991,"Inheritance in Object-Oriented Z","","","","","","Design by Contract",,
A:FOOL91,," Pierre America",FOOL,1991,"Designing an Object-Oriented Programming Language with Behavioural Subtyping","","","","","","Design by Contract",,
HV91,," Joseph Y. Halpern,  Moshe Y. Vardi",(incollection),1991,"Model Checking vs. Theorem Proving: A Manifesto","","","","","","Model Checking, Theorem Proving",,
BC:ECOOP90,," Gilad Bracha,  William Cook",ECOOP,1990,"Mixin-Based Inheritance","","","","","","Modularity, Feature Orientation, Mixins",,
HHG:ECOOP90,," Richard Helm,  Ian M. Holland,  Dipayan Gangopadhyay",ECOOP,1990,"Contracts: Specifying Behavioral Compositions in Object-Oriented Systems","","","","","","Design by Contract",,
KCHNP90,,"Kyo C. Kang, Sholom G. Cohen, James A. Hess, William E. Novak, A. Spencer Peterson",(techreport),1990,"Feature-Oriented Domain Analysis (FODA) Feasibility Study","","","","","","Feature Modeling",,
BDC+:SETSS89,," Thomas F. Bowen,  Frank S. Dworack,  Ching-Hua Chow,  Nancy Griffeth,  Gary E. Herman,  Yow-Jian Lin",SETSS,1989,"The Feature Interaction Problem in Telecommunications Systems","","","","","","Feature Interaction",,
MF89,,"Sanjay Mittal, Felix Frayman",ICAI,1989,"Towards a Generic Model of Configuration Tasks","","","","","","",,
M88,," Bertrand Meyer",(book),1988,"Object-Oriented Software Construction","","","","","","Design by Contract",,
D87,,"Stanley M. Davis",(book),1987,"Future Perfect","","","","","","Product Configuration",,
Z87,," John A. Zachman",IBMSJ,1987,"A Framework for Information Systems Architecture","","","","","","",,
LG86,," Barbara Liskov,  John Guttag",(book),1986,"Abstraction and Specification in Program Development","","","","","","Design by Contract",,
D86,," Ian F. Darwin",(book),1986,"Checking C Programs with Lint","","","","","","Static Analysis",,
MM:SPE85,," Webb Miller,  Eugene W. Myers",SPE,1985,"A File Comparison Program","","","","","","program diffing",,
S85,," Brian Cantwell Smith",SIGCAS Comput. Soc.,1985,"The Limits of Correctness","","","","","","PRG, Verification",,
SE84,," Elliot Soloway,  Kate Ehrlich",TSE,1984,"Empirical Studies of Programming Knowledge","","","","","","PRG",,
S83,,"Robert Sedgewick",(book),1983,"Algorithms","","","","","","",,
G81,," David Gries",(book),1981,"The Science of Programming","","","","","","Design by Contract, Weakest Preconditions",,
W:ICSE81,," Mark Weiser",ICSE,1981,"Program Slicing","","","","","","Static Analysis",,
S81,,"David H. Sanford",American Philosophical Quarterly,1981,"Independent Predicates","","","","","","",,
P:ICSE78,," David L. Parnas",ICSE,1978,"Designing Software for Ease of Extension and Contraction","","","","","","Modularity",,
CC:POPL77,," Patrick Cousot,  Radhia Cousot",POPL,1977,"Abstract Interpretation: A Unified Lattice Model for Static Analysis of Programs by Construction or Approximation of Fixpoints","","","","","","Static Analysis",,
D76,," Edsger W. Dijkstra",(book),1976,"A Discipline of Programming","","","","","","Design by Contract, Weakest Preconditions",,
P76,," David L. Parnas",TSE,1976,"On the Design and Development of Program Families","","","","","","Modularity, SPL Design, SPL Implementation, Clone-and-Own, Don",,
K76,," James C. King",CACM,1976,"Symbolic Execution and Program Testing","","","","","","",,
D75,," Edsger W. Dijkstra",CACM,1975,"Guarded Commands, Nondeterminacy and Formal Derivation of Programs","","","","","","Verification",,
LZ74,," Barbara H. Liskov,  Stephen Zilles",SIGPLAN,1974,"Programming with Abstract Data Types","","","","","","Modularity",,
D72,," Edsger W. Dijkstra",(incollection),1972,"Chapter I: Notes on Structured Programming","","","","","","Don, Modularity, SPL Implementation, SPL Analysis",,
H72,," C. A. R. Hoare",Acta Informatica,1972,"Proof of Correctness of Data Representations","","","","","","Design by Contract",,
P72,," David L. Parnas",CACM,1972,"On the Criteria to be used in Decomposing Systems into Modules","","","","","","Modularity, Design by Contract",,
W71,," Niklaus Wirth",CACM,1971,"Program Development by Stepwise Refinement","","","","","","SPL Design, SPL Evolution",,
H69,," C. A. R. Hoare",CACM,1969,"An Axiomatic Basis for Computer Programming","","","","","","Design by Contract",,
I68,," Malcolm Douglas McIlroy",NATOSE,1968,"Mass Produced Software Components","","","","","","Don",,
D68,," Edsger W. Dijkstra",CACM,1968,"Go To Statement Considered Harmful","","","","","","Modularity",,
F67,," Robert W. Floyd",Mathematical Aspects of Computer Science,1967,"Assigning Meanings to Programs","","","","","","Theorem Proving, Design by Contract",,
T49,,"Alan Turing",Conference on High Speed Automatic Calculating Machines,1949,"Checking a Large Routine","","","","","","Modularity, Specification, Verification",,
F1879,," Gottlob Frege",(book),1879,"Begriffsschrift, eine der arithmetischen nachgebildete Formelsprache des reinen Denkens","","","","","","Theorem Proving",,
spl-strategies,," Thomas Th&uuml;m",(misc),2012,"Analysis Strategies for Software Product Lines","","","","","","",,
cpp,,"GCC Development Team",(misc),2011,"The C Preprocessor","","","","","","Preprocessors",,
antenna,,"J&ouml;rg Pleumann, Omry Yadan, Erik Wetterberg",(misc),2011,"Antenna: An Ant-to-End Solution For Wireless Java","","","","","","Preprocessors",,
munge,,"Munge Development Team",(misc),2011,"Munge: A Purposely-Simple Java Preprocessor","","","","","","Preprocessors",,
useFM07,,"Why Development Team",(misc),0,"Why: A Software Verification Platform","","","","","","Theorem Proving",,
sat4j,,"Daniel Le Berre",(misc),0,"SAT4J: A Satisfiability Library for Java","","","","","","",,
homogeneous,,"Mathieu Acher",(misc),2010,"An Homogeneous Feature-Based Approach","","","","","","",,
gears,,"Big Lever Software Inc.",(misc),2010,"Gears: A Software Product Line Engineering Tool","","","","","","Feature Modeling Tool",,
pure-variants,,"pure::systems",(misc),2017,"pure::variants","","","","","","Feature Modeling Tool",,
cdl3,," Bart Veer,  John Dallaway",(misc),2017,"The eCos Component Writer's Guide","","","","","","",,
cdl,,"Bart Veer, John Dallaway",(misc),2011,"The eCos Component Writer's Guide","","","","","","",,
LinuxKernelConf,,"Roman Zippel",(misc),0,"LinuxKernelConf Documentation","","","","","","",,
kconfig,,"The Kernel Development Community",(misc),2018,"KConfig Language","","","","","","Feature Modeling Tool",,
AHEAD,,"Don Batory",(misc),0,"AHEAD Tool Suite","","","","","","Feature Orientation",,
Coq:mailinglist,,"Coq Community",(misc),0,"The Coq Mailing List","","","","","","Theorem Proving",,
Coq:website,,"Coq Development Team",(misc),0,"The Coq Proof Assistant","","","","","","Theorem Proving",,
Coq:manual,,"Coq Development Team",(manual),2010,"The Coq Proof Assistant Reference Manual","","","","","","Theorem Proving",,
JML:manual,,"Gary T. Leavens, Erik Poll, Curtis Clifton, Yoonsik Cheon, Clyde Ruby, David Cok, Peter M&uuml;ller, Joseph Kiniry, Patrice Chalin, Daniel M. Zimmerman, Werner Dietl",(manual),2013,"JML Reference Manual","","","","","","Design by Contract",,
